{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _commonspacemanager = _interopRequireDefault(require(\"./commonspacemanager\"));\n\nvar _lib = require(\"@fusioncharts/core/src/lib\");\n\nvar _number = _interopRequireDefault(require(\"@fusioncharts/utils/src/scale-utils/interpolators/number\"));\n\nvar _cartesianAxis = _interopRequireDefault(require(\"../../factories/cartesian-axis\"));\n\nvar _canvasAxisRefCartesian = _interopRequireDefault(require(\"../../factories/canvas-axis-ref-cartesian\"));\n\nvar _vcanvas = _interopRequireDefault(require(\"../../factories/vcanvas\"));\n\nvar _mouseTracker = _interopRequireDefault(require(\"../../factories/mouse-tracker\"));\n\nvar _equal = _interopRequireDefault(require(\"@fusioncharts/utils/src/string/equal\"));\n\nvar _tools = require(\"@fusioncharts/core/src/toolbox/tools\");\n\nvar mathMax = Math.max,\n    mathMin = Math.min,\n    UNDEF,\n    setDimension = function setDimension(dimension1, dimension2) {\n  if (dimension1 < dimension2 && dimension2 > 0) {\n    return dimension2 - dimension1;\n  }\n\n  return 0;\n},\n    onAxisVisibilityChange = function onAxisVisibilityChange(e) {\n  var chart = e.sender,\n      scrollPosition = e.data.scrollPosition,\n      axis = chart.getChildren(\"xAxis\")[0],\n      axisConfig = axis.config,\n      visibleConfig = axis.getVisibleConfig(),\n      visibleRange = visibleConfig.maxValue - visibleConfig.minValue,\n      interpolateMax = axisConfig.axisRange.max - visibleRange,\n      interpolate = (0, _number.default)(axisConfig.axisRange.min, interpolateMax),\n      visibleStart = axisConfig.isReverse ? interpolate(1 - scrollPosition) : interpolate(scrollPosition);\n  axis.setVisibleConfig(visibleStart, visibleStart + visibleRange);\n};\n\nvar queryOptions = {\n  wrtVisible: true\n};\n\nvar Cartesian = function (_CommonSpaceManager) {\n  (0, _inheritsLoose2.default)(Cartesian, _CommonSpaceManager);\n\n  function Cartesian() {\n    var _this;\n\n    _this = _CommonSpaceManager.call(this) || this;\n\n    _this.registerFactory(\"axis\", _cartesianAxis.default, [\"canvas\"]);\n\n    _this.registerFactory(\"canvas\", _canvasAxisRefCartesian.default);\n\n    _this.registerFactory(\"vCanvas\", _vcanvas.default, [\"axis\"]);\n\n    _this.registerFactory(\"mouseTracker\", _mouseTracker.default, [\"canvas\"]);\n\n    _this.addEventListener(\"onScroll\", onAxisVisibilityChange);\n\n    return _this;\n  }\n\n  Cartesian.getName = function getName() {\n    return \"Cartesian\";\n  };\n\n  var _proto = Cartesian.prototype;\n\n  _proto.getName = function getName() {\n    return \"Cartesian\";\n  };\n\n  _proto.getType = function getType() {\n    return \"chartAPI\";\n  };\n\n  _proto._allocateXAxisLabelSpace = function _allocateXAxisLabelSpace(axis) {\n    var iapi = this,\n        config = iapi.config,\n        dimensions = axis.getAxisEndLabelDisplaySpace(),\n        left = dimensions.left,\n        right = dimensions.right,\n        top = dimensions.top,\n        sum,\n        bottom = dimensions.bottom,\n        availableWidth = config.availableWidth,\n        availableHeight = config.availableHeight,\n        canvasLeft = config.canvasLeft,\n        canvasRight = config.canvasRight,\n        canvasTop = config.canvasTop,\n        canvasBottom = config.canvasBottom,\n        width = config.width,\n        height = config.height;\n\n    if (top + bottom > availableHeight) {\n      sum = top + bottom;\n      top = availableHeight * top / sum;\n      bottom = availableHeight * bottom / sum;\n    }\n\n    if (left + right > availableWidth) {\n      sum = left + right;\n      left = availableWidth * left / sum;\n      right = availableWidth * right / sum;\n    }\n\n    left = setDimension(canvasLeft, left);\n    right = setDimension(width - canvasRight, right);\n    top = setDimension(canvasTop, top);\n    bottom = setDimension(height - canvasBottom, bottom);\n\n    iapi._allocateSpace({\n      left: left,\n      right: right,\n      top: top,\n      bottom: bottom\n    });\n  };\n\n  _proto._setCategories = function _setCategories() {\n    var iapi = this,\n        dataObj = iapi.getFromEnv(\"dataSource\"),\n        xAxis = iapi.getChildren(\"xAxis\"),\n        categories = dataObj.categories && dataObj.categories.length && dataObj.categories[0].category;\n    xAxis && xAxis[0].setTickValues(categories);\n  };\n\n  _proto._feedAxesRawData = function _feedAxesRawData() {\n    var iapi = this,\n        chartConfig = iapi.config,\n        dataObj = iapi.getFromEnv(\"dataSource\"),\n        xAxisConf,\n        yAxisConf;\n    xAxisConf = iapi.getSpecificxAxisConf();\n    yAxisConf = iapi.getSpecificyAxisConf();\n    xAxisConf.vtrendlines = (0, _lib.extend2)([], dataObj.vtrendlines);\n    yAxisConf.trendlines = (0, _lib.extend2)([], dataObj.trendlines);\n\n    if (chartConfig.isstacked) {\n      yAxisConf.isPercent = (0, _lib.pluckNumber)(chartConfig.stack100percent, 0);\n    }\n\n    return {\n      yAxisConf: [yAxisConf],\n      xAxisConf: [xAxisConf]\n    };\n  };\n\n  _proto.allocatePosition = function allocatePosition() {\n    this.setScrollBarDimension();\n  };\n\n  _proto.setScrollBarDimension = function setScrollBarDimension() {\n    var chart = this;\n\n    if (chart.getChildren(\"scrollBar\") && chart.getChildren(\"scrollBar\")[0]) {\n      chart.getChildren(\"scrollBar\")[0].setDimension(chart.getScrollbarDimension());\n    }\n  };\n\n  _proto.getSpecificxAxisConf = function getSpecificxAxisConf() {\n    var iapi = this,\n        chartAttrs = iapi.getFromEnv(\"chart-attrib\"),\n        chartConfig = iapi.config,\n        is3D = iapi.config.is3D,\n        xAxisConf = iapi.getBasexAxisConf();\n    xAxisConf.isReverse = chartConfig.reverseXAxis;\n    xAxisConf.axisLineColor = (0, _lib.pluck)(chartAttrs.xaxislinecolor, chartAttrs.axislinecolor, \"#000000\");\n    xAxisConf.showAlternateGridColor = (0, _lib.pluckNumber)(chartAttrs.showalternatevgridcolor, 0);\n    xAxisConf.numDivLines = (0, _lib.pluckNumber)(chartAttrs.numvdivlines, chartConfig.numVDivLines);\n    xAxisConf.axisName = chartAttrs.xaxisname;\n    xAxisConf.setAdaptiveMin = (0, _lib.pluckNumber)(chartAttrs.setadaptivexmin, chartConfig.setadaptivexmin, chartConfig.setadaptivexmin);\n    xAxisConf.showLimits = (0, _lib.pluckNumber)(chartAttrs.showvlimits, chartConfig.showvlimits);\n    xAxisConf.showDivLineValues = (0, _lib.pluckNumber)(chartAttrs.showvdivlinevalues, chartAttrs.showvdivlinevalues, chartConfig.showvdivlinevalues);\n    xAxisConf.zeroPlaneThickness = (0, _lib.pluckNumber)(chartAttrs.vzeroplanethickness, chartAttrs.vdivlinethickness, chartConfig.zeroplanethickness, 2);\n    xAxisConf.zeroPlaneAlpha = (0, _lib.pluckNumber)(chartAttrs.vzeroplanealpha, chartAttrs.vdivlinealpha, chartConfig.zeroplanealpha);\n    xAxisConf.showZeroPlaneValue = (0, _lib.pluckNumber)(chartAttrs.showvzeroplanevalue, chartConfig.showzeroplanevalue);\n    xAxisConf.showAxisLine = is3D ? 0 : (0, _lib.pluckNumber)(chartAttrs.showxaxisline, chartAttrs.showaxislines, chartAttrs.drawAxisLines, chartConfig.showxaxisline, 0);\n    xAxisConf.maxLabelHeight = chartAttrs.maxlabelheight;\n    xAxisConf.showZeroPlane = (0, _lib.pluckNumber)(chartAttrs.showvzeroplane, chartConfig.showzeroplane);\n    return xAxisConf;\n  };\n\n  _proto.getSpecificyAxisConf = function getSpecificyAxisConf() {\n    var iapi = this,\n        chartAttrs = iapi.getFromEnv(\"chart-attrib\"),\n        chartConfig = iapi.config,\n        is3D = iapi.config.is3D,\n        palleteString = is3D ? _lib.chartPaletteStr.chart3D : _lib.chartPaletteStr.chart2D,\n        isReverse = chartConfig.isInverse,\n        colorM = iapi.getFromEnv(\"color-manager\"),\n        showYAxisZeroPlane = (0, _lib.pluckNumber)(chartAttrs.showzeroplane, chartConfig.showzeroplane, 1),\n        showYAxisZeroPlaneValue = (0, _lib.pluckNumber)(chartAttrs.showzeroplanevalue, chartConfig.showzeroplanevalue),\n        outCanfontSizeWithUnit = (0, _lib.pluckFontSizeMaintainUnit)(chartAttrs.outcnvbasefontsize, chartAttrs.basefontsize, 10);\n\n    if (!showYAxisZeroPlane && showYAxisZeroPlaneValue === UNDEF) {\n      showYAxisZeroPlaneValue = 0;\n    }\n\n    return {\n      isVertical: true,\n      isReverse: !isReverse,\n      isOpposit: (0, _equal.default)(chartAttrs.yaxisposition, \"right\"),\n      outCanfontFamily: (0, _lib.pluck)(chartAttrs.outcnvbasefont, chartAttrs.basefont, \"Verdana,sans\"),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: (0, _lib.pluck)(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor, colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/gi, \"#$1\"),\n      axisBreaks: chartAttrs.yaxisbreaks,\n      axisNamePadding: chartAttrs.yaxisnamepadding,\n      axisValuePadding: chartAttrs.yaxisvaluespadding,\n      axisNameFont: chartAttrs.yaxisnamefont,\n      axisNameFontSize: this.computeFontSize(chartAttrs.yaxisnamefontsize),\n      axisNameFontSizeWithUnit: chartAttrs.yaxisnamefontsize,\n      axisNameFontColor: chartAttrs.yaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.yaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.yaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.yaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.yaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.yaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.yaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.yaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.yaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.yaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.yaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.yaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.yaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.yaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.yaxisnameborderdashgap,\n      axisNameWidth: chartAttrs.yaxisnamewidth,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      rotateAxisName: (0, _lib.pluckNumber)(chartAttrs.rotateyaxisname, 1),\n      axisName: chartAttrs.yaxisname,\n      divLineColor: (0, _lib.pluck)(chartAttrs.divlinecolor, colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: (0, _lib.pluck)(chartAttrs.divlinealpha, is3D ? colorM.getColor(\"divLineAlpha3D\") : colorM.getColor(\"divLineAlpha\")),\n      divLineThickness: (0, _lib.pluckNumber)(chartAttrs.divlinethickness, 1),\n      divLineIsDashed: Boolean((0, _lib.pluckNumber)(chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 0)),\n      divLineDashLen: (0, _lib.pluckNumber)(chartAttrs.divlinedashlen, 4),\n      divLineDashGap: (0, _lib.pluckNumber)(chartAttrs.divlinedashgap, 2),\n      showAlternateGridColor: (0, _lib.pluckNumber)(chartAttrs.showalternatehgridcolor, 1),\n      alternateGridColor: (0, _lib.pluck)(chartAttrs.alternatehgridcolor, colorM.getColor(\"altHGridColor\")),\n      alternateGridAlpha: (0, _lib.pluck)(chartAttrs.alternatehgridalpha, colorM.getColor(\"altHGridAlpha\")),\n      numDivLines: (0, _lib.pluckNumber)(chartAttrs.numdivlines, chartConfig.numDivLines),\n      axisMinValue: chartConfig.yRangeMin || chartAttrs.yaxisminvalue,\n      axisMaxValue: chartConfig.yRangeMax || chartAttrs.yaxismaxvalue,\n      setAdaptiveMin: (0, _lib.pluckNumber)(chartAttrs.setadaptivesymin, chartAttrs.setadaptiveymin, chartConfig.setAdaptiveMin),\n      adjustDiv: chartAttrs.adjustdiv,\n      labelStep: chartAttrs.yaxisvaluesstep,\n      showAxisValues: (0, _lib.pluckNumber)(chartAttrs.showyaxisvalues, chartAttrs.showyaxisvalue, chartConfig.showyaxisvalues),\n      showLimits: (0, _lib.pluckNumber)(chartAttrs.showyaxislimits, chartAttrs.showlimits, iapi.showLimits),\n      showDivLineValues: (0, _lib.pluckNumber)(chartAttrs.showdivlinevalues, chartAttrs.showdivlinevalue, chartConfig.showdivlinevalues),\n      showZeroPlane: showYAxisZeroPlane,\n      zeroPlaneColor: chartAttrs.zeroplanecolor,\n      zeroPlaneThickness: (0, _lib.pluckNumber)(chartAttrs.zeroplanethickness, chartAttrs.divlinethickness, chartConfig.zeroplanethickness, 2),\n      zeroPlaneAlpha: (0, _lib.pluckNumber)(chartAttrs.zeroplanealpha, chartAttrs.divlinealpha, chartConfig.zeroplanealpha),\n      showZeroPlaneValue: showYAxisZeroPlaneValue,\n      showZeroPlaneOnTop: chartConfig.showzeroplaneontop,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      showAxisLine: is3D ? 0 : (0, _lib.pluckNumber)(chartAttrs.showyaxisline, chartAttrs.showaxislines, chartAttrs.drawAxisLines, chartConfig.showyaxisline, 0),\n      axisLineThickness: (0, _lib.pluckNumber)(chartAttrs.yaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: (0, _lib.pluckNumber)(chartAttrs.yaxislinealpha, chartAttrs.axislinealpha, 100),\n      axisLineColor: (0, _lib.pluck)(chartAttrs.yaxislinecolor, chartAttrs.axislinecolor, \"#000000\"),\n      forceTrendBelow: !!chartConfig.is3D,\n      labelFont: chartAttrs.yaxisvaluefont,\n      labelFontSize: this.computeFontSize(chartAttrs.yaxisvaluefontsize),\n      labelFontSizeWithUnit: chartAttrs.yaxisvaluefontsize,\n      labelFontColor: chartAttrs.yaxisvaluefontcolor,\n      labelAlpha: chartAttrs.yaxisvaluealpha,\n      labelFontBold: chartAttrs.yaxisvaluefontbold,\n      labelFontItalic: chartAttrs.yaxisvaluefontitalic,\n      labelBdrColor: chartAttrs.yaxisvaluebordercolor,\n      labelBdrAlpha: chartAttrs.yaxisvalueborderalpha,\n      labelBgAlpha: chartAttrs.yaxisvaluebgalpha,\n      labelLink: chartAttrs.yaxisvaluelink,\n      labelBgColor: chartAttrs.yaxisvaluebgcolor,\n      labelBdrThickness: chartAttrs.yaxisvalueborderthickness,\n      labelBdrPadding: chartAttrs.yaxisvalueborderpadding,\n      labelBdrRadius: chartAttrs.yaxisvalueborderradius,\n      labelBdrDashed: chartAttrs.yaxisvalueborderdashed,\n      labelBdrDashLen: chartAttrs.yaxisvalueborderdashlen,\n      labelBdrDashGap: chartAttrs.yaxisvalueborderdashgap\n    };\n  };\n\n  _proto.getBasexAxisConf = function getBasexAxisConf() {\n    var iapi = this,\n        chartAttrs = iapi.getFromEnv(\"chart-attrib\"),\n        is3D = iapi.config.is3D,\n        palleteString = is3D ? _lib.chartPaletteStr.chart3D : _lib.chartPaletteStr.chart2D,\n        colorM = iapi.getFromEnv(\"color-manager\"),\n        outCanfontSizeWithUnit = (0, _lib.pluckFontSizeMaintainUnit)(chartAttrs.outcnvbasefontsize, chartAttrs.basefontsize, 10);\n    return {\n      isVertical: false,\n      isOpposit: (0, _equal.default)(chartAttrs.xaxisposition, \"top\"),\n      outCanfontFamily: (0, _lib.pluck)(chartAttrs.outcnvbasefont, chartAttrs.basefont, \"Verdana,sans\"),\n      outCanfontSize: this.computeFontSize(outCanfontSizeWithUnit),\n      outCanfontSizeWithUnit: outCanfontSizeWithUnit,\n      outCancolor: (0, _lib.pluck)(chartAttrs.outcnvbasefontcolor, chartAttrs.basefontcolor, colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/gi, \"#$1\"),\n      axisNamePadding: chartAttrs.xaxisnamepadding,\n      axisValuePadding: chartAttrs.labelpadding,\n      axisNameFont: chartAttrs.xaxisnamefont,\n      axisNameFontSize: this.computeFontSize(chartAttrs.xaxisnamefontsize),\n      axisNameFontSizeWithUnit: chartAttrs.xaxisnamefontsize,\n      axisNameFontColor: chartAttrs.xaxisnamefontcolor,\n      axisNameFontBold: chartAttrs.xaxisnamefontbold,\n      axisNameFontItalic: chartAttrs.xaxisnamefontitalic,\n      axisNameBgColor: chartAttrs.xaxisnamebgcolor,\n      axisNameBorderColor: chartAttrs.xaxisnamebordercolor,\n      axisNameAlpha: chartAttrs.xaxisnamealpha,\n      axisNameFontAlpha: chartAttrs.xaxisnamefontalpha,\n      axisNameBgAlpha: chartAttrs.xaxisnamebgalpha,\n      axisNameBorderAlpha: chartAttrs.xaxisnameborderalpha,\n      axisNameBorderPadding: chartAttrs.xaxisnameborderpadding,\n      axisNameBorderRadius: chartAttrs.xaxisnameborderradius,\n      axisNameBorderThickness: chartAttrs.xaxisnameborderthickness,\n      axisNameBorderDashed: chartAttrs.xaxisnameborderdashed,\n      axisNameBorderDashLen: chartAttrs.xaxisnameborderdashlen,\n      axisNameBorderDashGap: chartAttrs.xaxisnameborderdashgap,\n      useEllipsesWhenOverflow: chartAttrs.useellipseswhenoverflow,\n      divLineColor: (0, _lib.pluck)(chartAttrs.vdivlinecolor, chartAttrs.divlinecolor, colorM.getColor(palleteString.divLineColor)),\n      divLineAlpha: (0, _lib.pluck)(chartAttrs.vdivlinealpha, chartAttrs.divlinealpha, is3D ? colorM.getColor(\"divLineAlpha3D\") : colorM.getColor(\"divLineAlpha\")),\n      divLineThickness: (0, _lib.pluckNumber)(chartAttrs.vdivlinethickness, chartAttrs.divlinethickness, 1),\n      divLineIsDashed: Boolean((0, _lib.pluckNumber)(chartAttrs.vdivlinedashed, chartAttrs.vdivlineisdashed, chartAttrs.divlinedashed, chartAttrs.divlineisdashed, 0)),\n      divLineDashLen: (0, _lib.pluckNumber)(chartAttrs.vdivlinedashlen, chartAttrs.divlinedashlen, 4),\n      divLineDashGap: (0, _lib.pluckNumber)(chartAttrs.vdivlinedashgap, chartAttrs.divlinedashgap, 2),\n      alternateGridColor: (0, _lib.pluck)(chartAttrs.alternatevgridcolor, colorM.getColor(\"altVGridColor\")),\n      alternateGridAlpha: (0, _lib.pluck)(chartAttrs.alternatevgridalpha, colorM.getColor(\"altVGridAlpha\")),\n      labelFont: chartAttrs.labelfont,\n      labelFontSize: this.computeFontSize(chartAttrs.labelfontsize),\n      labelFontSizeWithUnit: chartAttrs.labelfontsize,\n      labelFontColor: chartAttrs.labelfontcolor,\n      labelAlpha: chartAttrs.labelalpha,\n      labelFontBold: chartAttrs.labelfontbold,\n      labelFontItalic: chartAttrs.labelfontitalic,\n      labelBdrColor: chartAttrs.labelbordercolor,\n      labelBdrAlpha: chartAttrs.labelborderalpha,\n      labelLink: chartAttrs.labellink,\n      labelBgColor: chartAttrs.labelbgcolor,\n      labelBdrThickness: chartAttrs.labelborderthickness,\n      labelBdrPadding: chartAttrs.labelborderpadding,\n      labelBdrRadius: chartAttrs.labelborderradius,\n      labelBdrDashed: chartAttrs.labelborderdashed,\n      labelBgAlpha: chartAttrs.labelbgalpha,\n      labelBdrDashLen: chartAttrs.labelborderdashlen,\n      labelBdrDashGap: chartAttrs.labelborderdashgap,\n      axisMinValue: chartAttrs.xaxisminvalue,\n      axisMaxValue: chartAttrs.xaxismaxvalue,\n      adjustDiv: chartAttrs.adjustvdiv,\n      labelDisplay: chartAttrs.labeldisplay,\n      showLabels: chartAttrs.showlabels,\n      rotateLabels: chartAttrs.rotatelabels,\n      slantLabel: (0, _lib.pluckNumber)(chartAttrs.slantlabels, chartAttrs.slantlabel),\n      labelStep: (0, _lib.pluckNumber)(chartAttrs.labelstep, chartAttrs.xaxisvaluesstep),\n      showAxisValues: (0, _lib.pluckNumber)(chartAttrs.showxaxisvalues, chartAttrs.showxaxisvalue),\n      zeroPlaneColor: chartAttrs.vzeroplanecolor,\n      trendlineColor: chartAttrs.trendlinecolor,\n      trendlineToolText: chartAttrs.trendlinetooltext,\n      trendlineThickness: chartAttrs.trendlinethickness,\n      trendlineAlpha: chartAttrs.trendlinealpha,\n      showTrendlinesOnTop: chartAttrs.showtrendlinesontop,\n      axisLineThickness: (0, _lib.pluckNumber)(chartAttrs.xaxislinethickness, chartAttrs.axislinethickness, 1),\n      axisLineAlpha: (0, _lib.pluckNumber)(chartAttrs.xaxislinealpha, chartAttrs.axislinealpha, 100)\n    };\n  };\n\n  _proto.getConfig = function getConfig(confName) {\n    return confName ? this.config[confName] : this.config;\n  };\n\n  _proto._getSumValueSpace = function _getSumValueSpace(maxAvailableSpace) {\n    var iapi = this,\n        dim = {},\n        config = iapi.config,\n        isBar = iapi.isBar,\n        chartAttr = iapi.getFromEnv(\"dataSource\").chart,\n        showSum = config.showSum = (0, _lib.pluckNumber)(chartAttr.showsum, config.showSum, 0),\n        stack100Percent = (0, _lib.pluckNumber)(config.stack100percent),\n        isStacked = config.isstacked,\n        width = 0,\n        i,\n        stackManagers = [],\n        height = 0;\n    iapi.iterateComponents(function (child) {\n      if (child.getName() === \"cartesianStackGroup\" || child.getName() === \"marimekkoStackgroup\") {\n        stackManagers.push(child);\n      }\n    });\n\n    if (showSum && stack100Percent && isStacked && stackManagers.length) {\n      for (i = stackManagers.length - 1; i >= 0; i--) {\n        dim = stackManagers[i].getMaxSumValueSpace();\n\n        if (!isBar) {\n          height = Math.max(height, dim.maxHeight);\n        } else {\n          width = Math.max(width, dim.maxWidth);\n        }\n      }\n\n      if (height > maxAvailableSpace) {\n        height = maxAvailableSpace;\n      }\n\n      if (width > maxAvailableSpace) {\n        width = maxAvailableSpace;\n      }\n    }\n\n    return {\n      top: height,\n      right: width\n    };\n  };\n\n  _proto.setAxisDimention = function setAxisDimention() {\n    var iapi = this,\n        xAxis = iapi.getChildren(\"xAxis\") && iapi.getChildren(\"xAxis\")[0],\n        yAxis = iapi.getChildren(\"yAxis\") && iapi.getChildren(\"yAxis\")[0],\n        scrollbarConfig = iapi.getChildren(\"scrollBar\") && iapi.getChildren(\"scrollBar\")[0] && iapi.getChildren(\"scrollBar\")[0].config,\n        config = iapi.config,\n        xDepth = config.xDepth || 0,\n        chartAttr = iapi.getFromEnv(\"chart-attrib\"),\n        chartAttrCanvasLeftPadding = (0, _lib.pluckNumber)(chartAttr.canvasleftpadding),\n        chartAttrCanvasRightPadding = (0, _lib.pluckNumber)(chartAttr.canvasrightpadding),\n        canvasConfig = iapi.getChildren(\"canvas\") && iapi.getChildren(\"canvas\")[0].config,\n        canvasBorderWidth = canvasConfig && canvasConfig.canvasBorderWidth,\n        hasScrollBar = iapi.isScrollEnabled(),\n        shift = (hasScrollBar || config.is3D) && config.shift || 0,\n        canvasPadding = canvasConfig.canvasPadding,\n        canvasLeft = canvasConfig.canvasLeft,\n        canvasRight = canvasLeft + canvasConfig.canvasWidth,\n        canvasPaddingLeft = canvasConfig.canvasPaddingLeft,\n        canvasPaddingRight = canvasConfig.canvasPaddingRight,\n        canvasTop = canvasConfig.canvasTop,\n        sumValueSpaceTop = config.sumValueSpace && config.sumValueSpace.top || 0,\n        canvasPaddingTop = canvasConfig.canvasPaddingTop,\n        finalCanvasLeftPadding,\n        finalCanvasRightPadding;\n\n    if (chartAttrCanvasLeftPadding == null) {\n      finalCanvasLeftPadding = Math.max(canvasPaddingLeft, canvasPadding);\n    } else {\n      finalCanvasLeftPadding = chartAttrCanvasLeftPadding;\n    }\n\n    if (chartAttrCanvasRightPadding == null) {\n      finalCanvasRightPadding = Math.max(canvasPaddingRight, canvasPadding);\n    } else {\n      finalCanvasRightPadding = chartAttrCanvasRightPadding;\n    }\n\n    xAxis && xAxis.setAxisConfig({\n      canvasPaddingLeft: finalCanvasLeftPadding,\n      canvasPaddingRight: finalCanvasRightPadding\n    });\n    xAxis && xAxis.setAxisDimention({\n      x: canvasLeft + xDepth + finalCanvasLeftPadding,\n      y: xAxis.config.isOpposit ? canvasTop - canvasBorderWidth - (hasScrollBar && +scrollbarConfig.isOpposite === xAxis.config.isOpposit ? shift : 0) - sumValueSpaceTop : config.canvasBottom + (config.is3D || hasScrollBar && +scrollbarConfig.isOpposite === xAxis.config.isOpposit ? shift : 0) + canvasBorderWidth,\n      opposite: xAxis.config.isOpposit ? config.canvasBottom + shift + canvasBorderWidth : canvasTop - canvasBorderWidth - shift,\n      axisLength: canvasConfig.canvasWidth - xDepth - finalCanvasLeftPadding - finalCanvasRightPadding\n    });\n    yAxis && yAxis.setAxisDimention({\n      x: yAxis.config.isOpposit ? canvasRight + canvasBorderWidth : canvasLeft - canvasBorderWidth,\n      y: canvasTop + canvasPaddingTop,\n      opposite: yAxis.config.isOpposit ? canvasLeft - canvasBorderWidth : canvasRight + canvasBorderWidth,\n      axisLength: canvasConfig.canvasHeight - canvasPaddingTop - canvasConfig.canvasPaddingBottom\n    });\n  };\n\n  _proto._getTrendLineMinMax = function _getTrendLineMinMax(type, axsType) {\n    var iapi = this,\n        axisType = axsType,\n        trendLines = type === \"v\" ? iapi.getFromEnv(\"dataSource\").vtrendlines : iapi.getFromEnv(\"dataSource\").trendlines,\n        retObj = {\n      max: -Infinity,\n      min: Infinity\n    },\n        trendLineObj,\n        i,\n        ii,\n        ln,\n        lnn;\n    axisType = axisType || \"p\";\n\n    if (trendLines) {\n      for (i = 0, ln = trendLines.length; i < ln; i += 1) {\n        for (ii = 0, lnn = trendLines[i].line ? trendLines[i].line.length : 0; ii < lnn; ii += 1) {\n          trendLineObj = trendLines[i].line[ii];\n\n          if (axisType === \"s\" && trendLineObj.parentyaxis !== \"s\" || axisType !== \"s\" && trendLineObj.parentyaxis === \"s\") {\n            continue;\n          }\n\n          retObj.max = mathMax(trendLineObj.startvalue || -Infinity, trendLineObj.endvalue || -Infinity, retObj.max);\n          retObj.min = mathMin(trendLineObj.startvalue || Infinity, trendLineObj.endvalue || Infinity, retObj.min);\n        }\n      }\n    }\n\n    return retObj;\n  };\n\n  _proto.setScrollType = function setScrollType(type) {\n    if (type === \"none\" || type === \"smart\" || type === \"always\") {\n      this.config.scrollType = type;\n\n      if (type === \"none\") {\n        this.disableScroll();\n      } else {\n        this.enableScroll();\n      }\n    }\n  };\n\n  _proto.getScrollType = function getScrollType() {\n    return this.config.scrollType;\n  };\n\n  _proto._createScrollBar = function _createScrollBar() {\n    var chart = this,\n        animationManager = chart.getFromEnv(\"animationManager\"),\n        scrollbarInstance = chart.getChildren(\"scrollBar\") && chart.getChildren(\"scrollBar\")[0],\n        prevPos;\n\n    if (!scrollbarInstance) {\n      scrollbarInstance = chart.attachChild(new _tools.ScrollBar(), \"scrollBar\");\n    }\n\n    scrollbarInstance.configure({\n      isHorizontal: !chart.isBar\n    });\n    scrollbarInstance.attachEventHandlers({\n      scrollStart: function scrollStart(scrollPosition) {\n        prevPos = scrollPosition;\n        chart.fireChartInstanceEvent(\"scrollstart\", {\n          scrollPosition: scrollPosition\n        });\n      },\n      scroll: function scroll(scrollPosition) {\n        animationManager.setAnimationState(\"scroll\");\n        chart.fireChartInstanceEvent(\"onScroll\", {\n          scrollPosition: scrollPosition\n        });\n        chart.fireEvent(\"onScroll\", {\n          scrollPosition: scrollPosition\n        });\n      },\n      scrollEnd: function scrollEnd(scrollPosition) {\n        chart.fireChartInstanceEvent(\"scrollend\", {\n          scrollPosition: scrollPosition,\n          prevScrollPosition: prevPos\n        });\n      }\n    });\n  };\n\n  _proto._disposeScrollBar = function _disposeScrollBar() {\n    var chart = this,\n        scrollBar = chart.getChildren(\"scrollBar\") && chart.getChildren(\"scrollBar\")[0];\n\n    if (scrollBar) {\n      scrollBar.remove();\n    }\n  };\n\n  _proto.getScrollbarDimension = function getScrollbarDimension() {\n    var chart = this,\n        axis = chart.getChildren(\"xAxis\")[0],\n        axisConfig = axis.config,\n        axisRange = axisConfig.axisRange,\n        scrollOptions = axisConfig.scrollOptions || (axisConfig.scrollOptions = {}),\n        max = axisRange.max,\n        min = axisRange.min,\n        vxLength = scrollOptions.vxLength,\n        scrollBar = chart.getChildren(\"scrollBar\")[0],\n        scrollConf,\n        canvasLeft,\n        canvasTop,\n        canvasHeight,\n        canvasWidth,\n        canvasConfig = chart.getChildren(\"canvas\")[0].config,\n        canvasBorderWidth,\n        axisLineWidth,\n        axisLineStartExtension,\n        axisLineEndExtension,\n        scrollRatio,\n        windowedCanvasWidth,\n        fullCanvasWidth,\n        visibleConfig,\n        visibleMax,\n        visibleMin,\n        visibleRange,\n        totalRange,\n        scrollPosition;\n\n    if (!scrollBar) {\n      return;\n    }\n\n    scrollConf = scrollBar.config;\n    canvasLeft = canvasConfig.canvasLeft;\n    canvasTop = canvasConfig.canvasTop;\n    canvasHeight = canvasConfig.canvasHeight;\n    canvasWidth = canvasConfig.canvasWidth;\n    canvasBorderWidth = canvasConfig.canvasBorderWidth;\n    axisLineWidth = axisConfig.showAxisLine ? axisConfig.axisLineThickness || 0 : 0;\n    axisLineStartExtension = (0, _lib.pluckNumber)(canvasBorderWidth, axisConfig.lineStartExtension);\n    axisLineEndExtension = (0, _lib.pluckNumber)(canvasBorderWidth, axisConfig.lineEndExtension);\n    scrollOptions.viewPortMin = min;\n    scrollOptions.viewPortMax = max;\n    visibleConfig = axis.getVisibleConfig();\n    visibleMax = visibleConfig.maxValue;\n    visibleMin = visibleConfig.minValue;\n    visibleRange = visibleMax - visibleMin;\n    totalRange = axisRange.max - axisRange.min;\n    scrollRatio = visibleRange / totalRange;\n    scrollPosition = (visibleMin - axisRange.min) / (totalRange - visibleRange);\n    windowedCanvasWidth = scrollOptions.windowedCanvasWidth = axis.getPixel(vxLength, queryOptions);\n    fullCanvasWidth = scrollOptions.fullCanvasWidth = axis.getPixel(max - min, queryOptions) - windowedCanvasWidth;\n    scrollConf.scrollRatio = scrollRatio;\n    scrollConf.roundEdges = canvasConfig.isRoundEdges;\n    scrollConf.fullCanvasWidth = fullCanvasWidth;\n    scrollConf.windowedCanvasWidth = windowedCanvasWidth;\n    scrollConf.scrollPosition = scrollPosition;\n\n    if (!scrollConf.isHorizontal) {\n      scrollConf.scrollPosition = axisConfig.isReverse ? 1 - scrollPosition : scrollPosition;\n      return {\n        x: scrollConf.isOpposite ? canvasLeft + canvasWidth + canvasBorderWidth + (scrollConf.padding || 0) : canvasLeft - chart.config.shift - canvasBorderWidth,\n        y: canvasTop - canvasBorderWidth - (scrollConf.padding || 0),\n        height: canvasHeight + canvasBorderWidth * 2\n      };\n    }\n\n    scrollConf.scrollPosition = scrollPosition;\n    return {\n      x: canvasLeft - axisLineStartExtension,\n      y: scrollConf.isOpposite ? canvasTop - canvasBorderWidth - axisLineWidth - (chart.config.shift || 0) - (scrollConf.padding || 0) : canvasTop + canvasHeight + canvasBorderWidth + axisLineWidth,\n      width: canvasWidth + axisLineStartExtension + axisLineEndExtension\n    };\n  };\n\n  _proto.enableScroll = function enableScroll() {\n    this._createScrollBar();\n  };\n\n  _proto.disableScroll = function disableScroll() {\n    this._disposeScrollBar();\n  };\n\n  _proto.isScrollEnabled = function isScrollEnabled() {\n    var scrollBar = this.getChildren(\"scrollBar\");\n    return !!(scrollBar && scrollBar[0] && !scrollBar[0].getState(\"removed\"));\n  };\n\n  _proto.decideScroll = function decideScroll() {\n    var chart = this,\n        scrollType = chart.getScrollType();\n\n    if (scrollType === \"always\" || scrollType === \"smart\" && chart.getFromEnv(\"axis\").getZoom() !== 1) {\n      chart.enableScroll();\n    } else {\n      chart.disableScroll();\n    }\n  };\n\n  return Cartesian;\n}(_commonspacemanager.default);\n\nvar _default = Cartesian;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/charts/src/chart/_internal/cartesian.js"],"names":["_interopRequireDefault","require","exports","__esModule","default","_inheritsLoose2","_commonspacemanager","_lib","_number","_cartesianAxis","_canvasAxisRefCartesian","_vcanvas","_mouseTracker","_equal","_tools","mathMax","Math","max","mathMin","min","UNDEF","setDimension","dimension1","dimension2","onAxisVisibilityChange","e","chart","sender","scrollPosition","data","axis","getChildren","axisConfig","config","visibleConfig","getVisibleConfig","visibleRange","maxValue","minValue","interpolateMax","axisRange","interpolate","visibleStart","isReverse","setVisibleConfig","queryOptions","wrtVisible","Cartesian","_CommonSpaceManager","_this","call","registerFactory","addEventListener","getName","_proto","prototype","getType","_allocateXAxisLabelSpace","iapi","dimensions","getAxisEndLabelDisplaySpace","left","right","top","sum","bottom","availableWidth","availableHeight","canvasLeft","canvasRight","canvasTop","canvasBottom","width","height","_allocateSpace","_setCategories","dataObj","getFromEnv","xAxis","categories","length","category","setTickValues","_feedAxesRawData","chartConfig","xAxisConf","yAxisConf","getSpecificxAxisConf","getSpecificyAxisConf","vtrendlines","extend2","trendlines","isstacked","isPercent","pluckNumber","stack100percent","allocatePosition","setScrollBarDimension","getScrollbarDimension","chartAttrs","is3D","getBasexAxisConf","reverseXAxis","axisLineColor","pluck","xaxislinecolor","axislinecolor","showAlternateGridColor","showalternatevgridcolor","numDivLines","numvdivlines","numVDivLines","axisName","xaxisname","setAdaptiveMin","setadaptivexmin","showLimits","showvlimits","showDivLineValues","showvdivlinevalues","zeroPlaneThickness","vzeroplanethickness","vdivlinethickness","zeroplanethickness","zeroPlaneAlpha","vzeroplanealpha","vdivlinealpha","zeroplanealpha","showZeroPlaneValue","showvzeroplanevalue","showzeroplanevalue","showAxisLine","showxaxisline","showaxislines","drawAxisLines","maxLabelHeight","maxlabelheight","showZeroPlane","showvzeroplane","showzeroplane","palleteString","chartPaletteStr","chart3D","chart2D","isInverse","colorM","showYAxisZeroPlane","showYAxisZeroPlaneValue","outCanfontSizeWithUnit","pluckFontSizeMaintainUnit","outcnvbasefontsize","basefontsize","isVertical","isOpposit","yaxisposition","outCanfontFamily","outcnvbasefont","basefont","outCanfontSize","computeFontSize","outCancolor","outcnvbasefontcolor","basefontcolor","getColor","baseFontColor","replace","axisBreaks","yaxisbreaks","axisNamePadding","yaxisnamepadding","axisValuePadding","yaxisvaluespadding","axisNameFont","yaxisnamefont","axisNameFontSize","yaxisnamefontsize","axisNameFontSizeWithUnit","axisNameFontColor","yaxisnamefontcolor","axisNameFontBold","yaxisnamefontbold","axisNameFontItalic","yaxisnamefontitalic","axisNameBgColor","yaxisnamebgcolor","axisNameBorderColor","yaxisnamebordercolor","axisNameAlpha","yaxisnamealpha","axisNameFontAlpha","yaxisnamefontalpha","axisNameBgAlpha","yaxisnamebgalpha","axisNameBorderAlpha","yaxisnameborderalpha","axisNameBorderPadding","yaxisnameborderpadding","axisNameBorderRadius","yaxisnameborderradius","axisNameBorderThickness","yaxisnameborderthickness","axisNameBorderDashed","yaxisnameborderdashed","axisNameBorderDashLen","yaxisnameborderdashlen","axisNameBorderDashGap","yaxisnameborderdashgap","axisNameWidth","yaxisnamewidth","useEllipsesWhenOverflow","useellipseswhenoverflow","rotateAxisName","rotateyaxisname","yaxisname","divLineColor","divlinecolor","divLineAlpha","divlinealpha","divLineThickness","divlinethickness","divLineIsDashed","Boolean","divlinedashed","divlineisdashed","divLineDashLen","divlinedashlen","divLineDashGap","divlinedashgap","showalternatehgridcolor","alternateGridColor","alternatehgridcolor","alternateGridAlpha","alternatehgridalpha","numdivlines","axisMinValue","yRangeMin","yaxisminvalue","axisMaxValue","yRangeMax","yaxismaxvalue","setadaptivesymin","setadaptiveymin","adjustDiv","adjustdiv","labelStep","yaxisvaluesstep","showAxisValues","showyaxisvalues","showyaxisvalue","showyaxislimits","showlimits","showdivlinevalues","showdivlinevalue","zeroPlaneColor","zeroplanecolor","showZeroPlaneOnTop","showzeroplaneontop","trendlineColor","trendlinecolor","trendlineToolText","trendlinetooltext","trendlineThickness","trendlinethickness","trendlineAlpha","trendlinealpha","showTrendlinesOnTop","showtrendlinesontop","showyaxisline","axisLineThickness","yaxislinethickness","axislinethickness","axisLineAlpha","yaxislinealpha","axislinealpha","yaxislinecolor","forceTrendBelow","labelFont","yaxisvaluefont","labelFontSize","yaxisvaluefontsize","labelFontSizeWithUnit","labelFontColor","yaxisvaluefontcolor","labelAlpha","yaxisvaluealpha","labelFontBold","yaxisvaluefontbold","labelFontItalic","yaxisvaluefontitalic","labelBdrColor","yaxisvaluebordercolor","labelBdrAlpha","yaxisvalueborderalpha","labelBgAlpha","yaxisvaluebgalpha","labelLink","yaxisvaluelink","labelBgColor","yaxisvaluebgcolor","labelBdrThickness","yaxisvalueborderthickness","labelBdrPadding","yaxisvalueborderpadding","labelBdrRadius","yaxisvalueborderradius","labelBdrDashed","yaxisvalueborderdashed","labelBdrDashLen","yaxisvalueborderdashlen","labelBdrDashGap","yaxisvalueborderdashgap","xaxisposition","xaxisnamepadding","labelpadding","xaxisnamefont","xaxisnamefontsize","xaxisnamefontcolor","xaxisnamefontbold","xaxisnamefontitalic","xaxisnamebgcolor","xaxisnamebordercolor","xaxisnamealpha","xaxisnamefontalpha","xaxisnamebgalpha","xaxisnameborderalpha","xaxisnameborderpadding","xaxisnameborderradius","xaxisnameborderthickness","xaxisnameborderdashed","xaxisnameborderdashlen","xaxisnameborderdashgap","vdivlinecolor","vdivlinedashed","vdivlineisdashed","vdivlinedashlen","vdivlinedashgap","alternatevgridcolor","alternatevgridalpha","labelfont","labelfontsize","labelfontcolor","labelalpha","labelfontbold","labelfontitalic","labelbordercolor","labelborderalpha","labellink","labelbgcolor","labelborderthickness","labelborderpadding","labelborderradius","labelborderdashed","labelbgalpha","labelborderdashlen","labelborderdashgap","xaxisminvalue","xaxismaxvalue","adjustvdiv","labelDisplay","labeldisplay","showLabels","showlabels","rotateLabels","rotatelabels","slantLabel","slantlabels","slantlabel","labelstep","xaxisvaluesstep","showxaxisvalues","showxaxisvalue","vzeroplanecolor","xaxislinethickness","xaxislinealpha","getConfig","confName","_getSumValueSpace","maxAvailableSpace","dim","isBar","chartAttr","showSum","showsum","stack100Percent","isStacked","i","stackManagers","iterateComponents","child","push","getMaxSumValueSpace","maxHeight","maxWidth","setAxisDimention","yAxis","scrollbarConfig","xDepth","chartAttrCanvasLeftPadding","canvasleftpadding","chartAttrCanvasRightPadding","canvasrightpadding","canvasConfig","canvasBorderWidth","hasScrollBar","isScrollEnabled","shift","canvasPadding","canvasWidth","canvasPaddingLeft","canvasPaddingRight","sumValueSpaceTop","sumValueSpace","canvasPaddingTop","finalCanvasLeftPadding","finalCanvasRightPadding","setAxisConfig","x","y","isOpposite","opposite","axisLength","canvasHeight","canvasPaddingBottom","_getTrendLineMinMax","type","axsType","axisType","trendLines","retObj","Infinity","trendLineObj","ii","ln","lnn","line","parentyaxis","startvalue","endvalue","setScrollType","scrollType","disableScroll","enableScroll","getScrollType","_createScrollBar","animationManager","scrollbarInstance","prevPos","attachChild","ScrollBar","configure","isHorizontal","attachEventHandlers","scrollStart","fireChartInstanceEvent","scroll","setAnimationState","fireEvent","scrollEnd","prevScrollPosition","_disposeScrollBar","scrollBar","remove","scrollOptions","vxLength","scrollConf","axisLineWidth","axisLineStartExtension","axisLineEndExtension","scrollRatio","windowedCanvasWidth","fullCanvasWidth","visibleMax","visibleMin","totalRange","lineStartExtension","lineEndExtension","viewPortMin","viewPortMax","getPixel","roundEdges","isRoundEdges","padding","getState","decideScroll","getZoom","_default"],"mappings":"AAAA;;AAAa,IAAIA,sBAAsB,GAACC,OAAO,CAAC,8CAAD,CAAlC;;AAAmFC,OAAO,CAACC,UAAR,GAAmB,IAAnB;AAAwBD,OAAO,CAACE,OAAR,GAAgB,KAAK,CAArB;;AAAuB,IAAIC,eAAe,GAACL,sBAAsB,CAACC,OAAO,CAAC,sCAAD,CAAR,CAA1C;;AAA4F,IAAIK,mBAAmB,GAACN,sBAAsB,CAACC,OAAO,CAAC,sBAAD,CAAR,CAA9C;;AAAgF,IAAIM,IAAI,GAACN,OAAO,CAAC,4BAAD,CAAhB;;AAA+C,IAAIO,OAAO,GAACR,sBAAsB,CAACC,OAAO,CAAC,0DAAD,CAAR,CAAlC;;AAAwG,IAAIQ,cAAc,GAACT,sBAAsB,CAACC,OAAO,CAAC,gCAAD,CAAR,CAAzC;;AAAqF,IAAIS,uBAAuB,GAACV,sBAAsB,CAACC,OAAO,CAAC,2CAAD,CAAR,CAAlD;;AAAyG,IAAIU,QAAQ,GAACX,sBAAsB,CAACC,OAAO,CAAC,yBAAD,CAAR,CAAnC;;AAAwE,IAAIW,aAAa,GAACZ,sBAAsB,CAACC,OAAO,CAAC,+BAAD,CAAR,CAAxC;;AAAmF,IAAIY,MAAM,GAACb,sBAAsB,CAACC,OAAO,CAAC,sCAAD,CAAR,CAAjC;;AAAmF,IAAIa,MAAM,GAACb,OAAO,CAAC,sCAAD,CAAlB;;AAA2D,IAAIc,OAAO,GAACC,IAAI,CAACC,GAAjB;AAAA,IAAqBC,OAAO,GAACF,IAAI,CAACG,GAAlC;AAAA,IAAsCC,KAAtC;AAAA,IAA4CC,YAAY,GAAC,SAASA,YAAT,CAAsBC,UAAtB,EAAiCC,UAAjC,EAA4C;AAAC,MAAGD,UAAU,GAACC,UAAX,IAAuBA,UAAU,GAAC,CAArC,EAAuC;AAAC,WAAOA,UAAU,GAACD,UAAlB;AAA6B;;AAAA,SAAO,CAAP;AAAS,CAApL;AAAA,IAAqLE,sBAAsB,GAAC,SAASA,sBAAT,CAAgCC,CAAhC,EAAkC;AAAC,MAAIC,KAAK,GAACD,CAAC,CAACE,MAAZ;AAAA,MAAmBC,cAAc,GAACH,CAAC,CAACI,IAAF,CAAOD,cAAzC;AAAA,MAAwDE,IAAI,GAACJ,KAAK,CAACK,WAAN,CAAkB,OAAlB,EAA2B,CAA3B,CAA7D;AAAA,MAA2FC,UAAU,GAACF,IAAI,CAACG,MAA3G;AAAA,MAAkHC,aAAa,GAACJ,IAAI,CAACK,gBAAL,EAAhI;AAAA,MAAwJC,YAAY,GAACF,aAAa,CAACG,QAAd,GAAuBH,aAAa,CAACI,QAA1M;AAAA,MAAmNC,cAAc,GAACP,UAAU,CAACQ,SAAX,CAAqBvB,GAArB,GAAyBmB,YAA3P;AAAA,MAAwQK,WAAW,GAAC,CAAC,GAAEjC,OAAO,CAACJ,OAAX,EAAoB4B,UAAU,CAACQ,SAAX,CAAqBrB,GAAzC,EAA6CoB,cAA7C,CAApR;AAAA,MAAiVG,YAAY,GAACV,UAAU,CAACW,SAAX,GAAqBF,WAAW,CAAC,IAAEb,cAAH,CAAhC,GAAmDa,WAAW,CAACb,cAAD,CAA5Z;AAA6aE,EAAAA,IAAI,CAACc,gBAAL,CAAsBF,YAAtB,EAAmCA,YAAY,GAACN,YAAhD;AAA8D,CAA1tB;;AAA2tB,IAAIS,YAAY,GAAC;AAACC,EAAAA,UAAU,EAAC;AAAZ,CAAjB;;AAAmC,IAAIC,SAAS,GAAC,UAASC,mBAAT,EAA6B;AAAC,GAAC,GAAE3C,eAAe,CAACD,OAAnB,EAA4B2C,SAA5B,EAAsCC,mBAAtC;;AAA2D,WAASD,SAAT,GAAoB;AAAC,QAAIE,KAAJ;;AAAUA,IAAAA,KAAK,GAACD,mBAAmB,CAACE,IAApB,CAAyB,IAAzB,KAAgC,IAAtC;;AAA2CD,IAAAA,KAAK,CAACE,eAAN,CAAsB,MAAtB,EAA6B1C,cAAc,CAACL,OAA5C,EAAoD,CAAC,QAAD,CAApD;;AAAgE6C,IAAAA,KAAK,CAACE,eAAN,CAAsB,QAAtB,EAA+BzC,uBAAuB,CAACN,OAAvD;;AAAgE6C,IAAAA,KAAK,CAACE,eAAN,CAAsB,SAAtB,EAAgCxC,QAAQ,CAACP,OAAzC,EAAiD,CAAC,MAAD,CAAjD;;AAA2D6C,IAAAA,KAAK,CAACE,eAAN,CAAsB,cAAtB,EAAqCvC,aAAa,CAACR,OAAnD,EAA2D,CAAC,QAAD,CAA3D;;AAAuE6C,IAAAA,KAAK,CAACG,gBAAN,CAAuB,UAAvB,EAAkC5B,sBAAlC;;AAA0D,WAAOyB,KAAP;AAAa;;AAAAF,EAAAA,SAAS,CAACM,OAAV,GAAkB,SAASA,OAAT,GAAkB;AAAC,WAAM,WAAN;AAAkB,GAAvD;;AAAwD,MAAIC,MAAM,GAACP,SAAS,CAACQ,SAArB;;AAA+BD,EAAAA,MAAM,CAACD,OAAP,GAAe,SAASA,OAAT,GAAkB;AAAC,WAAM,WAAN;AAAkB,GAApD;;AAAqDC,EAAAA,MAAM,CAACE,OAAP,GAAe,SAASA,OAAT,GAAkB;AAAC,WAAM,UAAN;AAAiB,GAAnD;;AAAoDF,EAAAA,MAAM,CAACG,wBAAP,GAAgC,SAASA,wBAAT,CAAkC3B,IAAlC,EAAuC;AAAC,QAAI4B,IAAI,GAAC,IAAT;AAAA,QAAczB,MAAM,GAACyB,IAAI,CAACzB,MAA1B;AAAA,QAAiC0B,UAAU,GAAC7B,IAAI,CAAC8B,2BAAL,EAA5C;AAAA,QAA+EC,IAAI,GAACF,UAAU,CAACE,IAA/F;AAAA,QAAoGC,KAAK,GAACH,UAAU,CAACG,KAArH;AAAA,QAA2HC,GAAG,GAACJ,UAAU,CAACI,GAA1I;AAAA,QAA8IC,GAA9I;AAAA,QAAkJC,MAAM,GAACN,UAAU,CAACM,MAApK;AAAA,QAA2KC,cAAc,GAACjC,MAAM,CAACiC,cAAjM;AAAA,QAAgNC,eAAe,GAAClC,MAAM,CAACkC,eAAvO;AAAA,QAAuPC,UAAU,GAACnC,MAAM,CAACmC,UAAzQ;AAAA,QAAoRC,WAAW,GAACpC,MAAM,CAACoC,WAAvS;AAAA,QAAmTC,SAAS,GAACrC,MAAM,CAACqC,SAApU;AAAA,QAA8UC,YAAY,GAACtC,MAAM,CAACsC,YAAlW;AAAA,QAA+WC,KAAK,GAACvC,MAAM,CAACuC,KAA5X;AAAA,QAAkYC,MAAM,GAACxC,MAAM,CAACwC,MAAhZ;;AAAuZ,QAAGV,GAAG,GAACE,MAAJ,GAAWE,eAAd,EAA8B;AAACH,MAAAA,GAAG,GAACD,GAAG,GAACE,MAAR;AAAeF,MAAAA,GAAG,GAACI,eAAe,GAACJ,GAAhB,GAAoBC,GAAxB;AAA4BC,MAAAA,MAAM,GAACE,eAAe,GAACF,MAAhB,GAAuBD,GAA9B;AAAkC;;AAAA,QAAGH,IAAI,GAACC,KAAL,GAAWI,cAAd,EAA6B;AAACF,MAAAA,GAAG,GAACH,IAAI,GAACC,KAAT;AAAeD,MAAAA,IAAI,GAACK,cAAc,GAACL,IAAf,GAAoBG,GAAzB;AAA6BF,MAAAA,KAAK,GAACI,cAAc,GAACJ,KAAf,GAAqBE,GAA3B;AAA+B;;AAAAH,IAAAA,IAAI,GAACxC,YAAY,CAAC+C,UAAD,EAAYP,IAAZ,CAAjB;AAAmCC,IAAAA,KAAK,GAACzC,YAAY,CAACmD,KAAK,GAACH,WAAP,EAAmBP,KAAnB,CAAlB;AAA4CC,IAAAA,GAAG,GAAC1C,YAAY,CAACiD,SAAD,EAAWP,GAAX,CAAhB;AAAgCE,IAAAA,MAAM,GAAC5C,YAAY,CAACoD,MAAM,GAACF,YAAR,EAAqBN,MAArB,CAAnB;;AAAgDP,IAAAA,IAAI,CAACgB,cAAL,CAAoB;AAACb,MAAAA,IAAI,EAACA,IAAN;AAAWC,MAAAA,KAAK,EAACA,KAAjB;AAAuBC,MAAAA,GAAG,EAACA,GAA3B;AAA+BE,MAAAA,MAAM,EAACA;AAAtC,KAApB;AAAmE,GAAt5B;;AAAu5BX,EAAAA,MAAM,CAACqB,cAAP,GAAsB,SAASA,cAAT,GAAyB;AAAC,QAAIjB,IAAI,GAAC,IAAT;AAAA,QAAckB,OAAO,GAAClB,IAAI,CAACmB,UAAL,CAAgB,YAAhB,CAAtB;AAAA,QAAoDC,KAAK,GAACpB,IAAI,CAAC3B,WAAL,CAAiB,OAAjB,CAA1D;AAAA,QAAoFgD,UAAU,GAACH,OAAO,CAACG,UAAR,IAAoBH,OAAO,CAACG,UAAR,CAAmBC,MAAvC,IAA+CJ,OAAO,CAACG,UAAR,CAAmB,CAAnB,EAAsBE,QAApK;AAA6KH,IAAAA,KAAK,IAAEA,KAAK,CAAC,CAAD,CAAL,CAASI,aAAT,CAAuBH,UAAvB,CAAP;AAA0C,GAAvQ;;AAAwQzB,EAAAA,MAAM,CAAC6B,gBAAP,GAAwB,SAASA,gBAAT,GAA2B;AAAC,QAAIzB,IAAI,GAAC,IAAT;AAAA,QAAc0B,WAAW,GAAC1B,IAAI,CAACzB,MAA/B;AAAA,QAAsC2C,OAAO,GAAClB,IAAI,CAACmB,UAAL,CAAgB,YAAhB,CAA9C;AAAA,QAA4EQ,SAA5E;AAAA,QAAsFC,SAAtF;AAAgGD,IAAAA,SAAS,GAAC3B,IAAI,CAAC6B,oBAAL,EAAV;AAAsCD,IAAAA,SAAS,GAAC5B,IAAI,CAAC8B,oBAAL,EAAV;AAAsCH,IAAAA,SAAS,CAACI,WAAV,GAAsB,CAAC,GAAElF,IAAI,CAACmF,OAAR,EAAiB,EAAjB,EAAoBd,OAAO,CAACa,WAA5B,CAAtB;AAA+DH,IAAAA,SAAS,CAACK,UAAV,GAAqB,CAAC,GAAEpF,IAAI,CAACmF,OAAR,EAAiB,EAAjB,EAAoBd,OAAO,CAACe,UAA5B,CAArB;;AAA6D,QAAGP,WAAW,CAACQ,SAAf,EAAyB;AAACN,MAAAA,SAAS,CAACO,SAAV,GAAoB,CAAC,GAAEtF,IAAI,CAACuF,WAAR,EAAqBV,WAAW,CAACW,eAAjC,EAAiD,CAAjD,CAApB;AAAwE;;AAAA,WAAM;AAACT,MAAAA,SAAS,EAAC,CAACA,SAAD,CAAX;AAAuBD,MAAAA,SAAS,EAAC,CAACA,SAAD;AAAjC,KAAN;AAAoD,GAAlf;;AAAmf/B,EAAAA,MAAM,CAAC0C,gBAAP,GAAwB,SAASA,gBAAT,GAA2B;AAAC,SAAKC,qBAAL;AAA6B,GAAjF;;AAAkF3C,EAAAA,MAAM,CAAC2C,qBAAP,GAA6B,SAASA,qBAAT,GAAgC;AAAC,QAAIvE,KAAK,GAAC,IAAV;;AAAe,QAAGA,KAAK,CAACK,WAAN,CAAkB,WAAlB,KAAgCL,KAAK,CAACK,WAAN,CAAkB,WAAlB,EAA+B,CAA/B,CAAnC,EAAqE;AAACL,MAAAA,KAAK,CAACK,WAAN,CAAkB,WAAlB,EAA+B,CAA/B,EAAkCV,YAAlC,CAA+CK,KAAK,CAACwE,qBAAN,EAA/C;AAA8E;AAAC,GAAlO;;AAAmO5C,EAAAA,MAAM,CAACiC,oBAAP,GAA4B,SAASA,oBAAT,GAA+B;AAAC,QAAI7B,IAAI,GAAC,IAAT;AAAA,QAAcyC,UAAU,GAACzC,IAAI,CAACmB,UAAL,CAAgB,cAAhB,CAAzB;AAAA,QAAyDO,WAAW,GAAC1B,IAAI,CAACzB,MAA1E;AAAA,QAAiFmE,IAAI,GAAC1C,IAAI,CAACzB,MAAL,CAAYmE,IAAlG;AAAA,QAAuGf,SAAS,GAAC3B,IAAI,CAAC2C,gBAAL,EAAjH;AAAyIhB,IAAAA,SAAS,CAAC1C,SAAV,GAAoByC,WAAW,CAACkB,YAAhC;AAA6CjB,IAAAA,SAAS,CAACkB,aAAV,GAAwB,CAAC,GAAEhG,IAAI,CAACiG,KAAR,EAAeL,UAAU,CAACM,cAA1B,EAAyCN,UAAU,CAACO,aAApD,EAAkE,SAAlE,CAAxB;AAAqGrB,IAAAA,SAAS,CAACsB,sBAAV,GAAiC,CAAC,GAAEpG,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACS,uBAAhC,EAAwD,CAAxD,CAAjC;AAA4FvB,IAAAA,SAAS,CAACwB,WAAV,GAAsB,CAAC,GAAEtG,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACW,YAAhC,EAA6C1B,WAAW,CAAC2B,YAAzD,CAAtB;AAA6F1B,IAAAA,SAAS,CAAC2B,QAAV,GAAmBb,UAAU,CAACc,SAA9B;AAAwC5B,IAAAA,SAAS,CAAC6B,cAAV,GAAyB,CAAC,GAAE3G,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACgB,eAAhC,EAAgD/B,WAAW,CAAC+B,eAA5D,EAA4E/B,WAAW,CAAC+B,eAAxF,CAAzB;AAAkI9B,IAAAA,SAAS,CAAC+B,UAAV,GAAqB,CAAC,GAAE7G,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACkB,WAAhC,EAA4CjC,WAAW,CAACiC,WAAxD,CAArB;AAA0FhC,IAAAA,SAAS,CAACiC,iBAAV,GAA4B,CAAC,GAAE/G,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACoB,kBAAhC,EAAmDpB,UAAU,CAACoB,kBAA9D,EAAiFnC,WAAW,CAACmC,kBAA7F,CAA5B;AAA6IlC,IAAAA,SAAS,CAACmC,kBAAV,GAA6B,CAAC,GAAEjH,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACsB,mBAAhC,EAAoDtB,UAAU,CAACuB,iBAA/D,EAAiFtC,WAAW,CAACuC,kBAA7F,EAAgH,CAAhH,CAA7B;AAAgJtC,IAAAA,SAAS,CAACuC,cAAV,GAAyB,CAAC,GAAErH,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAAC0B,eAAhC,EAAgD1B,UAAU,CAAC2B,aAA3D,EAAyE1C,WAAW,CAAC2C,cAArF,CAAzB;AAA8H1C,IAAAA,SAAS,CAAC2C,kBAAV,GAA6B,CAAC,GAAEzH,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAAC8B,mBAAhC,EAAoD7C,WAAW,CAAC8C,kBAAhE,CAA7B;AAAiH7C,IAAAA,SAAS,CAAC8C,YAAV,GAAuB/B,IAAI,GAAC,CAAD,GAAG,CAAC,GAAE7F,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACiC,aAAhC,EAA8CjC,UAAU,CAACkC,aAAzD,EAAuElC,UAAU,CAACmC,aAAlF,EAAgGlD,WAAW,CAACgD,aAA5G,EAA0H,CAA1H,CAA9B;AAA2J/C,IAAAA,SAAS,CAACkD,cAAV,GAAyBpC,UAAU,CAACqC,cAApC;AAAmDnD,IAAAA,SAAS,CAACoD,aAAV,GAAwB,CAAC,GAAElI,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACuC,cAAhC,EAA+CtD,WAAW,CAACuD,aAA3D,CAAxB;AAAkG,WAAOtD,SAAP;AAAiB,GAAjmD;;AAAkmD/B,EAAAA,MAAM,CAACkC,oBAAP,GAA4B,SAASA,oBAAT,GAA+B;AAAC,QAAI9B,IAAI,GAAC,IAAT;AAAA,QAAcyC,UAAU,GAACzC,IAAI,CAACmB,UAAL,CAAgB,cAAhB,CAAzB;AAAA,QAAyDO,WAAW,GAAC1B,IAAI,CAACzB,MAA1E;AAAA,QAAiFmE,IAAI,GAAC1C,IAAI,CAACzB,MAAL,CAAYmE,IAAlG;AAAA,QAAuGwC,aAAa,GAACxC,IAAI,GAAC7F,IAAI,CAACsI,eAAL,CAAqBC,OAAtB,GAA8BvI,IAAI,CAACsI,eAAL,CAAqBE,OAA5K;AAAA,QAAoLpG,SAAS,GAACyC,WAAW,CAAC4D,SAA1M;AAAA,QAAoNC,MAAM,GAACvF,IAAI,CAACmB,UAAL,CAAgB,eAAhB,CAA3N;AAAA,QAA4PqE,kBAAkB,GAAC,CAAC,GAAE3I,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACwC,aAAhC,EAA8CvD,WAAW,CAACuD,aAA1D,EAAwE,CAAxE,CAA/Q;AAAA,QAA0VQ,uBAAuB,GAAC,CAAC,GAAE5I,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAAC+B,kBAAhC,EAAmD9C,WAAW,CAAC8C,kBAA/D,CAAlX;AAAA,QAAqckB,sBAAsB,GAAC,CAAC,GAAE7I,IAAI,CAAC8I,yBAAR,EAAmClD,UAAU,CAACmD,kBAA9C,EAAiEnD,UAAU,CAACoD,YAA5E,EAAyF,EAAzF,CAA5d;;AAAyjB,QAAG,CAACL,kBAAD,IAAqBC,uBAAuB,KAAG/H,KAAlD,EAAwD;AAAC+H,MAAAA,uBAAuB,GAAC,CAAxB;AAA0B;;AAAA,WAAM;AAACK,MAAAA,UAAU,EAAC,IAAZ;AAAiB7G,MAAAA,SAAS,EAAC,CAACA,SAA5B;AAAsC8G,MAAAA,SAAS,EAAC,CAAC,GAAE5I,MAAM,CAACT,OAAV,EAAmB+F,UAAU,CAACuD,aAA9B,EAA4C,OAA5C,CAAhD;AAAqGC,MAAAA,gBAAgB,EAAC,CAAC,GAAEpJ,IAAI,CAACiG,KAAR,EAAeL,UAAU,CAACyD,cAA1B,EAAyCzD,UAAU,CAAC0D,QAApD,EAA6D,cAA7D,CAAtH;AAAmMC,MAAAA,cAAc,EAAC,KAAKC,eAAL,CAAqBX,sBAArB,CAAlN;AAA+PA,MAAAA,sBAAsB,EAACA,sBAAtR;AAA6SY,MAAAA,WAAW,EAAC,CAAC,GAAEzJ,IAAI,CAACiG,KAAR,EAAeL,UAAU,CAAC8D,mBAA1B,EAA8C9D,UAAU,CAAC+D,aAAzD,EAAuEjB,MAAM,CAACkB,QAAP,CAAgBvB,aAAa,CAACwB,aAA9B,CAAvE,EAAqHC,OAArH,CAA6H,mBAA7H,EAAiJ,KAAjJ,CAAzT;AAAidC,MAAAA,UAAU,EAACnE,UAAU,CAACoE,WAAve;AAAmfC,MAAAA,eAAe,EAACrE,UAAU,CAACsE,gBAA9gB;AAA+hBC,MAAAA,gBAAgB,EAACvE,UAAU,CAACwE,kBAA3jB;AAA8kBC,MAAAA,YAAY,EAACzE,UAAU,CAAC0E,aAAtmB;AAAonBC,MAAAA,gBAAgB,EAAC,KAAKf,eAAL,CAAqB5D,UAAU,CAAC4E,iBAAhC,CAAroB;AAAwrBC,MAAAA,wBAAwB,EAAC7E,UAAU,CAAC4E,iBAA5tB;AAA8uBE,MAAAA,iBAAiB,EAAC9E,UAAU,CAAC+E,kBAA3wB;AAA8xBC,MAAAA,gBAAgB,EAAChF,UAAU,CAACiF,iBAA1zB;AAA40BC,MAAAA,kBAAkB,EAAClF,UAAU,CAACmF,mBAA12B;AAA83BC,MAAAA,eAAe,EAACpF,UAAU,CAACqF,gBAAz5B;AAA06BC,MAAAA,mBAAmB,EAACtF,UAAU,CAACuF,oBAAz8B;AAA89BC,MAAAA,aAAa,EAACxF,UAAU,CAACyF,cAAv/B;AAAsgCC,MAAAA,iBAAiB,EAAC1F,UAAU,CAAC2F,kBAAniC;AAAsjCC,MAAAA,eAAe,EAAC5F,UAAU,CAAC6F,gBAAjlC;AAAkmCC,MAAAA,mBAAmB,EAAC9F,UAAU,CAAC+F,oBAAjoC;AAAspCC,MAAAA,qBAAqB,EAAChG,UAAU,CAACiG,sBAAvrC;AAA8sCC,MAAAA,oBAAoB,EAAClG,UAAU,CAACmG,qBAA9uC;AAAowCC,MAAAA,uBAAuB,EAACpG,UAAU,CAACqG,wBAAvyC;AAAg0CC,MAAAA,oBAAoB,EAACtG,UAAU,CAACuG,qBAAh2C;AAAs3CC,MAAAA,qBAAqB,EAACxG,UAAU,CAACyG,sBAAv5C;AAA86CC,MAAAA,qBAAqB,EAAC1G,UAAU,CAAC2G,sBAA/8C;AAAs+CC,MAAAA,aAAa,EAAC5G,UAAU,CAAC6G,cAA//C;AAA8gDC,MAAAA,uBAAuB,EAAC9G,UAAU,CAAC+G,uBAAjjD;AAAykDC,MAAAA,cAAc,EAAC,CAAC,GAAE5M,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACiH,eAAhC,EAAgD,CAAhD,CAAxlD;AAA2oDpG,MAAAA,QAAQ,EAACb,UAAU,CAACkH,SAA/pD;AAAyqDC,MAAAA,YAAY,EAAC,CAAC,GAAE/M,IAAI,CAACiG,KAAR,EAAeL,UAAU,CAACoH,YAA1B,EAAuCtE,MAAM,CAACkB,QAAP,CAAgBvB,aAAa,CAAC0E,YAA9B,CAAvC,CAAtrD;AAA0wDE,MAAAA,YAAY,EAAC,CAAC,GAAEjN,IAAI,CAACiG,KAAR,EAAeL,UAAU,CAACsH,YAA1B,EAAuCrH,IAAI,GAAC6C,MAAM,CAACkB,QAAP,CAAgB,gBAAhB,CAAD,GAAmClB,MAAM,CAACkB,QAAP,CAAgB,cAAhB,CAA9E,CAAvxD;AAAs4DuD,MAAAA,gBAAgB,EAAC,CAAC,GAAEnN,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACwH,gBAAhC,EAAiD,CAAjD,CAAv5D;AAA28DC,MAAAA,eAAe,EAACC,OAAO,CAAC,CAAC,GAAEtN,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAAC2H,aAAhC,EAA8C3H,UAAU,CAAC4H,eAAzD,EAAyE,CAAzE,CAAD,CAAl+D;AAAgjEC,MAAAA,cAAc,EAAC,CAAC,GAAEzN,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAAC8H,cAAhC,EAA+C,CAA/C,CAA/jE;AAAinEC,MAAAA,cAAc,EAAC,CAAC,GAAE3N,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACgI,cAAhC,EAA+C,CAA/C,CAAhoE;AAAkrExH,MAAAA,sBAAsB,EAAC,CAAC,GAAEpG,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACiI,uBAAhC,EAAwD,CAAxD,CAAzsE;AAAowEC,MAAAA,kBAAkB,EAAC,CAAC,GAAE9N,IAAI,CAACiG,KAAR,EAAeL,UAAU,CAACmI,mBAA1B,EAA8CrF,MAAM,CAACkB,QAAP,CAAgB,eAAhB,CAA9C,CAAvxE;AAAu2EoE,MAAAA,kBAAkB,EAAC,CAAC,GAAEhO,IAAI,CAACiG,KAAR,EAAeL,UAAU,CAACqI,mBAA1B,EAA8CvF,MAAM,CAACkB,QAAP,CAAgB,eAAhB,CAA9C,CAA13E;AAA08EtD,MAAAA,WAAW,EAAC,CAAC,GAAEtG,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACsI,WAAhC,EAA4CrJ,WAAW,CAACyB,WAAxD,CAAt9E;AAA2hF6H,MAAAA,YAAY,EAACtJ,WAAW,CAACuJ,SAAZ,IAAuBxI,UAAU,CAACyI,aAA1kF;AAAwlFC,MAAAA,YAAY,EAACzJ,WAAW,CAAC0J,SAAZ,IAAuB3I,UAAU,CAAC4I,aAAvoF;AAAqpF7H,MAAAA,cAAc,EAAC,CAAC,GAAE3G,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAAC6I,gBAAhC,EAAiD7I,UAAU,CAAC8I,eAA5D,EAA4E7J,WAAW,CAAC8B,cAAxF,CAApqF;AAA4wFgI,MAAAA,SAAS,EAAC/I,UAAU,CAACgJ,SAAjyF;AAA2yFC,MAAAA,SAAS,EAACjJ,UAAU,CAACkJ,eAAh0F;AAAg1FC,MAAAA,cAAc,EAAC,CAAC,GAAE/O,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACoJ,eAAhC,EAAgDpJ,UAAU,CAACqJ,cAA3D,EAA0EpK,WAAW,CAACmK,eAAtF,CAA/1F;AAAs8FnI,MAAAA,UAAU,EAAC,CAAC,GAAE7G,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACsJ,eAAhC,EAAgDtJ,UAAU,CAACuJ,UAA3D,EAAsEhM,IAAI,CAAC0D,UAA3E,CAAj9F;AAAwiGE,MAAAA,iBAAiB,EAAC,CAAC,GAAE/G,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACwJ,iBAAhC,EAAkDxJ,UAAU,CAACyJ,gBAA7D,EAA8ExK,WAAW,CAACuK,iBAA1F,CAA1jG;AAAuqGlH,MAAAA,aAAa,EAACS,kBAArrG;AAAwsG2G,MAAAA,cAAc,EAAC1J,UAAU,CAAC2J,cAAluG;AAAivGtI,MAAAA,kBAAkB,EAAC,CAAC,GAAEjH,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACwB,kBAAhC,EAAmDxB,UAAU,CAACwH,gBAA9D,EAA+EvI,WAAW,CAACuC,kBAA3F,EAA8G,CAA9G,CAApwG;AAAq3GC,MAAAA,cAAc,EAAC,CAAC,GAAErH,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAAC4B,cAAhC,EAA+C5B,UAAU,CAACsH,YAA1D,EAAuErI,WAAW,CAAC2C,cAAnF,CAAp4G;AAAu+GC,MAAAA,kBAAkB,EAACmB,uBAA1/G;AAAkhH4G,MAAAA,kBAAkB,EAAC3K,WAAW,CAAC4K,kBAAjjH;AAAokHC,MAAAA,cAAc,EAAC9J,UAAU,CAAC+J,cAA9lH;AAA6mHC,MAAAA,iBAAiB,EAAChK,UAAU,CAACiK,iBAA1oH;AAA4pHC,MAAAA,kBAAkB,EAAClK,UAAU,CAACmK,kBAA1rH;AAA6sHC,MAAAA,cAAc,EAACpK,UAAU,CAACqK,cAAvuH;AAAsvHC,MAAAA,mBAAmB,EAACtK,UAAU,CAACuK,mBAArxH;AAAyyHvI,MAAAA,YAAY,EAAC/B,IAAI,GAAC,CAAD,GAAG,CAAC,GAAE7F,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACwK,aAAhC,EAA8CxK,UAAU,CAACkC,aAAzD,EAAuElC,UAAU,CAACmC,aAAlF,EAAgGlD,WAAW,CAACuL,aAA5G,EAA0H,CAA1H,CAA7zH;AAA07HC,MAAAA,iBAAiB,EAAC,CAAC,GAAErQ,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAAC0K,kBAAhC,EAAmD1K,UAAU,CAAC2K,iBAA9D,EAAgF,CAAhF,CAA58H;AAA+hIC,MAAAA,aAAa,EAAC,CAAC,GAAExQ,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAAC6K,cAAhC,EAA+C7K,UAAU,CAAC8K,aAA1D,EAAwE,GAAxE,CAA7iI;AAA0nI1K,MAAAA,aAAa,EAAC,CAAC,GAAEhG,IAAI,CAACiG,KAAR,EAAeL,UAAU,CAAC+K,cAA1B,EAAyC/K,UAAU,CAACO,aAApD,EAAkE,SAAlE,CAAxoI;AAAqtIyK,MAAAA,eAAe,EAAC,CAAC,CAAC/L,WAAW,CAACgB,IAAnvI;AAAwvIgL,MAAAA,SAAS,EAACjL,UAAU,CAACkL,cAA7wI;AAA4xIC,MAAAA,aAAa,EAAC,KAAKvH,eAAL,CAAqB5D,UAAU,CAACoL,kBAAhC,CAA1yI;AAA81IC,MAAAA,qBAAqB,EAACrL,UAAU,CAACoL,kBAA/3I;AAAk5IE,MAAAA,cAAc,EAACtL,UAAU,CAACuL,mBAA56I;AAAg8IC,MAAAA,UAAU,EAACxL,UAAU,CAACyL,eAAt9I;AAAs+IC,MAAAA,aAAa,EAAC1L,UAAU,CAAC2L,kBAA//I;AAAkhJC,MAAAA,eAAe,EAAC5L,UAAU,CAAC6L,oBAA7iJ;AAAkkJC,MAAAA,aAAa,EAAC9L,UAAU,CAAC+L,qBAA3lJ;AAAinJC,MAAAA,aAAa,EAAChM,UAAU,CAACiM,qBAA1oJ;AAAgqJC,MAAAA,YAAY,EAAClM,UAAU,CAACmM,iBAAxrJ;AAA0sJC,MAAAA,SAAS,EAACpM,UAAU,CAACqM,cAA/tJ;AAA8uJC,MAAAA,YAAY,EAACtM,UAAU,CAACuM,iBAAtwJ;AAAwxJC,MAAAA,iBAAiB,EAACxM,UAAU,CAACyM,yBAArzJ;AAA+0JC,MAAAA,eAAe,EAAC1M,UAAU,CAAC2M,uBAA12J;AAAk4JC,MAAAA,cAAc,EAAC5M,UAAU,CAAC6M,sBAA55J;AAAm7JC,MAAAA,cAAc,EAAC9M,UAAU,CAAC+M,sBAA78J;AAAo+JC,MAAAA,eAAe,EAAChN,UAAU,CAACiN,uBAA//J;AAAuhKC,MAAAA,eAAe,EAAClN,UAAU,CAACmN;AAAljK,KAAN;AAAilK,GAAzxL;;AAA0xLhQ,EAAAA,MAAM,CAAC+C,gBAAP,GAAwB,SAASA,gBAAT,GAA2B;AAAC,QAAI3C,IAAI,GAAC,IAAT;AAAA,QAAcyC,UAAU,GAACzC,IAAI,CAACmB,UAAL,CAAgB,cAAhB,CAAzB;AAAA,QAAyDuB,IAAI,GAAC1C,IAAI,CAACzB,MAAL,CAAYmE,IAA1E;AAAA,QAA+EwC,aAAa,GAACxC,IAAI,GAAC7F,IAAI,CAACsI,eAAL,CAAqBC,OAAtB,GAA8BvI,IAAI,CAACsI,eAAL,CAAqBE,OAApJ;AAAA,QAA4JE,MAAM,GAACvF,IAAI,CAACmB,UAAL,CAAgB,eAAhB,CAAnK;AAAA,QAAoMuE,sBAAsB,GAAC,CAAC,GAAE7I,IAAI,CAAC8I,yBAAR,EAAmClD,UAAU,CAACmD,kBAA9C,EAAiEnD,UAAU,CAACoD,YAA5E,EAAyF,EAAzF,CAA3N;AAAwT,WAAM;AAACC,MAAAA,UAAU,EAAC,KAAZ;AAAkBC,MAAAA,SAAS,EAAC,CAAC,GAAE5I,MAAM,CAACT,OAAV,EAAmB+F,UAAU,CAACoN,aAA9B,EAA4C,KAA5C,CAA5B;AAA+E5J,MAAAA,gBAAgB,EAAC,CAAC,GAAEpJ,IAAI,CAACiG,KAAR,EAAeL,UAAU,CAACyD,cAA1B,EAAyCzD,UAAU,CAAC0D,QAApD,EAA6D,cAA7D,CAAhG;AAA6KC,MAAAA,cAAc,EAAC,KAAKC,eAAL,CAAqBX,sBAArB,CAA5L;AAAyOA,MAAAA,sBAAsB,EAACA,sBAAhQ;AAAuRY,MAAAA,WAAW,EAAC,CAAC,GAAEzJ,IAAI,CAACiG,KAAR,EAAeL,UAAU,CAAC8D,mBAA1B,EAA8C9D,UAAU,CAAC+D,aAAzD,EAAuEjB,MAAM,CAACkB,QAAP,CAAgBvB,aAAa,CAACwB,aAA9B,CAAvE,EAAqHC,OAArH,CAA6H,mBAA7H,EAAiJ,KAAjJ,CAAnS;AAA2bG,MAAAA,eAAe,EAACrE,UAAU,CAACqN,gBAAtd;AAAue9I,MAAAA,gBAAgB,EAACvE,UAAU,CAACsN,YAAngB;AAAghB7I,MAAAA,YAAY,EAACzE,UAAU,CAACuN,aAAxiB;AAAsjB5I,MAAAA,gBAAgB,EAAC,KAAKf,eAAL,CAAqB5D,UAAU,CAACwN,iBAAhC,CAAvkB;AAA0nB3I,MAAAA,wBAAwB,EAAC7E,UAAU,CAACwN,iBAA9pB;AAAgrB1I,MAAAA,iBAAiB,EAAC9E,UAAU,CAACyN,kBAA7sB;AAAguBzI,MAAAA,gBAAgB,EAAChF,UAAU,CAAC0N,iBAA5vB;AAA8wBxI,MAAAA,kBAAkB,EAAClF,UAAU,CAAC2N,mBAA5yB;AAAg0BvI,MAAAA,eAAe,EAACpF,UAAU,CAAC4N,gBAA31B;AAA42BtI,MAAAA,mBAAmB,EAACtF,UAAU,CAAC6N,oBAA34B;AAAg6BrI,MAAAA,aAAa,EAACxF,UAAU,CAAC8N,cAAz7B;AAAw8BpI,MAAAA,iBAAiB,EAAC1F,UAAU,CAAC+N,kBAAr+B;AAAw/BnI,MAAAA,eAAe,EAAC5F,UAAU,CAACgO,gBAAnhC;AAAoiClI,MAAAA,mBAAmB,EAAC9F,UAAU,CAACiO,oBAAnkC;AAAwlCjI,MAAAA,qBAAqB,EAAChG,UAAU,CAACkO,sBAAznC;AAAgpChI,MAAAA,oBAAoB,EAAClG,UAAU,CAACmO,qBAAhrC;AAAssC/H,MAAAA,uBAAuB,EAACpG,UAAU,CAACoO,wBAAzuC;AAAkwC9H,MAAAA,oBAAoB,EAACtG,UAAU,CAACqO,qBAAlyC;AAAwzC7H,MAAAA,qBAAqB,EAACxG,UAAU,CAACsO,sBAAz1C;AAAg3C5H,MAAAA,qBAAqB,EAAC1G,UAAU,CAACuO,sBAAj5C;AAAw6CzH,MAAAA,uBAAuB,EAAC9G,UAAU,CAAC+G,uBAA38C;AAAm+CI,MAAAA,YAAY,EAAC,CAAC,GAAE/M,IAAI,CAACiG,KAAR,EAAeL,UAAU,CAACwO,aAA1B,EAAwCxO,UAAU,CAACoH,YAAnD,EAAgEtE,MAAM,CAACkB,QAAP,CAAgBvB,aAAa,CAAC0E,YAA9B,CAAhE,CAAh/C;AAA6lDE,MAAAA,YAAY,EAAC,CAAC,GAAEjN,IAAI,CAACiG,KAAR,EAAeL,UAAU,CAAC2B,aAA1B,EAAwC3B,UAAU,CAACsH,YAAnD,EAAgErH,IAAI,GAAC6C,MAAM,CAACkB,QAAP,CAAgB,gBAAhB,CAAD,GAAmClB,MAAM,CAACkB,QAAP,CAAgB,cAAhB,CAAvG,CAA1mD;AAAkvDuD,MAAAA,gBAAgB,EAAC,CAAC,GAAEnN,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACuB,iBAAhC,EAAkDvB,UAAU,CAACwH,gBAA7D,EAA8E,CAA9E,CAAnwD;AAAo1DC,MAAAA,eAAe,EAACC,OAAO,CAAC,CAAC,GAAEtN,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACyO,cAAhC,EAA+CzO,UAAU,CAAC0O,gBAA1D,EAA2E1O,UAAU,CAAC2H,aAAtF,EAAoG3H,UAAU,CAAC4H,eAA/G,EAA+H,CAA/H,CAAD,CAA32D;AAA++DC,MAAAA,cAAc,EAAC,CAAC,GAAEzN,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAAC2O,eAAhC,EAAgD3O,UAAU,CAAC8H,cAA3D,EAA0E,CAA1E,CAA9/D;AAA2kEC,MAAAA,cAAc,EAAC,CAAC,GAAE3N,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAAC4O,eAAhC,EAAgD5O,UAAU,CAACgI,cAA3D,EAA0E,CAA1E,CAA1lE;AAAuqEE,MAAAA,kBAAkB,EAAC,CAAC,GAAE9N,IAAI,CAACiG,KAAR,EAAeL,UAAU,CAAC6O,mBAA1B,EAA8C/L,MAAM,CAACkB,QAAP,CAAgB,eAAhB,CAA9C,CAA1rE;AAA0wEoE,MAAAA,kBAAkB,EAAC,CAAC,GAAEhO,IAAI,CAACiG,KAAR,EAAeL,UAAU,CAAC8O,mBAA1B,EAA8ChM,MAAM,CAACkB,QAAP,CAAgB,eAAhB,CAA9C,CAA7xE;AAA62EiH,MAAAA,SAAS,EAACjL,UAAU,CAAC+O,SAAl4E;AAA44E5D,MAAAA,aAAa,EAAC,KAAKvH,eAAL,CAAqB5D,UAAU,CAACgP,aAAhC,CAA15E;AAAy8E3D,MAAAA,qBAAqB,EAACrL,UAAU,CAACgP,aAA1+E;AAAw/E1D,MAAAA,cAAc,EAACtL,UAAU,CAACiP,cAAlhF;AAAiiFzD,MAAAA,UAAU,EAACxL,UAAU,CAACkP,UAAvjF;AAAkkFxD,MAAAA,aAAa,EAAC1L,UAAU,CAACmP,aAA3lF;AAAymFvD,MAAAA,eAAe,EAAC5L,UAAU,CAACoP,eAApoF;AAAopFtD,MAAAA,aAAa,EAAC9L,UAAU,CAACqP,gBAA7qF;AAA8rFrD,MAAAA,aAAa,EAAChM,UAAU,CAACsP,gBAAvtF;AAAwuFlD,MAAAA,SAAS,EAACpM,UAAU,CAACuP,SAA7vF;AAAuwFjD,MAAAA,YAAY,EAACtM,UAAU,CAACwP,YAA/xF;AAA4yFhD,MAAAA,iBAAiB,EAACxM,UAAU,CAACyP,oBAAz0F;AAA81F/C,MAAAA,eAAe,EAAC1M,UAAU,CAAC0P,kBAAz3F;AAA44F9C,MAAAA,cAAc,EAAC5M,UAAU,CAAC2P,iBAAt6F;AAAw7F7C,MAAAA,cAAc,EAAC9M,UAAU,CAAC4P,iBAAl9F;AAAo+F1D,MAAAA,YAAY,EAAClM,UAAU,CAAC6P,YAA5/F;AAAygG7C,MAAAA,eAAe,EAAChN,UAAU,CAAC8P,kBAApiG;AAAujG5C,MAAAA,eAAe,EAAClN,UAAU,CAAC+P,kBAAllG;AAAqmGxH,MAAAA,YAAY,EAACvI,UAAU,CAACgQ,aAA7nG;AAA2oGtH,MAAAA,YAAY,EAAC1I,UAAU,CAACiQ,aAAnqG;AAAirGlH,MAAAA,SAAS,EAAC/I,UAAU,CAACkQ,UAAtsG;AAAitGC,MAAAA,YAAY,EAACnQ,UAAU,CAACoQ,YAAzuG;AAAsvGC,MAAAA,UAAU,EAACrQ,UAAU,CAACsQ,UAA5wG;AAAuxGC,MAAAA,YAAY,EAACvQ,UAAU,CAACwQ,YAA/yG;AAA4zGC,MAAAA,UAAU,EAAC,CAAC,GAAErW,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAAC0Q,WAAhC,EAA4C1Q,UAAU,CAAC2Q,UAAvD,CAAv0G;AAA04G1H,MAAAA,SAAS,EAAC,CAAC,GAAE7O,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAAC4Q,SAAhC,EAA0C5Q,UAAU,CAAC6Q,eAArD,CAAp5G;AAA09G1H,MAAAA,cAAc,EAAC,CAAC,GAAE/O,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAAC8Q,eAAhC,EAAgD9Q,UAAU,CAAC+Q,cAA3D,CAAz+G;AAAojHrH,MAAAA,cAAc,EAAC1J,UAAU,CAACgR,eAA9kH;AAA8lHlH,MAAAA,cAAc,EAAC9J,UAAU,CAAC+J,cAAxnH;AAAuoHC,MAAAA,iBAAiB,EAAChK,UAAU,CAACiK,iBAApqH;AAAsrHC,MAAAA,kBAAkB,EAAClK,UAAU,CAACmK,kBAAptH;AAAuuHC,MAAAA,cAAc,EAACpK,UAAU,CAACqK,cAAjwH;AAAgxHC,MAAAA,mBAAmB,EAACtK,UAAU,CAACuK,mBAA/yH;AAAm0HE,MAAAA,iBAAiB,EAAC,CAAC,GAAErQ,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACiR,kBAAhC,EAAmDjR,UAAU,CAAC2K,iBAA9D,EAAgF,CAAhF,CAAr1H;AAAw6HC,MAAAA,aAAa,EAAC,CAAC,GAAExQ,IAAI,CAACuF,WAAR,EAAqBK,UAAU,CAACkR,cAAhC,EAA+ClR,UAAU,CAAC8K,aAA1D,EAAwE,GAAxE;AAAt7H,KAAN;AAA0gI,GAAt3I;;AAAu3I3N,EAAAA,MAAM,CAACgU,SAAP,GAAiB,SAASA,SAAT,CAAmBC,QAAnB,EAA4B;AAAC,WAAOA,QAAQ,GAAC,KAAKtV,MAAL,CAAYsV,QAAZ,CAAD,GAAuB,KAAKtV,MAA3C;AAAkD,GAAhG;;AAAiGqB,EAAAA,MAAM,CAACkU,iBAAP,GAAyB,SAASA,iBAAT,CAA2BC,iBAA3B,EAA6C;AAAC,QAAI/T,IAAI,GAAC,IAAT;AAAA,QAAcgU,GAAG,GAAC,EAAlB;AAAA,QAAqBzV,MAAM,GAACyB,IAAI,CAACzB,MAAjC;AAAA,QAAwC0V,KAAK,GAACjU,IAAI,CAACiU,KAAnD;AAAA,QAAyDC,SAAS,GAAClU,IAAI,CAACmB,UAAL,CAAgB,YAAhB,EAA8BnD,KAAjG;AAAA,QAAuGmW,OAAO,GAAC5V,MAAM,CAAC4V,OAAP,GAAe,CAAC,GAAEtX,IAAI,CAACuF,WAAR,EAAqB8R,SAAS,CAACE,OAA/B,EAAuC7V,MAAM,CAAC4V,OAA9C,EAAsD,CAAtD,CAA9H;AAAA,QAAuLE,eAAe,GAAC,CAAC,GAAExX,IAAI,CAACuF,WAAR,EAAqB7D,MAAM,CAAC8D,eAA5B,CAAvM;AAAA,QAAoPiS,SAAS,GAAC/V,MAAM,CAAC2D,SAArQ;AAAA,QAA+QpB,KAAK,GAAC,CAArR;AAAA,QAAuRyT,CAAvR;AAAA,QAAyRC,aAAa,GAAC,EAAvS;AAAA,QAA0SzT,MAAM,GAAC,CAAjT;AAAmTf,IAAAA,IAAI,CAACyU,iBAAL,CAAwB,UAASC,KAAT,EAAe;AAAC,UAAGA,KAAK,CAAC/U,OAAN,OAAkB,qBAAlB,IAAyC+U,KAAK,CAAC/U,OAAN,OAAkB,qBAA9D,EAAoF;AAAC6U,QAAAA,aAAa,CAACG,IAAd,CAAmBD,KAAnB;AAA0B;AAAC,KAAxJ;;AAA2J,QAAGP,OAAO,IAAEE,eAAT,IAA0BC,SAA1B,IAAqCE,aAAa,CAAClT,MAAtD,EAA6D;AAAC,WAAIiT,CAAC,GAACC,aAAa,CAAClT,MAAd,GAAqB,CAA3B,EAA6BiT,CAAC,IAAE,CAAhC,EAAkCA,CAAC,EAAnC,EAAsC;AAACP,QAAAA,GAAG,GAACQ,aAAa,CAACD,CAAD,CAAb,CAAiBK,mBAAjB,EAAJ;;AAA2C,YAAG,CAACX,KAAJ,EAAU;AAAClT,UAAAA,MAAM,GAACzD,IAAI,CAACC,GAAL,CAASwD,MAAT,EAAgBiT,GAAG,CAACa,SAApB,CAAP;AAAsC,SAAjD,MAAqD;AAAC/T,UAAAA,KAAK,GAACxD,IAAI,CAACC,GAAL,CAASuD,KAAT,EAAekT,GAAG,CAACc,QAAnB,CAAN;AAAmC;AAAC;;AAAA,UAAG/T,MAAM,GAACgT,iBAAV,EAA4B;AAAChT,QAAAA,MAAM,GAACgT,iBAAP;AAAyB;;AAAA,UAAGjT,KAAK,GAACiT,iBAAT,EAA2B;AAACjT,QAAAA,KAAK,GAACiT,iBAAN;AAAwB;AAAC;;AAAA,WAAM;AAAC1T,MAAAA,GAAG,EAACU,MAAL;AAAYX,MAAAA,KAAK,EAACU;AAAlB,KAAN;AAA+B,GAAz4B;;AAA04BlB,EAAAA,MAAM,CAACmV,gBAAP,GAAwB,SAASA,gBAAT,GAA2B;AAAC,QAAI/U,IAAI,GAAC,IAAT;AAAA,QAAcoB,KAAK,GAACpB,IAAI,CAAC3B,WAAL,CAAiB,OAAjB,KAA2B2B,IAAI,CAAC3B,WAAL,CAAiB,OAAjB,EAA0B,CAA1B,CAA/C;AAAA,QAA4E2W,KAAK,GAAChV,IAAI,CAAC3B,WAAL,CAAiB,OAAjB,KAA2B2B,IAAI,CAAC3B,WAAL,CAAiB,OAAjB,EAA0B,CAA1B,CAA7G;AAAA,QAA0I4W,eAAe,GAACjV,IAAI,CAAC3B,WAAL,CAAiB,WAAjB,KAA+B2B,IAAI,CAAC3B,WAAL,CAAiB,WAAjB,EAA8B,CAA9B,CAA/B,IAAiE2B,IAAI,CAAC3B,WAAL,CAAiB,WAAjB,EAA8B,CAA9B,EAAiCE,MAA5P;AAAA,QAAmQA,MAAM,GAACyB,IAAI,CAACzB,MAA/Q;AAAA,QAAsR2W,MAAM,GAAC3W,MAAM,CAAC2W,MAAP,IAAe,CAA5S;AAAA,QAA8ShB,SAAS,GAAClU,IAAI,CAACmB,UAAL,CAAgB,cAAhB,CAAxT;AAAA,QAAwVgU,0BAA0B,GAAC,CAAC,GAAEtY,IAAI,CAACuF,WAAR,EAAqB8R,SAAS,CAACkB,iBAA/B,CAAnX;AAAA,QAAqaC,2BAA2B,GAAC,CAAC,GAAExY,IAAI,CAACuF,WAAR,EAAqB8R,SAAS,CAACoB,kBAA/B,CAAjc;AAAA,QAAofC,YAAY,GAACvV,IAAI,CAAC3B,WAAL,CAAiB,QAAjB,KAA4B2B,IAAI,CAAC3B,WAAL,CAAiB,QAAjB,EAA2B,CAA3B,EAA8BE,MAA3jB;AAAA,QAAkkBiX,iBAAiB,GAACD,YAAY,IAAEA,YAAY,CAACC,iBAA/mB;AAAA,QAAioBC,YAAY,GAACzV,IAAI,CAAC0V,eAAL,EAA9oB;AAAA,QAAqqBC,KAAK,GAAC,CAACF,YAAY,IAAElX,MAAM,CAACmE,IAAtB,KAA6BnE,MAAM,CAACoX,KAApC,IAA2C,CAAttB;AAAA,QAAwtBC,aAAa,GAACL,YAAY,CAACK,aAAnvB;AAAA,QAAiwBlV,UAAU,GAAC6U,YAAY,CAAC7U,UAAzxB;AAAA,QAAoyBC,WAAW,GAACD,UAAU,GAAC6U,YAAY,CAACM,WAAx0B;AAAA,QAAo1BC,iBAAiB,GAACP,YAAY,CAACO,iBAAn3B;AAAA,QAAq4BC,kBAAkB,GAACR,YAAY,CAACQ,kBAAr6B;AAAA,QAAw7BnV,SAAS,GAAC2U,YAAY,CAAC3U,SAA/8B;AAAA,QAAy9BoV,gBAAgB,GAACzX,MAAM,CAAC0X,aAAP,IAAsB1X,MAAM,CAAC0X,aAAP,CAAqB5V,GAA3C,IAAgD,CAA1hC;AAAA,QAA4hC6V,gBAAgB,GAACX,YAAY,CAACW,gBAA1jC;AAAA,QAA2kCC,sBAA3kC;AAAA,QAAkmCC,uBAAlmC;;AAA0nC,QAAGjB,0BAA0B,IAAE,IAA/B,EAAoC;AAACgB,MAAAA,sBAAsB,GAAC7Y,IAAI,CAACC,GAAL,CAASuY,iBAAT,EAA2BF,aAA3B,CAAvB;AAAiE,KAAtG,MAA0G;AAACO,MAAAA,sBAAsB,GAAChB,0BAAvB;AAAkD;;AAAA,QAAGE,2BAA2B,IAAE,IAAhC,EAAqC;AAACe,MAAAA,uBAAuB,GAAC9Y,IAAI,CAACC,GAAL,CAASwY,kBAAT,EAA4BH,aAA5B,CAAxB;AAAmE,KAAzG,MAA6G;AAACQ,MAAAA,uBAAuB,GAACf,2BAAxB;AAAoD;;AAAAjU,IAAAA,KAAK,IAAEA,KAAK,CAACiV,aAAN,CAAoB;AAACP,MAAAA,iBAAiB,EAACK,sBAAnB;AAA0CJ,MAAAA,kBAAkB,EAACK;AAA7D,KAApB,CAAP;AAAkHhV,IAAAA,KAAK,IAAEA,KAAK,CAAC2T,gBAAN,CAAuB;AAACuB,MAAAA,CAAC,EAAC5V,UAAU,GAACwU,MAAX,GAAkBiB,sBAArB;AAA4CI,MAAAA,CAAC,EAACnV,KAAK,CAAC7C,MAAN,CAAawH,SAAb,GAAuBnF,SAAS,GAAC4U,iBAAV,IAA6BC,YAAY,IAAE,CAACR,eAAe,CAACuB,UAAjB,KAA8BpV,KAAK,CAAC7C,MAAN,CAAawH,SAAzD,GAAmE4P,KAAnE,GAAyE,CAAtG,IAAyGK,gBAAhI,GAAiJzX,MAAM,CAACsC,YAAP,IAAqBtC,MAAM,CAACmE,IAAP,IAAa+S,YAAY,IAAE,CAACR,eAAe,CAACuB,UAAjB,KAA8BpV,KAAK,CAAC7C,MAAN,CAAawH,SAAtE,GAAgF4P,KAAhF,GAAsF,CAA3G,IAA8GH,iBAA7S;AAA+TiB,MAAAA,QAAQ,EAACrV,KAAK,CAAC7C,MAAN,CAAawH,SAAb,GAAuBxH,MAAM,CAACsC,YAAP,GAAoB8U,KAApB,GAA0BH,iBAAjD,GAAmE5U,SAAS,GAAC4U,iBAAV,GAA4BG,KAAva;AAA6ae,MAAAA,UAAU,EAACnB,YAAY,CAACM,WAAb,GAAyBX,MAAzB,GAAgCiB,sBAAhC,GAAuDC;AAA/e,KAAvB,CAAP;AAAuiBpB,IAAAA,KAAK,IAAEA,KAAK,CAACD,gBAAN,CAAuB;AAACuB,MAAAA,CAAC,EAACtB,KAAK,CAACzW,MAAN,CAAawH,SAAb,GAAuBpF,WAAW,GAAC6U,iBAAnC,GAAqD9U,UAAU,GAAC8U,iBAAnE;AAAqFe,MAAAA,CAAC,EAAC3V,SAAS,GAACsV,gBAAjG;AAAkHO,MAAAA,QAAQ,EAACzB,KAAK,CAACzW,MAAN,CAAawH,SAAb,GAAuBrF,UAAU,GAAC8U,iBAAlC,GAAoD7U,WAAW,GAAC6U,iBAA3L;AAA6MkB,MAAAA,UAAU,EAACnB,YAAY,CAACoB,YAAb,GAA0BT,gBAA1B,GAA2CX,YAAY,CAACqB;AAAhR,KAAvB,CAAP;AAAoU,GAA18E;;AAA28EhX,EAAAA,MAAM,CAACiX,mBAAP,GAA2B,SAASA,mBAAT,CAA6BC,IAA7B,EAAkCC,OAAlC,EAA0C;AAAC,QAAI/W,IAAI,GAAC,IAAT;AAAA,QAAcgX,QAAQ,GAACD,OAAvB;AAAA,QAA+BE,UAAU,GAACH,IAAI,KAAG,GAAP,GAAW9W,IAAI,CAACmB,UAAL,CAAgB,YAAhB,EAA8BY,WAAzC,GAAqD/B,IAAI,CAACmB,UAAL,CAAgB,YAAhB,EAA8Bc,UAA7H;AAAA,QAAwIiV,MAAM,GAAC;AAAC3Z,MAAAA,GAAG,EAAC,CAAC4Z,QAAN;AAAe1Z,MAAAA,GAAG,EAAC0Z;AAAnB,KAA/I;AAAA,QAA4KC,YAA5K;AAAA,QAAyL7C,CAAzL;AAAA,QAA2L8C,EAA3L;AAAA,QAA8LC,EAA9L;AAAA,QAAiMC,GAAjM;AAAqMP,IAAAA,QAAQ,GAACA,QAAQ,IAAE,GAAnB;;AAAuB,QAAGC,UAAH,EAAc;AAAC,WAAI1C,CAAC,GAAC,CAAF,EAAI+C,EAAE,GAACL,UAAU,CAAC3V,MAAtB,EAA6BiT,CAAC,GAAC+C,EAA/B,EAAkC/C,CAAC,IAAE,CAArC,EAAuC;AAAC,aAAI8C,EAAE,GAAC,CAAH,EAAKE,GAAG,GAACN,UAAU,CAAC1C,CAAD,CAAV,CAAciD,IAAd,GAAmBP,UAAU,CAAC1C,CAAD,CAAV,CAAciD,IAAd,CAAmBlW,MAAtC,GAA6C,CAA1D,EAA4D+V,EAAE,GAACE,GAA/D,EAAmEF,EAAE,IAAE,CAAvE,EAAyE;AAACD,UAAAA,YAAY,GAACH,UAAU,CAAC1C,CAAD,CAAV,CAAciD,IAAd,CAAmBH,EAAnB,CAAb;;AAAoC,cAAGL,QAAQ,KAAG,GAAX,IAAgBI,YAAY,CAACK,WAAb,KAA2B,GAA3C,IAAgDT,QAAQ,KAAG,GAAX,IAAgBI,YAAY,CAACK,WAAb,KAA2B,GAA9F,EAAkG;AAAC;AAAS;;AAAAP,UAAAA,MAAM,CAAC3Z,GAAP,GAAWF,OAAO,CAAC+Z,YAAY,CAACM,UAAb,IAAyB,CAACP,QAA3B,EAAoCC,YAAY,CAACO,QAAb,IAAuB,CAACR,QAA5D,EAAqED,MAAM,CAAC3Z,GAA5E,CAAlB;AAAmG2Z,UAAAA,MAAM,CAACzZ,GAAP,GAAWD,OAAO,CAAC4Z,YAAY,CAACM,UAAb,IAAyBP,QAA1B,EAAmCC,YAAY,CAACO,QAAb,IAAuBR,QAA1D,EAAmED,MAAM,CAACzZ,GAA1E,CAAlB;AAAiG;AAAC;AAAC;;AAAA,WAAOyZ,MAAP;AAAc,GAAvwB;;AAAwwBtX,EAAAA,MAAM,CAACgY,aAAP,GAAqB,SAASA,aAAT,CAAuBd,IAAvB,EAA4B;AAAC,QAAGA,IAAI,KAAG,MAAP,IAAeA,IAAI,KAAG,OAAtB,IAA+BA,IAAI,KAAG,QAAzC,EAAkD;AAAC,WAAKvY,MAAL,CAAYsZ,UAAZ,GAAuBf,IAAvB;;AAA4B,UAAGA,IAAI,KAAG,MAAV,EAAiB;AAAC,aAAKgB,aAAL;AAAqB,OAAvC,MAA2C;AAAC,aAAKC,YAAL;AAAoB;AAAC;AAAC,GAAnM;;AAAoMnY,EAAAA,MAAM,CAACoY,aAAP,GAAqB,SAASA,aAAT,GAAwB;AAAC,WAAO,KAAKzZ,MAAL,CAAYsZ,UAAnB;AAA8B,GAA5E;;AAA6EjY,EAAAA,MAAM,CAACqY,gBAAP,GAAwB,SAASA,gBAAT,GAA2B;AAAC,QAAIja,KAAK,GAAC,IAAV;AAAA,QAAeka,gBAAgB,GAACla,KAAK,CAACmD,UAAN,CAAiB,kBAAjB,CAAhC;AAAA,QAAqEgX,iBAAiB,GAACna,KAAK,CAACK,WAAN,CAAkB,WAAlB,KAAgCL,KAAK,CAACK,WAAN,CAAkB,WAAlB,EAA+B,CAA/B,CAAvH;AAAA,QAAyJ+Z,OAAzJ;;AAAiK,QAAG,CAACD,iBAAJ,EAAsB;AAACA,MAAAA,iBAAiB,GAACna,KAAK,CAACqa,WAAN,CAAkB,IAAIjb,MAAM,CAACkb,SAAX,EAAlB,EAAuC,WAAvC,CAAlB;AAAsE;;AAAAH,IAAAA,iBAAiB,CAACI,SAAlB,CAA4B;AAACC,MAAAA,YAAY,EAAC,CAACxa,KAAK,CAACiW;AAArB,KAA5B;AAAyDkE,IAAAA,iBAAiB,CAACM,mBAAlB,CAAsC;AAACC,MAAAA,WAAW,EAAC,SAASA,WAAT,CAAqBxa,cAArB,EAAoC;AAACka,QAAAA,OAAO,GAACla,cAAR;AAAuBF,QAAAA,KAAK,CAAC2a,sBAAN,CAA6B,aAA7B,EAA2C;AAACza,UAAAA,cAAc,EAACA;AAAhB,SAA3C;AAA4E,OAArJ;AAAsJ0a,MAAAA,MAAM,EAAC,SAASA,MAAT,CAAgB1a,cAAhB,EAA+B;AAACga,QAAAA,gBAAgB,CAACW,iBAAjB,CAAmC,QAAnC;AAA6C7a,QAAAA,KAAK,CAAC2a,sBAAN,CAA6B,UAA7B,EAAwC;AAACza,UAAAA,cAAc,EAACA;AAAhB,SAAxC;AAAyEF,QAAAA,KAAK,CAAC8a,SAAN,CAAgB,UAAhB,EAA2B;AAAC5a,UAAAA,cAAc,EAACA;AAAhB,SAA3B;AAA4D,OAA/W;AAAgX6a,MAAAA,SAAS,EAAC,SAASA,SAAT,CAAmB7a,cAAnB,EAAkC;AAACF,QAAAA,KAAK,CAAC2a,sBAAN,CAA6B,WAA7B,EAAyC;AAACza,UAAAA,cAAc,EAACA,cAAhB;AAA+B8a,UAAAA,kBAAkB,EAACZ;AAAlD,SAAzC;AAAqG;AAAlgB,KAAtC;AAA2iB,GAAt5B;;AAAu5BxY,EAAAA,MAAM,CAACqZ,iBAAP,GAAyB,SAASA,iBAAT,GAA4B;AAAC,QAAIjb,KAAK,GAAC,IAAV;AAAA,QAAekb,SAAS,GAAClb,KAAK,CAACK,WAAN,CAAkB,WAAlB,KAAgCL,KAAK,CAACK,WAAN,CAAkB,WAAlB,EAA+B,CAA/B,CAAzD;;AAA2F,QAAG6a,SAAH,EAAa;AAACA,MAAAA,SAAS,CAACC,MAAV;AAAmB;AAAC,GAAnL;;AAAoLvZ,EAAAA,MAAM,CAAC4C,qBAAP,GAA6B,SAASA,qBAAT,GAAgC;AAAC,QAAIxE,KAAK,GAAC,IAAV;AAAA,QAAeI,IAAI,GAACJ,KAAK,CAACK,WAAN,CAAkB,OAAlB,EAA2B,CAA3B,CAApB;AAAA,QAAkDC,UAAU,GAACF,IAAI,CAACG,MAAlE;AAAA,QAAyEO,SAAS,GAACR,UAAU,CAACQ,SAA9F;AAAA,QAAwGsa,aAAa,GAAC9a,UAAU,CAAC8a,aAAX,KAA2B9a,UAAU,CAAC8a,aAAX,GAAyB,EAApD,CAAtH;AAAA,QAA8K7b,GAAG,GAACuB,SAAS,CAACvB,GAA5L;AAAA,QAAgME,GAAG,GAACqB,SAAS,CAACrB,GAA9M;AAAA,QAAkN4b,QAAQ,GAACD,aAAa,CAACC,QAAzO;AAAA,QAAkPH,SAAS,GAAClb,KAAK,CAACK,WAAN,CAAkB,WAAlB,EAA+B,CAA/B,CAA5P;AAAA,QAA8Rib,UAA9R;AAAA,QAAyS5Y,UAAzS;AAAA,QAAoTE,SAApT;AAAA,QAA8T+V,YAA9T;AAAA,QAA2Ud,WAA3U;AAAA,QAAuVN,YAAY,GAACvX,KAAK,CAACK,WAAN,CAAkB,QAAlB,EAA4B,CAA5B,EAA+BE,MAAnY;AAAA,QAA0YiX,iBAA1Y;AAAA,QAA4Z+D,aAA5Z;AAAA,QAA0aC,sBAA1a;AAAA,QAAicC,oBAAjc;AAAA,QAAsdC,WAAtd;AAAA,QAAkeC,mBAAle;AAAA,QAAsfC,eAAtf;AAAA,QAAsgBpb,aAAtgB;AAAA,QAAohBqb,UAAphB;AAAA,QAA+hBC,UAA/hB;AAAA,QAA0iBpb,YAA1iB;AAAA,QAAujBqb,UAAvjB;AAAA,QAAkkB7b,cAAlkB;;AAAilB,QAAG,CAACgb,SAAJ,EAAc;AAAC;AAAO;;AAAAI,IAAAA,UAAU,GAACJ,SAAS,CAAC3a,MAArB;AAA4BmC,IAAAA,UAAU,GAAC6U,YAAY,CAAC7U,UAAxB;AAAmCE,IAAAA,SAAS,GAAC2U,YAAY,CAAC3U,SAAvB;AAAiC+V,IAAAA,YAAY,GAACpB,YAAY,CAACoB,YAA1B;AAAuCd,IAAAA,WAAW,GAACN,YAAY,CAACM,WAAzB;AAAqCL,IAAAA,iBAAiB,GAACD,YAAY,CAACC,iBAA/B;AAAiD+D,IAAAA,aAAa,GAACjb,UAAU,CAACmG,YAAX,GAAwBnG,UAAU,CAAC4O,iBAAX,IAA8B,CAAtD,GAAwD,CAAtE;AAAwEsM,IAAAA,sBAAsB,GAAC,CAAC,GAAE3c,IAAI,CAACuF,WAAR,EAAqBoT,iBAArB,EAAuClX,UAAU,CAAC0b,kBAAlD,CAAvB;AAA6FP,IAAAA,oBAAoB,GAAC,CAAC,GAAE5c,IAAI,CAACuF,WAAR,EAAqBoT,iBAArB,EAAuClX,UAAU,CAAC2b,gBAAlD,CAArB;AAAyFb,IAAAA,aAAa,CAACc,WAAd,GAA0Bzc,GAA1B;AAA8B2b,IAAAA,aAAa,CAACe,WAAd,GAA0B5c,GAA1B;AAA8BiB,IAAAA,aAAa,GAACJ,IAAI,CAACK,gBAAL,EAAd;AAAsCob,IAAAA,UAAU,GAACrb,aAAa,CAACG,QAAzB;AAAkCmb,IAAAA,UAAU,GAACtb,aAAa,CAACI,QAAzB;AAAkCF,IAAAA,YAAY,GAACmb,UAAU,GAACC,UAAxB;AAAmCC,IAAAA,UAAU,GAACjb,SAAS,CAACvB,GAAV,GAAcuB,SAAS,CAACrB,GAAnC;AAAuCic,IAAAA,WAAW,GAAChb,YAAY,GAACqb,UAAzB;AAAoC7b,IAAAA,cAAc,GAAC,CAAC4b,UAAU,GAAChb,SAAS,CAACrB,GAAtB,KAA4Bsc,UAAU,GAACrb,YAAvC,CAAf;AAAoEib,IAAAA,mBAAmB,GAACP,aAAa,CAACO,mBAAd,GAAkCvb,IAAI,CAACgc,QAAL,CAAcf,QAAd,EAAuBla,YAAvB,CAAtD;AAA2Fya,IAAAA,eAAe,GAACR,aAAa,CAACQ,eAAd,GAA8Bxb,IAAI,CAACgc,QAAL,CAAc7c,GAAG,GAACE,GAAlB,EAAsB0B,YAAtB,IAAoCwa,mBAAlF;AAAsGL,IAAAA,UAAU,CAACI,WAAX,GAAuBA,WAAvB;AAAmCJ,IAAAA,UAAU,CAACe,UAAX,GAAsB9E,YAAY,CAAC+E,YAAnC;AAAgDhB,IAAAA,UAAU,CAACM,eAAX,GAA2BA,eAA3B;AAA2CN,IAAAA,UAAU,CAACK,mBAAX,GAA+BA,mBAA/B;AAAmDL,IAAAA,UAAU,CAACpb,cAAX,GAA0BA,cAA1B;;AAAyC,QAAG,CAACob,UAAU,CAACd,YAAf,EAA4B;AAACc,MAAAA,UAAU,CAACpb,cAAX,GAA0BI,UAAU,CAACW,SAAX,GAAqB,IAAEf,cAAvB,GAAsCA,cAAhE;AAA+E,aAAM;AAACoY,QAAAA,CAAC,EAACgD,UAAU,CAAC9C,UAAX,GAAsB9V,UAAU,GAACmV,WAAX,GAAuBL,iBAAvB,IAA0C8D,UAAU,CAACiB,OAAX,IAAoB,CAA9D,CAAtB,GAAuF7Z,UAAU,GAAC1C,KAAK,CAACO,MAAN,CAAaoX,KAAxB,GAA8BH,iBAAxH;AAA0Ie,QAAAA,CAAC,EAAC3V,SAAS,GAAC4U,iBAAV,IAA6B8D,UAAU,CAACiB,OAAX,IAAoB,CAAjD,CAA5I;AAAgMxZ,QAAAA,MAAM,EAAC4V,YAAY,GAACnB,iBAAiB,GAAC;AAAtO,OAAN;AAA+O;;AAAA8D,IAAAA,UAAU,CAACpb,cAAX,GAA0BA,cAA1B;AAAyC,WAAM;AAACoY,MAAAA,CAAC,EAAC5V,UAAU,GAAC8Y,sBAAd;AAAqCjD,MAAAA,CAAC,EAAC+C,UAAU,CAAC9C,UAAX,GAAsB5V,SAAS,GAAC4U,iBAAV,GAA4B+D,aAA5B,IAA2Cvb,KAAK,CAACO,MAAN,CAAaoX,KAAb,IAAoB,CAA/D,KAAmE2D,UAAU,CAACiB,OAAX,IAAoB,CAAvF,CAAtB,GAAgH3Z,SAAS,GAAC+V,YAAV,GAAuBnB,iBAAvB,GAAyC+D,aAAhM;AAA8MzY,MAAAA,KAAK,EAAC+U,WAAW,GAAC2D,sBAAZ,GAAmCC;AAAvP,KAAN;AAAmR,GAA1gF;;AAA2gF7Z,EAAAA,MAAM,CAACmY,YAAP,GAAoB,SAASA,YAAT,GAAuB;AAAC,SAAKE,gBAAL;AAAwB,GAApE;;AAAqErY,EAAAA,MAAM,CAACkY,aAAP,GAAqB,SAASA,aAAT,GAAwB;AAAC,SAAKmB,iBAAL;AAAyB,GAAvE;;AAAwErZ,EAAAA,MAAM,CAAC8V,eAAP,GAAuB,SAASA,eAAT,GAA0B;AAAC,QAAIwD,SAAS,GAAC,KAAK7a,WAAL,CAAiB,WAAjB,CAAd;AAA4C,WAAM,CAAC,EAAE6a,SAAS,IAAEA,SAAS,CAAC,CAAD,CAApB,IAAyB,CAACA,SAAS,CAAC,CAAD,CAAT,CAAasB,QAAb,CAAsB,SAAtB,CAA5B,CAAP;AAAqE,GAAnK;;AAAoK5a,EAAAA,MAAM,CAAC6a,YAAP,GAAoB,SAASA,YAAT,GAAuB;AAAC,QAAIzc,KAAK,GAAC,IAAV;AAAA,QAAe6Z,UAAU,GAAC7Z,KAAK,CAACga,aAAN,EAA1B;;AAAgD,QAAGH,UAAU,KAAG,QAAb,IAAuBA,UAAU,KAAG,OAAb,IAAsB7Z,KAAK,CAACmD,UAAN,CAAiB,MAAjB,EAAyBuZ,OAAzB,OAAqC,CAArF,EAAuF;AAAC1c,MAAAA,KAAK,CAAC+Z,YAAN;AAAqB,KAA7G,MAAiH;AAAC/Z,MAAAA,KAAK,CAAC8Z,aAAN;AAAsB;AAAC,GAArO;;AAAsO,SAAOzY,SAAP;AAAiB,CAAn7tB,CAAo7tBzC,mBAAmB,CAACF,OAAx8tB,CAAd;;AAA+9tB,IAAIie,QAAQ,GAACtb,SAAb;AAAuB7C,OAAO,CAACE,OAAR,GAAgBie,QAAhB","sourcesContent":["\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=void 0;var _inheritsLoose2=_interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));var _commonspacemanager=_interopRequireDefault(require(\"./commonspacemanager\"));var _lib=require(\"@fusioncharts/core/src/lib\");var _number=_interopRequireDefault(require(\"@fusioncharts/utils/src/scale-utils/interpolators/number\"));var _cartesianAxis=_interopRequireDefault(require(\"../../factories/cartesian-axis\"));var _canvasAxisRefCartesian=_interopRequireDefault(require(\"../../factories/canvas-axis-ref-cartesian\"));var _vcanvas=_interopRequireDefault(require(\"../../factories/vcanvas\"));var _mouseTracker=_interopRequireDefault(require(\"../../factories/mouse-tracker\"));var _equal=_interopRequireDefault(require(\"@fusioncharts/utils/src/string/equal\"));var _tools=require(\"@fusioncharts/core/src/toolbox/tools\");var mathMax=Math.max,mathMin=Math.min,UNDEF,setDimension=function setDimension(dimension1,dimension2){if(dimension1<dimension2&&dimension2>0){return dimension2-dimension1}return 0},onAxisVisibilityChange=function onAxisVisibilityChange(e){var chart=e.sender,scrollPosition=e.data.scrollPosition,axis=chart.getChildren(\"xAxis\")[0],axisConfig=axis.config,visibleConfig=axis.getVisibleConfig(),visibleRange=visibleConfig.maxValue-visibleConfig.minValue,interpolateMax=axisConfig.axisRange.max-visibleRange,interpolate=(0,_number.default)(axisConfig.axisRange.min,interpolateMax),visibleStart=axisConfig.isReverse?interpolate(1-scrollPosition):interpolate(scrollPosition);axis.setVisibleConfig(visibleStart,visibleStart+visibleRange)};var queryOptions={wrtVisible:true};var Cartesian=function(_CommonSpaceManager){(0,_inheritsLoose2.default)(Cartesian,_CommonSpaceManager);function Cartesian(){var _this;_this=_CommonSpaceManager.call(this)||this;_this.registerFactory(\"axis\",_cartesianAxis.default,[\"canvas\"]);_this.registerFactory(\"canvas\",_canvasAxisRefCartesian.default);_this.registerFactory(\"vCanvas\",_vcanvas.default,[\"axis\"]);_this.registerFactory(\"mouseTracker\",_mouseTracker.default,[\"canvas\"]);_this.addEventListener(\"onScroll\",onAxisVisibilityChange);return _this}Cartesian.getName=function getName(){return\"Cartesian\"};var _proto=Cartesian.prototype;_proto.getName=function getName(){return\"Cartesian\"};_proto.getType=function getType(){return\"chartAPI\"};_proto._allocateXAxisLabelSpace=function _allocateXAxisLabelSpace(axis){var iapi=this,config=iapi.config,dimensions=axis.getAxisEndLabelDisplaySpace(),left=dimensions.left,right=dimensions.right,top=dimensions.top,sum,bottom=dimensions.bottom,availableWidth=config.availableWidth,availableHeight=config.availableHeight,canvasLeft=config.canvasLeft,canvasRight=config.canvasRight,canvasTop=config.canvasTop,canvasBottom=config.canvasBottom,width=config.width,height=config.height;if(top+bottom>availableHeight){sum=top+bottom;top=availableHeight*top/sum;bottom=availableHeight*bottom/sum}if(left+right>availableWidth){sum=left+right;left=availableWidth*left/sum;right=availableWidth*right/sum}left=setDimension(canvasLeft,left);right=setDimension(width-canvasRight,right);top=setDimension(canvasTop,top);bottom=setDimension(height-canvasBottom,bottom);iapi._allocateSpace({left:left,right:right,top:top,bottom:bottom})};_proto._setCategories=function _setCategories(){var iapi=this,dataObj=iapi.getFromEnv(\"dataSource\"),xAxis=iapi.getChildren(\"xAxis\"),categories=dataObj.categories&&dataObj.categories.length&&dataObj.categories[0].category;xAxis&&xAxis[0].setTickValues(categories)};_proto._feedAxesRawData=function _feedAxesRawData(){var iapi=this,chartConfig=iapi.config,dataObj=iapi.getFromEnv(\"dataSource\"),xAxisConf,yAxisConf;xAxisConf=iapi.getSpecificxAxisConf();yAxisConf=iapi.getSpecificyAxisConf();xAxisConf.vtrendlines=(0,_lib.extend2)([],dataObj.vtrendlines);yAxisConf.trendlines=(0,_lib.extend2)([],dataObj.trendlines);if(chartConfig.isstacked){yAxisConf.isPercent=(0,_lib.pluckNumber)(chartConfig.stack100percent,0)}return{yAxisConf:[yAxisConf],xAxisConf:[xAxisConf]}};_proto.allocatePosition=function allocatePosition(){this.setScrollBarDimension()};_proto.setScrollBarDimension=function setScrollBarDimension(){var chart=this;if(chart.getChildren(\"scrollBar\")&&chart.getChildren(\"scrollBar\")[0]){chart.getChildren(\"scrollBar\")[0].setDimension(chart.getScrollbarDimension())}};_proto.getSpecificxAxisConf=function getSpecificxAxisConf(){var iapi=this,chartAttrs=iapi.getFromEnv(\"chart-attrib\"),chartConfig=iapi.config,is3D=iapi.config.is3D,xAxisConf=iapi.getBasexAxisConf();xAxisConf.isReverse=chartConfig.reverseXAxis;xAxisConf.axisLineColor=(0,_lib.pluck)(chartAttrs.xaxislinecolor,chartAttrs.axislinecolor,\"#000000\");xAxisConf.showAlternateGridColor=(0,_lib.pluckNumber)(chartAttrs.showalternatevgridcolor,0);xAxisConf.numDivLines=(0,_lib.pluckNumber)(chartAttrs.numvdivlines,chartConfig.numVDivLines);xAxisConf.axisName=chartAttrs.xaxisname;xAxisConf.setAdaptiveMin=(0,_lib.pluckNumber)(chartAttrs.setadaptivexmin,chartConfig.setadaptivexmin,chartConfig.setadaptivexmin);xAxisConf.showLimits=(0,_lib.pluckNumber)(chartAttrs.showvlimits,chartConfig.showvlimits);xAxisConf.showDivLineValues=(0,_lib.pluckNumber)(chartAttrs.showvdivlinevalues,chartAttrs.showvdivlinevalues,chartConfig.showvdivlinevalues);xAxisConf.zeroPlaneThickness=(0,_lib.pluckNumber)(chartAttrs.vzeroplanethickness,chartAttrs.vdivlinethickness,chartConfig.zeroplanethickness,2);xAxisConf.zeroPlaneAlpha=(0,_lib.pluckNumber)(chartAttrs.vzeroplanealpha,chartAttrs.vdivlinealpha,chartConfig.zeroplanealpha);xAxisConf.showZeroPlaneValue=(0,_lib.pluckNumber)(chartAttrs.showvzeroplanevalue,chartConfig.showzeroplanevalue);xAxisConf.showAxisLine=is3D?0:(0,_lib.pluckNumber)(chartAttrs.showxaxisline,chartAttrs.showaxislines,chartAttrs.drawAxisLines,chartConfig.showxaxisline,0);xAxisConf.maxLabelHeight=chartAttrs.maxlabelheight;xAxisConf.showZeroPlane=(0,_lib.pluckNumber)(chartAttrs.showvzeroplane,chartConfig.showzeroplane);return xAxisConf};_proto.getSpecificyAxisConf=function getSpecificyAxisConf(){var iapi=this,chartAttrs=iapi.getFromEnv(\"chart-attrib\"),chartConfig=iapi.config,is3D=iapi.config.is3D,palleteString=is3D?_lib.chartPaletteStr.chart3D:_lib.chartPaletteStr.chart2D,isReverse=chartConfig.isInverse,colorM=iapi.getFromEnv(\"color-manager\"),showYAxisZeroPlane=(0,_lib.pluckNumber)(chartAttrs.showzeroplane,chartConfig.showzeroplane,1),showYAxisZeroPlaneValue=(0,_lib.pluckNumber)(chartAttrs.showzeroplanevalue,chartConfig.showzeroplanevalue),outCanfontSizeWithUnit=(0,_lib.pluckFontSizeMaintainUnit)(chartAttrs.outcnvbasefontsize,chartAttrs.basefontsize,10);if(!showYAxisZeroPlane&&showYAxisZeroPlaneValue===UNDEF){showYAxisZeroPlaneValue=0}return{isVertical:true,isReverse:!isReverse,isOpposit:(0,_equal.default)(chartAttrs.yaxisposition,\"right\"),outCanfontFamily:(0,_lib.pluck)(chartAttrs.outcnvbasefont,chartAttrs.basefont,\"Verdana,sans\"),outCanfontSize:this.computeFontSize(outCanfontSizeWithUnit),outCanfontSizeWithUnit:outCanfontSizeWithUnit,outCancolor:(0,_lib.pluck)(chartAttrs.outcnvbasefontcolor,chartAttrs.basefontcolor,colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/gi,\"#$1\"),axisBreaks:chartAttrs.yaxisbreaks,axisNamePadding:chartAttrs.yaxisnamepadding,axisValuePadding:chartAttrs.yaxisvaluespadding,axisNameFont:chartAttrs.yaxisnamefont,axisNameFontSize:this.computeFontSize(chartAttrs.yaxisnamefontsize),axisNameFontSizeWithUnit:chartAttrs.yaxisnamefontsize,axisNameFontColor:chartAttrs.yaxisnamefontcolor,axisNameFontBold:chartAttrs.yaxisnamefontbold,axisNameFontItalic:chartAttrs.yaxisnamefontitalic,axisNameBgColor:chartAttrs.yaxisnamebgcolor,axisNameBorderColor:chartAttrs.yaxisnamebordercolor,axisNameAlpha:chartAttrs.yaxisnamealpha,axisNameFontAlpha:chartAttrs.yaxisnamefontalpha,axisNameBgAlpha:chartAttrs.yaxisnamebgalpha,axisNameBorderAlpha:chartAttrs.yaxisnameborderalpha,axisNameBorderPadding:chartAttrs.yaxisnameborderpadding,axisNameBorderRadius:chartAttrs.yaxisnameborderradius,axisNameBorderThickness:chartAttrs.yaxisnameborderthickness,axisNameBorderDashed:chartAttrs.yaxisnameborderdashed,axisNameBorderDashLen:chartAttrs.yaxisnameborderdashlen,axisNameBorderDashGap:chartAttrs.yaxisnameborderdashgap,axisNameWidth:chartAttrs.yaxisnamewidth,useEllipsesWhenOverflow:chartAttrs.useellipseswhenoverflow,rotateAxisName:(0,_lib.pluckNumber)(chartAttrs.rotateyaxisname,1),axisName:chartAttrs.yaxisname,divLineColor:(0,_lib.pluck)(chartAttrs.divlinecolor,colorM.getColor(palleteString.divLineColor)),divLineAlpha:(0,_lib.pluck)(chartAttrs.divlinealpha,is3D?colorM.getColor(\"divLineAlpha3D\"):colorM.getColor(\"divLineAlpha\")),divLineThickness:(0,_lib.pluckNumber)(chartAttrs.divlinethickness,1),divLineIsDashed:Boolean((0,_lib.pluckNumber)(chartAttrs.divlinedashed,chartAttrs.divlineisdashed,0)),divLineDashLen:(0,_lib.pluckNumber)(chartAttrs.divlinedashlen,4),divLineDashGap:(0,_lib.pluckNumber)(chartAttrs.divlinedashgap,2),showAlternateGridColor:(0,_lib.pluckNumber)(chartAttrs.showalternatehgridcolor,1),alternateGridColor:(0,_lib.pluck)(chartAttrs.alternatehgridcolor,colorM.getColor(\"altHGridColor\")),alternateGridAlpha:(0,_lib.pluck)(chartAttrs.alternatehgridalpha,colorM.getColor(\"altHGridAlpha\")),numDivLines:(0,_lib.pluckNumber)(chartAttrs.numdivlines,chartConfig.numDivLines),axisMinValue:chartConfig.yRangeMin||chartAttrs.yaxisminvalue,axisMaxValue:chartConfig.yRangeMax||chartAttrs.yaxismaxvalue,setAdaptiveMin:(0,_lib.pluckNumber)(chartAttrs.setadaptivesymin,chartAttrs.setadaptiveymin,chartConfig.setAdaptiveMin),adjustDiv:chartAttrs.adjustdiv,labelStep:chartAttrs.yaxisvaluesstep,showAxisValues:(0,_lib.pluckNumber)(chartAttrs.showyaxisvalues,chartAttrs.showyaxisvalue,chartConfig.showyaxisvalues),showLimits:(0,_lib.pluckNumber)(chartAttrs.showyaxislimits,chartAttrs.showlimits,iapi.showLimits),showDivLineValues:(0,_lib.pluckNumber)(chartAttrs.showdivlinevalues,chartAttrs.showdivlinevalue,chartConfig.showdivlinevalues),showZeroPlane:showYAxisZeroPlane,zeroPlaneColor:chartAttrs.zeroplanecolor,zeroPlaneThickness:(0,_lib.pluckNumber)(chartAttrs.zeroplanethickness,chartAttrs.divlinethickness,chartConfig.zeroplanethickness,2),zeroPlaneAlpha:(0,_lib.pluckNumber)(chartAttrs.zeroplanealpha,chartAttrs.divlinealpha,chartConfig.zeroplanealpha),showZeroPlaneValue:showYAxisZeroPlaneValue,showZeroPlaneOnTop:chartConfig.showzeroplaneontop,trendlineColor:chartAttrs.trendlinecolor,trendlineToolText:chartAttrs.trendlinetooltext,trendlineThickness:chartAttrs.trendlinethickness,trendlineAlpha:chartAttrs.trendlinealpha,showTrendlinesOnTop:chartAttrs.showtrendlinesontop,showAxisLine:is3D?0:(0,_lib.pluckNumber)(chartAttrs.showyaxisline,chartAttrs.showaxislines,chartAttrs.drawAxisLines,chartConfig.showyaxisline,0),axisLineThickness:(0,_lib.pluckNumber)(chartAttrs.yaxislinethickness,chartAttrs.axislinethickness,1),axisLineAlpha:(0,_lib.pluckNumber)(chartAttrs.yaxislinealpha,chartAttrs.axislinealpha,100),axisLineColor:(0,_lib.pluck)(chartAttrs.yaxislinecolor,chartAttrs.axislinecolor,\"#000000\"),forceTrendBelow:!!chartConfig.is3D,labelFont:chartAttrs.yaxisvaluefont,labelFontSize:this.computeFontSize(chartAttrs.yaxisvaluefontsize),labelFontSizeWithUnit:chartAttrs.yaxisvaluefontsize,labelFontColor:chartAttrs.yaxisvaluefontcolor,labelAlpha:chartAttrs.yaxisvaluealpha,labelFontBold:chartAttrs.yaxisvaluefontbold,labelFontItalic:chartAttrs.yaxisvaluefontitalic,labelBdrColor:chartAttrs.yaxisvaluebordercolor,labelBdrAlpha:chartAttrs.yaxisvalueborderalpha,labelBgAlpha:chartAttrs.yaxisvaluebgalpha,labelLink:chartAttrs.yaxisvaluelink,labelBgColor:chartAttrs.yaxisvaluebgcolor,labelBdrThickness:chartAttrs.yaxisvalueborderthickness,labelBdrPadding:chartAttrs.yaxisvalueborderpadding,labelBdrRadius:chartAttrs.yaxisvalueborderradius,labelBdrDashed:chartAttrs.yaxisvalueborderdashed,labelBdrDashLen:chartAttrs.yaxisvalueborderdashlen,labelBdrDashGap:chartAttrs.yaxisvalueborderdashgap}};_proto.getBasexAxisConf=function getBasexAxisConf(){var iapi=this,chartAttrs=iapi.getFromEnv(\"chart-attrib\"),is3D=iapi.config.is3D,palleteString=is3D?_lib.chartPaletteStr.chart3D:_lib.chartPaletteStr.chart2D,colorM=iapi.getFromEnv(\"color-manager\"),outCanfontSizeWithUnit=(0,_lib.pluckFontSizeMaintainUnit)(chartAttrs.outcnvbasefontsize,chartAttrs.basefontsize,10);return{isVertical:false,isOpposit:(0,_equal.default)(chartAttrs.xaxisposition,\"top\"),outCanfontFamily:(0,_lib.pluck)(chartAttrs.outcnvbasefont,chartAttrs.basefont,\"Verdana,sans\"),outCanfontSize:this.computeFontSize(outCanfontSizeWithUnit),outCanfontSizeWithUnit:outCanfontSizeWithUnit,outCancolor:(0,_lib.pluck)(chartAttrs.outcnvbasefontcolor,chartAttrs.basefontcolor,colorM.getColor(palleteString.baseFontColor)).replace(/^#? ([a-f0-9]+)/gi,\"#$1\"),axisNamePadding:chartAttrs.xaxisnamepadding,axisValuePadding:chartAttrs.labelpadding,axisNameFont:chartAttrs.xaxisnamefont,axisNameFontSize:this.computeFontSize(chartAttrs.xaxisnamefontsize),axisNameFontSizeWithUnit:chartAttrs.xaxisnamefontsize,axisNameFontColor:chartAttrs.xaxisnamefontcolor,axisNameFontBold:chartAttrs.xaxisnamefontbold,axisNameFontItalic:chartAttrs.xaxisnamefontitalic,axisNameBgColor:chartAttrs.xaxisnamebgcolor,axisNameBorderColor:chartAttrs.xaxisnamebordercolor,axisNameAlpha:chartAttrs.xaxisnamealpha,axisNameFontAlpha:chartAttrs.xaxisnamefontalpha,axisNameBgAlpha:chartAttrs.xaxisnamebgalpha,axisNameBorderAlpha:chartAttrs.xaxisnameborderalpha,axisNameBorderPadding:chartAttrs.xaxisnameborderpadding,axisNameBorderRadius:chartAttrs.xaxisnameborderradius,axisNameBorderThickness:chartAttrs.xaxisnameborderthickness,axisNameBorderDashed:chartAttrs.xaxisnameborderdashed,axisNameBorderDashLen:chartAttrs.xaxisnameborderdashlen,axisNameBorderDashGap:chartAttrs.xaxisnameborderdashgap,useEllipsesWhenOverflow:chartAttrs.useellipseswhenoverflow,divLineColor:(0,_lib.pluck)(chartAttrs.vdivlinecolor,chartAttrs.divlinecolor,colorM.getColor(palleteString.divLineColor)),divLineAlpha:(0,_lib.pluck)(chartAttrs.vdivlinealpha,chartAttrs.divlinealpha,is3D?colorM.getColor(\"divLineAlpha3D\"):colorM.getColor(\"divLineAlpha\")),divLineThickness:(0,_lib.pluckNumber)(chartAttrs.vdivlinethickness,chartAttrs.divlinethickness,1),divLineIsDashed:Boolean((0,_lib.pluckNumber)(chartAttrs.vdivlinedashed,chartAttrs.vdivlineisdashed,chartAttrs.divlinedashed,chartAttrs.divlineisdashed,0)),divLineDashLen:(0,_lib.pluckNumber)(chartAttrs.vdivlinedashlen,chartAttrs.divlinedashlen,4),divLineDashGap:(0,_lib.pluckNumber)(chartAttrs.vdivlinedashgap,chartAttrs.divlinedashgap,2),alternateGridColor:(0,_lib.pluck)(chartAttrs.alternatevgridcolor,colorM.getColor(\"altVGridColor\")),alternateGridAlpha:(0,_lib.pluck)(chartAttrs.alternatevgridalpha,colorM.getColor(\"altVGridAlpha\")),labelFont:chartAttrs.labelfont,labelFontSize:this.computeFontSize(chartAttrs.labelfontsize),labelFontSizeWithUnit:chartAttrs.labelfontsize,labelFontColor:chartAttrs.labelfontcolor,labelAlpha:chartAttrs.labelalpha,labelFontBold:chartAttrs.labelfontbold,labelFontItalic:chartAttrs.labelfontitalic,labelBdrColor:chartAttrs.labelbordercolor,labelBdrAlpha:chartAttrs.labelborderalpha,labelLink:chartAttrs.labellink,labelBgColor:chartAttrs.labelbgcolor,labelBdrThickness:chartAttrs.labelborderthickness,labelBdrPadding:chartAttrs.labelborderpadding,labelBdrRadius:chartAttrs.labelborderradius,labelBdrDashed:chartAttrs.labelborderdashed,labelBgAlpha:chartAttrs.labelbgalpha,labelBdrDashLen:chartAttrs.labelborderdashlen,labelBdrDashGap:chartAttrs.labelborderdashgap,axisMinValue:chartAttrs.xaxisminvalue,axisMaxValue:chartAttrs.xaxismaxvalue,adjustDiv:chartAttrs.adjustvdiv,labelDisplay:chartAttrs.labeldisplay,showLabels:chartAttrs.showlabels,rotateLabels:chartAttrs.rotatelabels,slantLabel:(0,_lib.pluckNumber)(chartAttrs.slantlabels,chartAttrs.slantlabel),labelStep:(0,_lib.pluckNumber)(chartAttrs.labelstep,chartAttrs.xaxisvaluesstep),showAxisValues:(0,_lib.pluckNumber)(chartAttrs.showxaxisvalues,chartAttrs.showxaxisvalue),zeroPlaneColor:chartAttrs.vzeroplanecolor,trendlineColor:chartAttrs.trendlinecolor,trendlineToolText:chartAttrs.trendlinetooltext,trendlineThickness:chartAttrs.trendlinethickness,trendlineAlpha:chartAttrs.trendlinealpha,showTrendlinesOnTop:chartAttrs.showtrendlinesontop,axisLineThickness:(0,_lib.pluckNumber)(chartAttrs.xaxislinethickness,chartAttrs.axislinethickness,1),axisLineAlpha:(0,_lib.pluckNumber)(chartAttrs.xaxislinealpha,chartAttrs.axislinealpha,100)}};_proto.getConfig=function getConfig(confName){return confName?this.config[confName]:this.config};_proto._getSumValueSpace=function _getSumValueSpace(maxAvailableSpace){var iapi=this,dim={},config=iapi.config,isBar=iapi.isBar,chartAttr=iapi.getFromEnv(\"dataSource\").chart,showSum=config.showSum=(0,_lib.pluckNumber)(chartAttr.showsum,config.showSum,0),stack100Percent=(0,_lib.pluckNumber)(config.stack100percent),isStacked=config.isstacked,width=0,i,stackManagers=[],height=0;iapi.iterateComponents((function(child){if(child.getName()===\"cartesianStackGroup\"||child.getName()===\"marimekkoStackgroup\"){stackManagers.push(child)}}));if(showSum&&stack100Percent&&isStacked&&stackManagers.length){for(i=stackManagers.length-1;i>=0;i--){dim=stackManagers[i].getMaxSumValueSpace();if(!isBar){height=Math.max(height,dim.maxHeight)}else{width=Math.max(width,dim.maxWidth)}}if(height>maxAvailableSpace){height=maxAvailableSpace}if(width>maxAvailableSpace){width=maxAvailableSpace}}return{top:height,right:width}};_proto.setAxisDimention=function setAxisDimention(){var iapi=this,xAxis=iapi.getChildren(\"xAxis\")&&iapi.getChildren(\"xAxis\")[0],yAxis=iapi.getChildren(\"yAxis\")&&iapi.getChildren(\"yAxis\")[0],scrollbarConfig=iapi.getChildren(\"scrollBar\")&&iapi.getChildren(\"scrollBar\")[0]&&iapi.getChildren(\"scrollBar\")[0].config,config=iapi.config,xDepth=config.xDepth||0,chartAttr=iapi.getFromEnv(\"chart-attrib\"),chartAttrCanvasLeftPadding=(0,_lib.pluckNumber)(chartAttr.canvasleftpadding),chartAttrCanvasRightPadding=(0,_lib.pluckNumber)(chartAttr.canvasrightpadding),canvasConfig=iapi.getChildren(\"canvas\")&&iapi.getChildren(\"canvas\")[0].config,canvasBorderWidth=canvasConfig&&canvasConfig.canvasBorderWidth,hasScrollBar=iapi.isScrollEnabled(),shift=(hasScrollBar||config.is3D)&&config.shift||0,canvasPadding=canvasConfig.canvasPadding,canvasLeft=canvasConfig.canvasLeft,canvasRight=canvasLeft+canvasConfig.canvasWidth,canvasPaddingLeft=canvasConfig.canvasPaddingLeft,canvasPaddingRight=canvasConfig.canvasPaddingRight,canvasTop=canvasConfig.canvasTop,sumValueSpaceTop=config.sumValueSpace&&config.sumValueSpace.top||0,canvasPaddingTop=canvasConfig.canvasPaddingTop,finalCanvasLeftPadding,finalCanvasRightPadding;if(chartAttrCanvasLeftPadding==null){finalCanvasLeftPadding=Math.max(canvasPaddingLeft,canvasPadding)}else{finalCanvasLeftPadding=chartAttrCanvasLeftPadding}if(chartAttrCanvasRightPadding==null){finalCanvasRightPadding=Math.max(canvasPaddingRight,canvasPadding)}else{finalCanvasRightPadding=chartAttrCanvasRightPadding}xAxis&&xAxis.setAxisConfig({canvasPaddingLeft:finalCanvasLeftPadding,canvasPaddingRight:finalCanvasRightPadding});xAxis&&xAxis.setAxisDimention({x:canvasLeft+xDepth+finalCanvasLeftPadding,y:xAxis.config.isOpposit?canvasTop-canvasBorderWidth-(hasScrollBar&&+scrollbarConfig.isOpposite===xAxis.config.isOpposit?shift:0)-sumValueSpaceTop:config.canvasBottom+(config.is3D||hasScrollBar&&+scrollbarConfig.isOpposite===xAxis.config.isOpposit?shift:0)+canvasBorderWidth,opposite:xAxis.config.isOpposit?config.canvasBottom+shift+canvasBorderWidth:canvasTop-canvasBorderWidth-shift,axisLength:canvasConfig.canvasWidth-xDepth-finalCanvasLeftPadding-finalCanvasRightPadding});yAxis&&yAxis.setAxisDimention({x:yAxis.config.isOpposit?canvasRight+canvasBorderWidth:canvasLeft-canvasBorderWidth,y:canvasTop+canvasPaddingTop,opposite:yAxis.config.isOpposit?canvasLeft-canvasBorderWidth:canvasRight+canvasBorderWidth,axisLength:canvasConfig.canvasHeight-canvasPaddingTop-canvasConfig.canvasPaddingBottom})};_proto._getTrendLineMinMax=function _getTrendLineMinMax(type,axsType){var iapi=this,axisType=axsType,trendLines=type===\"v\"?iapi.getFromEnv(\"dataSource\").vtrendlines:iapi.getFromEnv(\"dataSource\").trendlines,retObj={max:-Infinity,min:Infinity},trendLineObj,i,ii,ln,lnn;axisType=axisType||\"p\";if(trendLines){for(i=0,ln=trendLines.length;i<ln;i+=1){for(ii=0,lnn=trendLines[i].line?trendLines[i].line.length:0;ii<lnn;ii+=1){trendLineObj=trendLines[i].line[ii];if(axisType===\"s\"&&trendLineObj.parentyaxis!==\"s\"||axisType!==\"s\"&&trendLineObj.parentyaxis===\"s\"){continue}retObj.max=mathMax(trendLineObj.startvalue||-Infinity,trendLineObj.endvalue||-Infinity,retObj.max);retObj.min=mathMin(trendLineObj.startvalue||Infinity,trendLineObj.endvalue||Infinity,retObj.min)}}}return retObj};_proto.setScrollType=function setScrollType(type){if(type===\"none\"||type===\"smart\"||type===\"always\"){this.config.scrollType=type;if(type===\"none\"){this.disableScroll()}else{this.enableScroll()}}};_proto.getScrollType=function getScrollType(){return this.config.scrollType};_proto._createScrollBar=function _createScrollBar(){var chart=this,animationManager=chart.getFromEnv(\"animationManager\"),scrollbarInstance=chart.getChildren(\"scrollBar\")&&chart.getChildren(\"scrollBar\")[0],prevPos;if(!scrollbarInstance){scrollbarInstance=chart.attachChild(new _tools.ScrollBar,\"scrollBar\")}scrollbarInstance.configure({isHorizontal:!chart.isBar});scrollbarInstance.attachEventHandlers({scrollStart:function scrollStart(scrollPosition){prevPos=scrollPosition;chart.fireChartInstanceEvent(\"scrollstart\",{scrollPosition:scrollPosition})},scroll:function scroll(scrollPosition){animationManager.setAnimationState(\"scroll\");chart.fireChartInstanceEvent(\"onScroll\",{scrollPosition:scrollPosition});chart.fireEvent(\"onScroll\",{scrollPosition:scrollPosition})},scrollEnd:function scrollEnd(scrollPosition){chart.fireChartInstanceEvent(\"scrollend\",{scrollPosition:scrollPosition,prevScrollPosition:prevPos})}})};_proto._disposeScrollBar=function _disposeScrollBar(){var chart=this,scrollBar=chart.getChildren(\"scrollBar\")&&chart.getChildren(\"scrollBar\")[0];if(scrollBar){scrollBar.remove()}};_proto.getScrollbarDimension=function getScrollbarDimension(){var chart=this,axis=chart.getChildren(\"xAxis\")[0],axisConfig=axis.config,axisRange=axisConfig.axisRange,scrollOptions=axisConfig.scrollOptions||(axisConfig.scrollOptions={}),max=axisRange.max,min=axisRange.min,vxLength=scrollOptions.vxLength,scrollBar=chart.getChildren(\"scrollBar\")[0],scrollConf,canvasLeft,canvasTop,canvasHeight,canvasWidth,canvasConfig=chart.getChildren(\"canvas\")[0].config,canvasBorderWidth,axisLineWidth,axisLineStartExtension,axisLineEndExtension,scrollRatio,windowedCanvasWidth,fullCanvasWidth,visibleConfig,visibleMax,visibleMin,visibleRange,totalRange,scrollPosition;if(!scrollBar){return}scrollConf=scrollBar.config;canvasLeft=canvasConfig.canvasLeft;canvasTop=canvasConfig.canvasTop;canvasHeight=canvasConfig.canvasHeight;canvasWidth=canvasConfig.canvasWidth;canvasBorderWidth=canvasConfig.canvasBorderWidth;axisLineWidth=axisConfig.showAxisLine?axisConfig.axisLineThickness||0:0;axisLineStartExtension=(0,_lib.pluckNumber)(canvasBorderWidth,axisConfig.lineStartExtension);axisLineEndExtension=(0,_lib.pluckNumber)(canvasBorderWidth,axisConfig.lineEndExtension);scrollOptions.viewPortMin=min;scrollOptions.viewPortMax=max;visibleConfig=axis.getVisibleConfig();visibleMax=visibleConfig.maxValue;visibleMin=visibleConfig.minValue;visibleRange=visibleMax-visibleMin;totalRange=axisRange.max-axisRange.min;scrollRatio=visibleRange/totalRange;scrollPosition=(visibleMin-axisRange.min)/(totalRange-visibleRange);windowedCanvasWidth=scrollOptions.windowedCanvasWidth=axis.getPixel(vxLength,queryOptions);fullCanvasWidth=scrollOptions.fullCanvasWidth=axis.getPixel(max-min,queryOptions)-windowedCanvasWidth;scrollConf.scrollRatio=scrollRatio;scrollConf.roundEdges=canvasConfig.isRoundEdges;scrollConf.fullCanvasWidth=fullCanvasWidth;scrollConf.windowedCanvasWidth=windowedCanvasWidth;scrollConf.scrollPosition=scrollPosition;if(!scrollConf.isHorizontal){scrollConf.scrollPosition=axisConfig.isReverse?1-scrollPosition:scrollPosition;return{x:scrollConf.isOpposite?canvasLeft+canvasWidth+canvasBorderWidth+(scrollConf.padding||0):canvasLeft-chart.config.shift-canvasBorderWidth,y:canvasTop-canvasBorderWidth-(scrollConf.padding||0),height:canvasHeight+canvasBorderWidth*2}}scrollConf.scrollPosition=scrollPosition;return{x:canvasLeft-axisLineStartExtension,y:scrollConf.isOpposite?canvasTop-canvasBorderWidth-axisLineWidth-(chart.config.shift||0)-(scrollConf.padding||0):canvasTop+canvasHeight+canvasBorderWidth+axisLineWidth,width:canvasWidth+axisLineStartExtension+axisLineEndExtension}};_proto.enableScroll=function enableScroll(){this._createScrollBar()};_proto.disableScroll=function disableScroll(){this._disposeScrollBar()};_proto.isScrollEnabled=function isScrollEnabled(){var scrollBar=this.getChildren(\"scrollBar\");return!!(scrollBar&&scrollBar[0]&&!scrollBar[0].getState(\"removed\"))};_proto.decideScroll=function decideScroll(){var chart=this,scrollType=chart.getScrollType();if(scrollType===\"always\"||scrollType===\"smart\"&&chart.getFromEnv(\"axis\").getZoom()!==1){chart.enableScroll()}else{chart.disableScroll()}};return Cartesian}(_commonspacemanager.default);var _default=Cartesian;exports.default=_default;"]},"metadata":{},"sourceType":"script"}