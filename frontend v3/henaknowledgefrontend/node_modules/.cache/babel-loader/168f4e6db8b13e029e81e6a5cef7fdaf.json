{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nfunction json2json(input) {\n  var out = {\n    data: {}\n  };\n\n  if (!input) {\n    return out;\n  }\n\n  if (typeof input === \"string\") {\n    try {\n      out.data = JSON.parse(input);\n    } catch (err) {\n      out.error = err;\n    }\n  } else {\n    out.data = input;\n  }\n\n  return out;\n}\n\nfunction getJSONData(obj) {\n  if (!obj || !obj.isRaw) {\n    return this.getChartData({\n      format: \"json\",\n      isRaw: 0\n    });\n  } else if (obj.isRaw && parseInt(obj.isRaw, 10)) {\n    var isRaw = parseInt(obj.isRaw, 10);\n    return this.getChartData({\n      format: \"json\",\n      isRaw: isRaw\n    });\n  }\n\n  return this.getChartData(\"json\");\n}\n\nfunction setJSONData(data) {\n  this.setChartData(data, \"json\");\n}\n\nfunction wrapper(FusionCharts) {\n  FusionCharts && (FusionCharts.prototype.setJSONData = setJSONData);\n  FusionCharts && (FusionCharts.prototype.getJSONData = getJSONData);\n  return {\n    format: \"json\",\n    toJSON: json2json,\n    fromJSON: json2json\n  };\n}\n\nvar _default = {\n  extension: wrapper,\n  name: \"JSON\",\n  type: \"transcoder\",\n  requiresFusionCharts: true\n};\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/core/src/json-transcoder/index.js"],"names":["exports","__esModule","default","json2json","input","out","data","JSON","parse","err","error","getJSONData","obj","isRaw","getChartData","format","parseInt","setJSONData","setChartData","wrapper","FusionCharts","prototype","toJSON","fromJSON","_default","extension","name","type","requiresFusionCharts"],"mappings":"AAAA;;AAAaA,OAAO,CAACC,UAAR,GAAmB,IAAnB;AAAwBD,OAAO,CAACE,OAAR,GAAgB,KAAK,CAArB;;AAAuB,SAASC,SAAT,CAAmBC,KAAnB,EAAyB;AAAC,MAAIC,GAAG,GAAC;AAACC,IAAAA,IAAI,EAAC;AAAN,GAAR;;AAAkB,MAAG,CAACF,KAAJ,EAAU;AAAC,WAAOC,GAAP;AAAW;;AAAA,MAAG,OAAOD,KAAP,KAAe,QAAlB,EAA2B;AAAC,QAAG;AAACC,MAAAA,GAAG,CAACC,IAAJ,GAASC,IAAI,CAACC,KAAL,CAAWJ,KAAX,CAAT;AAA2B,KAA/B,CAA+B,OAAMK,GAAN,EAAU;AAACJ,MAAAA,GAAG,CAACK,KAAJ,GAAUD,GAAV;AAAc;AAAC,GAArF,MAAyF;AAACJ,IAAAA,GAAG,CAACC,IAAJ,GAASF,KAAT;AAAe;;AAAA,SAAOC,GAAP;AAAW;;AAAA,SAASM,WAAT,CAAqBC,GAArB,EAAyB;AAAC,MAAG,CAACA,GAAD,IAAM,CAACA,GAAG,CAACC,KAAd,EAAoB;AAAC,WAAO,KAAKC,YAAL,CAAkB;AAACC,MAAAA,MAAM,EAAC,MAAR;AAAeF,MAAAA,KAAK,EAAC;AAArB,KAAlB,CAAP;AAAkD,GAAvE,MAA4E,IAAGD,GAAG,CAACC,KAAJ,IAAWG,QAAQ,CAACJ,GAAG,CAACC,KAAL,EAAW,EAAX,CAAtB,EAAqC;AAAC,QAAIA,KAAK,GAACG,QAAQ,CAACJ,GAAG,CAACC,KAAL,EAAW,EAAX,CAAlB;AAAiC,WAAO,KAAKC,YAAL,CAAkB;AAACC,MAAAA,MAAM,EAAC,MAAR;AAAeF,MAAAA,KAAK,EAACA;AAArB,KAAlB,CAAP;AAAsD;;AAAA,SAAO,KAAKC,YAAL,CAAkB,MAAlB,CAAP;AAAiC;;AAAA,SAASG,WAAT,CAAqBX,IAArB,EAA0B;AAAC,OAAKY,YAAL,CAAkBZ,IAAlB,EAAuB,MAAvB;AAA+B;;AAAA,SAASa,OAAT,CAAiBC,YAAjB,EAA8B;AAACA,EAAAA,YAAY,KAAGA,YAAY,CAACC,SAAb,CAAuBJ,WAAvB,GAAmCA,WAAtC,CAAZ;AAA+DG,EAAAA,YAAY,KAAGA,YAAY,CAACC,SAAb,CAAuBV,WAAvB,GAAmCA,WAAtC,CAAZ;AAA+D,SAAM;AAACI,IAAAA,MAAM,EAAC,MAAR;AAAeO,IAAAA,MAAM,EAACnB,SAAtB;AAAgCoB,IAAAA,QAAQ,EAACpB;AAAzC,GAAN;AAA0D;;AAAA,IAAIqB,QAAQ,GAAC;AAACC,EAAAA,SAAS,EAACN,OAAX;AAAmBO,EAAAA,IAAI,EAAC,MAAxB;AAA+BC,EAAAA,IAAI,EAAC,YAApC;AAAiDC,EAAAA,oBAAoB,EAAC;AAAtE,CAAb;AAAyF5B,OAAO,CAACE,OAAR,GAAgBsB,QAAhB","sourcesContent":["\"use strict\";exports.__esModule=true;exports.default=void 0;function json2json(input){var out={data:{}};if(!input){return out}if(typeof input===\"string\"){try{out.data=JSON.parse(input)}catch(err){out.error=err}}else{out.data=input}return out}function getJSONData(obj){if(!obj||!obj.isRaw){return this.getChartData({format:\"json\",isRaw:0})}else if(obj.isRaw&&parseInt(obj.isRaw,10)){var isRaw=parseInt(obj.isRaw,10);return this.getChartData({format:\"json\",isRaw:isRaw})}return this.getChartData(\"json\")}function setJSONData(data){this.setChartData(data,\"json\")}function wrapper(FusionCharts){FusionCharts&&(FusionCharts.prototype.setJSONData=setJSONData);FusionCharts&&(FusionCharts.prototype.getJSONData=getJSONData);return{format:\"json\",toJSON:json2json,fromJSON:json2json}}var _default={extension:wrapper,name:\"JSON\",type:\"transcoder\",requiresFusionCharts:true};exports.default=_default;"]},"metadata":{},"sourceType":"script"}