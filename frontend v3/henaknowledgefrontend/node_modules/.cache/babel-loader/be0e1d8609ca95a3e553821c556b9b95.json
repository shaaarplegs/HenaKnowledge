{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.getClipArray = exports.getClippedDatesWithin = exports.getClampRangesAround = exports.getValidDatesWithin = exports.getFloor = exports.clampDownDateWithinClip = exports.clampUpDateWithinClip = void 0;\n\nvar _datetimeEnums = require(\"../datetime-enums\");\n\nvar capsFirst = function capsFirst(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n},\n    clampDownDateWithinClip = function clampDownDateWithinClip(_initialDate, _offsetdate, _clipDates, _timeLimits) {\n  if (_timeLimits && Array.isArray(_timeLimits) && _timeLimits.length > 0) {\n    if (Number(_offsetdate) >= Number(_timeLimits[1])) {\n      return _timeLimits[1];\n    } else if (Number(_offsetdate) <= Number(_timeLimits[0])) {\n      return _timeLimits[0];\n    }\n  }\n\n  if (!_clipDates || _clipDates.length <= 0) {\n    return _offsetdate;\n  }\n\n  var offsetDate = _offsetdate,\n      initialDate = _initialDate,\n      clipDates = _clipDates,\n      clipArray = getValidDatesWithin(clipDates, initialDate, offsetDate),\n      finalDate = getFinalClampDownDate(offsetDate, clipArray, clipDates, _timeLimits);\n  return finalDate;\n},\n    getValidDatesWithin = function getValidDatesWithin(_clipDates, _date1, _date2) {\n  var clipDates = getClippedDatesWithin(_clipDates, _date1, _date2),\n      clipArray = [];\n\n  if (!_clipDates || _clipDates.length <= 0) {\n    return clipArray;\n  }\n\n  clipArray = getClipArray(clipDates, clipArray);\n  return clipArray;\n},\n    getFinalClampDownDate = function getFinalClampDownDate(_date, _clipArray, _clipDates, timeLimits) {\n  var clipArray = _clipArray,\n      clipDates = getClampRangesAround(_clipDates, _date),\n      offsetdate = _date,\n      finalDate,\n      clipDuration = 0;\n  clipArray = getClipArray(clipDates, clipArray);\n\n  if (clipArray.length > 0) {\n    clipArray.forEach(function (date) {\n      clipDuration += Number(date.to) - Number(date.from);\n    });\n  }\n\n  finalDate = new Date(Number(offsetdate.setTime(Number(offsetdate) + clipDuration)));\n\n  if (Number(finalDate) === Number(offsetdate)) {\n    return offsetdate;\n  }\n\n  finalDate = clampDownDateWithinClip(offsetdate, finalDate, _clipDates, timeLimits);\n  return finalDate;\n},\n    getClampRangesAround = function getClampRangesAround(_clipDates, _date) {\n  var date = Number(_date),\n      clipDates = _clipDates,\n      clippingDuration = 0,\n      clipDatesArray = [];\n\n  if (!_clipDates || _clipDates.length <= 0) {\n    return clipDatesArray;\n  }\n\n  if (Array.isArray(clipDates)) {\n    for (var i = 0; i < clipDates.length; i++) {\n      var clipObject = clipDates[i],\n          from = clipObject.from,\n          to = clipObject.to;\n      clippingDuration = to - from;\n\n      if (clipObject.hasOwnProperty(\"repeat\")) {\n        var repeatFrom = Number(from),\n            repeatTo = Number(to),\n            unitInMs = _datetimeEnums.DatetimeUnits[capsFirst(String(clipObject.repeat.unit))].ms,\n            repeatAfter = unitInMs * clipObject.repeat.multiplier,\n            clipFactor = Math.floor((date - repeatFrom) / repeatAfter),\n            multiplier = clipFactor,\n            clipDateFrom = void 0,\n            clipDateTo = void 0;\n\n        if (String(clipObject.repeat.unit).toLowerCase() === \"month\") {\n          clipDateFrom = new Date(Number(new Date(repeatFrom).setMonth(new Date(repeatFrom).getMonth() + multiplier)));\n          clipDateTo = new Date(Number(new Date(repeatTo).setMonth(new Date(repeatTo).getMonth() + multiplier)));\n        } else if (String(clipObject.repeat.unit).toLowerCase() === \"year\") {\n          clipDateFrom = new Date(Number(new Date(repeatFrom).setFullYear(new Date(repeatFrom).getFullYear() + multiplier)));\n          clipDateTo = new Date(Number(new Date(repeatTo).setFullYear(new Date(repeatTo).getFullYear() + multiplier)));\n        } else {\n          clipDateFrom = new Date(Number(repeatFrom) + repeatAfter * clipFactor);\n          clipDateTo = new Date(Number(clipDateFrom) + clippingDuration);\n        }\n\n        if (clipFactor < 0) {\n          continue;\n        }\n\n        if (date >= clipDateFrom && date < clipDateTo) {\n          clipDatesArray.push({\n            from: clipDateFrom,\n            to: clipDateTo\n          });\n        }\n      } else {\n        if (from <= date && to > date) {\n          clipDatesArray.push(clipObject);\n        }\n      }\n    }\n  }\n\n  return clipDatesArray;\n},\n    getClippedDatesWithin = function getClippedDatesWithin(_clipDates, _date1, _date2) {\n  var date1 = +_date1,\n      date2 = +_date2,\n      clipDates = _clipDates,\n      clippingDuration = 0,\n      clipDatesArray = [];\n\n  if (Array.isArray(clipDates)) {\n    for (var i = 0; i < clipDates.length; i++) {\n      var clipObject = clipDates[i],\n          from = clipObject.from,\n          to = clipObject.to;\n      clippingDuration = to - from;\n\n      if (clipObject.hasOwnProperty(\"repeat\")) {\n        var repeatFrom = Number(from),\n            repeatTo = Number(to),\n            unitInMs = _datetimeEnums.DatetimeUnits[capsFirst(String(clipObject.repeat.unit))].ms,\n            repeatAfter = unitInMs * clipObject.repeat.multiplier,\n            clipFactor = Math.floor((date1 - repeatFrom) / repeatAfter),\n            multiplier = clipFactor,\n            clipDateFrom = void 0,\n            clipDateTo = void 0;\n\n        if (String(clipObject.repeat.unit).toLowerCase() === \"month\") {\n          clipDateFrom = new Date(Number(new Date(repeatFrom).setMonth(new Date(repeatFrom).getMonth() + multiplier)));\n          clipDateTo = new Date(Number(new Date(repeatTo).setMonth(new Date(repeatTo).getMonth() + multiplier)));\n        } else if (String(clipObject.repeat.unit).toLowerCase() === \"year\") {\n          clipDateFrom = new Date(Number(new Date(repeatFrom).setFullYear(new Date(repeatFrom).getFullYear() + multiplier)));\n          clipDateTo = new Date(Number(new Date(repeatTo).setFullYear(new Date(repeatTo).getFullYear() + multiplier)));\n        } else {\n          clipDateFrom = new Date(Number(repeatFrom) + repeatAfter * clipFactor);\n          clipDateTo = new Date(Number(clipDateFrom) + clippingDuration);\n        }\n\n        if (clipFactor < 0) {\n          continue;\n        }\n\n        while (Number(clipDateFrom) < Number(date2)) {\n          if (Number(clipDateFrom) > Number(date1) && Number(clipDateTo) <= Number(date2)) {\n            clipDatesArray.push({\n              from: clipDateFrom,\n              to: clipDateTo\n            });\n          }\n\n          multiplier = Number(clipObject.repeat.multiplier);\n          clipDateFrom = +clipDateFrom;\n          clipDateTo = +clipDateTo;\n\n          if (String(clipObject.repeat.unit).toLowerCase() === \"month\") {\n            clipDateFrom = new Date(Number(new Date(clipDateFrom).setMonth(new Date(clipDateFrom).getMonth() + multiplier)));\n            clipDateTo = new Date(Number(new Date(clipDateTo).setMonth(new Date(clipDateTo).getMonth() + multiplier)));\n          } else if (String(clipObject.repeat.unit).toLowerCase() === \"year\") {\n            clipDateFrom = new Date(Number(new Date(clipDateFrom).setFullYear(new Date(clipDateFrom).getFullYear() + multiplier)));\n            clipDateTo = new Date(Number(new Date(clipDateTo).setFullYear(new Date(clipDateTo).getFullYear() + multiplier)));\n          } else {\n            clipDateFrom = new Date(Number(clipDateFrom) + repeatAfter);\n            clipDateTo = new Date(Number(clipDateTo) + repeatAfter);\n          }\n        }\n      } else {\n        if (from > date1 && to <= date2) {\n          clipDatesArray.push(clipObject);\n        }\n      }\n    }\n  }\n\n  return clipDatesArray;\n},\n    getClipArray = function getClipArray(_clipDates, _clipArray) {\n  var clipDates = _clipDates,\n      clipArray = _clipArray,\n      entryEnabled = true,\n      i;\n\n  if (!_clipDates || _clipDates.length <= 0) {\n    return clipArray;\n  }\n\n  var _loop = function _loop() {\n    var clipDate = clipDates[i];\n    entryEnabled = clipArray.every(function (date) {\n      if (clipDate.from >= date.from && clipDate.to <= date.to) {\n        return false;\n      } else if (clipDate.from <= date.from && clipDate.to >= date.to) {\n        date.entryEnabled = false;\n      } else if (clipDate.from >= date.from && clipDate.from <= date.to && clipDate.to >= date.to) {\n        clipDate.from = date.from;\n        date.entryEnabled = false;\n      } else if (clipDate.to >= date.from && clipDate.to <= date.to && clipDate.from <= date.from) {\n        clipDate.to = date.to;\n        date.entryEnabled = false;\n      } else {\n        date.entryEnabled = true;\n      }\n\n      return true;\n    });\n\n    if (entryEnabled) {\n      clipDate.entryEnabled = true;\n      clipArray.push(clipDate);\n    }\n  };\n\n  for (i = 0; i < clipDates.length; i++) {\n    _loop();\n  }\n\n  clipArray = clipArray.filter(function (date) {\n    return date.entryEnabled === true;\n  });\n  return clipArray;\n},\n    clampUpDateWithinClip = function clampUpDateWithinClip(_initialDate, _offsetDate, _clipDates, _timeLimits) {\n  if (_timeLimits && Array.isArray(_timeLimits) && _timeLimits.length > 0) {\n    if (Number(_offsetDate) >= Number(_timeLimits[1])) {\n      return _timeLimits[1];\n    } else if (Number(_offsetDate) <= Number(_timeLimits[0])) {\n      return _timeLimits[0];\n    }\n  }\n\n  if (!_clipDates || _clipDates.length <= 0) {\n    return _offsetDate;\n  }\n\n  var offsetDate = _offsetDate,\n      clipDates = _clipDates,\n      initialDate = _initialDate,\n      clipArray = getValidDatesWithin(clipDates, offsetDate, initialDate),\n      finalDate = getFinalClampUpDate(offsetDate, clipArray, clipDates, _timeLimits);\n  return finalDate;\n},\n    getFinalClampUpDate = function getFinalClampUpDate(_date, _clipArray, _clipDates, timeLimits) {\n  var clipArray = _clipArray,\n      clipDates = getClampRangesAround(_clipDates, _date),\n      offsetdate = _date,\n      finalDate,\n      clipDuration = 0;\n  clipArray = getClipArray(clipDates, clipArray);\n\n  if (clipArray.length > 0) {\n    clipArray.forEach(function (date) {\n      clipDuration += Number(date.to) - Number(date.from);\n    });\n  }\n\n  finalDate = new Date(Number(offsetdate.setTime(Number(offsetdate) - clipDuration)));\n\n  if (Number(finalDate) === Number(offsetdate)) {\n    return offsetdate;\n  }\n\n  finalDate = clampUpDateWithinClip(offsetdate, finalDate, _clipDates, timeLimits);\n  return finalDate;\n},\n    getFloor = function getFloor(_date, _clipDates, _timeLimits) {\n  if (_timeLimits && Array.isArray(_timeLimits) && _timeLimits.length > 0) {\n    if (Number(_date) >= Number(_timeLimits[1])) {\n      return _timeLimits[1];\n    } else if (Number(_date) <= Number(_timeLimits[0])) {\n      return _timeLimits[0];\n    }\n  }\n\n  if (!_clipDates || _clipDates.length <= 0) {\n    return _date;\n  }\n\n  var date = _date,\n      finalDate,\n      clipDates = getClampRangesAround(_clipDates, _date),\n      clipArray = [];\n\n  if (clipDates.length === 0) {\n    return date;\n  }\n\n  clipArray = getClipArray(clipDates, clipArray);\n  finalDate = clipArray.reduce(function (prev, current) {\n    return prev.to > current.to ? +new Date(Number(prev.to)) : +new Date(Number(current.to));\n  }, 0);\n  return Number(finalDate) === Number(date) ? finalDate : getFloor(finalDate, _clipDates, _timeLimits);\n};\n\nexports.getFloor = getFloor;\nexports.clampUpDateWithinClip = clampUpDateWithinClip;\nexports.getClipArray = getClipArray;\nexports.getClippedDatesWithin = getClippedDatesWithin;\nexports.getClampRangesAround = getClampRangesAround;\nexports.getValidDatesWithin = getValidDatesWithin;\nexports.clampDownDateWithinClip = clampDownDateWithinClip;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/utils/src/time-intervals/time-intervalclip.js"],"names":["exports","__esModule","getClipArray","getClippedDatesWithin","getClampRangesAround","getValidDatesWithin","getFloor","clampDownDateWithinClip","clampUpDateWithinClip","_datetimeEnums","require","capsFirst","str","charAt","toUpperCase","slice","_initialDate","_offsetdate","_clipDates","_timeLimits","Array","isArray","length","Number","offsetDate","initialDate","clipDates","clipArray","finalDate","getFinalClampDownDate","_date1","_date2","_date","_clipArray","timeLimits","offsetdate","clipDuration","forEach","date","to","from","Date","setTime","clippingDuration","clipDatesArray","i","clipObject","hasOwnProperty","repeatFrom","repeatTo","unitInMs","DatetimeUnits","String","repeat","unit","ms","repeatAfter","multiplier","clipFactor","Math","floor","clipDateFrom","clipDateTo","toLowerCase","setMonth","getMonth","setFullYear","getFullYear","push","date1","date2","entryEnabled","_loop","clipDate","every","filter","_offsetDate","getFinalClampUpDate","reduce","prev","current"],"mappings":"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","sourcesContent":["\"use strict\";exports.__esModule=true;exports.getClipArray=exports.getClippedDatesWithin=exports.getClampRangesAround=exports.getValidDatesWithin=exports.getFloor=exports.clampDownDateWithinClip=exports.clampUpDateWithinClip=void 0;var _datetimeEnums=require(\"../datetime-enums\");var capsFirst=function capsFirst(str){return str.charAt(0).toUpperCase()+str.slice(1)},clampDownDateWithinClip=function clampDownDateWithinClip(_initialDate,_offsetdate,_clipDates,_timeLimits){if(_timeLimits&&Array.isArray(_timeLimits)&&_timeLimits.length>0){if(Number(_offsetdate)>=Number(_timeLimits[1])){return _timeLimits[1]}else if(Number(_offsetdate)<=Number(_timeLimits[0])){return _timeLimits[0]}}if(!_clipDates||_clipDates.length<=0){return _offsetdate}var offsetDate=_offsetdate,initialDate=_initialDate,clipDates=_clipDates,clipArray=getValidDatesWithin(clipDates,initialDate,offsetDate),finalDate=getFinalClampDownDate(offsetDate,clipArray,clipDates,_timeLimits);return finalDate},getValidDatesWithin=function getValidDatesWithin(_clipDates,_date1,_date2){var clipDates=getClippedDatesWithin(_clipDates,_date1,_date2),clipArray=[];if(!_clipDates||_clipDates.length<=0){return clipArray}clipArray=getClipArray(clipDates,clipArray);return clipArray},getFinalClampDownDate=function getFinalClampDownDate(_date,_clipArray,_clipDates,timeLimits){var clipArray=_clipArray,clipDates=getClampRangesAround(_clipDates,_date),offsetdate=_date,finalDate,clipDuration=0;clipArray=getClipArray(clipDates,clipArray);if(clipArray.length>0){clipArray.forEach((function(date){clipDuration+=Number(date.to)-Number(date.from)}))}finalDate=new Date(Number(offsetdate.setTime(Number(offsetdate)+clipDuration)));if(Number(finalDate)===Number(offsetdate)){return offsetdate}finalDate=clampDownDateWithinClip(offsetdate,finalDate,_clipDates,timeLimits);return finalDate},getClampRangesAround=function getClampRangesAround(_clipDates,_date){var date=Number(_date),clipDates=_clipDates,clippingDuration=0,clipDatesArray=[];if(!_clipDates||_clipDates.length<=0){return clipDatesArray}if(Array.isArray(clipDates)){for(var i=0;i<clipDates.length;i++){var clipObject=clipDates[i],from=clipObject.from,to=clipObject.to;clippingDuration=to-from;if(clipObject.hasOwnProperty(\"repeat\")){var repeatFrom=Number(from),repeatTo=Number(to),unitInMs=_datetimeEnums.DatetimeUnits[capsFirst(String(clipObject.repeat.unit))].ms,repeatAfter=unitInMs*clipObject.repeat.multiplier,clipFactor=Math.floor((date-repeatFrom)/repeatAfter),multiplier=clipFactor,clipDateFrom=void 0,clipDateTo=void 0;if(String(clipObject.repeat.unit).toLowerCase()===\"month\"){clipDateFrom=new Date(Number(new Date(repeatFrom).setMonth(new Date(repeatFrom).getMonth()+multiplier)));clipDateTo=new Date(Number(new Date(repeatTo).setMonth(new Date(repeatTo).getMonth()+multiplier)))}else if(String(clipObject.repeat.unit).toLowerCase()===\"year\"){clipDateFrom=new Date(Number(new Date(repeatFrom).setFullYear(new Date(repeatFrom).getFullYear()+multiplier)));clipDateTo=new Date(Number(new Date(repeatTo).setFullYear(new Date(repeatTo).getFullYear()+multiplier)))}else{clipDateFrom=new Date(Number(repeatFrom)+repeatAfter*clipFactor);clipDateTo=new Date(Number(clipDateFrom)+clippingDuration)}if(clipFactor<0){continue}if(date>=clipDateFrom&&date<clipDateTo){clipDatesArray.push({from:clipDateFrom,to:clipDateTo})}}else{if(from<=date&&to>date){clipDatesArray.push(clipObject)}}}}return clipDatesArray},getClippedDatesWithin=function getClippedDatesWithin(_clipDates,_date1,_date2){var date1=+_date1,date2=+_date2,clipDates=_clipDates,clippingDuration=0,clipDatesArray=[];if(Array.isArray(clipDates)){for(var i=0;i<clipDates.length;i++){var clipObject=clipDates[i],from=clipObject.from,to=clipObject.to;clippingDuration=to-from;if(clipObject.hasOwnProperty(\"repeat\")){var repeatFrom=Number(from),repeatTo=Number(to),unitInMs=_datetimeEnums.DatetimeUnits[capsFirst(String(clipObject.repeat.unit))].ms,repeatAfter=unitInMs*clipObject.repeat.multiplier,clipFactor=Math.floor((date1-repeatFrom)/repeatAfter),multiplier=clipFactor,clipDateFrom=void 0,clipDateTo=void 0;if(String(clipObject.repeat.unit).toLowerCase()===\"month\"){clipDateFrom=new Date(Number(new Date(repeatFrom).setMonth(new Date(repeatFrom).getMonth()+multiplier)));clipDateTo=new Date(Number(new Date(repeatTo).setMonth(new Date(repeatTo).getMonth()+multiplier)))}else if(String(clipObject.repeat.unit).toLowerCase()===\"year\"){clipDateFrom=new Date(Number(new Date(repeatFrom).setFullYear(new Date(repeatFrom).getFullYear()+multiplier)));clipDateTo=new Date(Number(new Date(repeatTo).setFullYear(new Date(repeatTo).getFullYear()+multiplier)))}else{clipDateFrom=new Date(Number(repeatFrom)+repeatAfter*clipFactor);clipDateTo=new Date(Number(clipDateFrom)+clippingDuration)}if(clipFactor<0){continue}while(Number(clipDateFrom)<Number(date2)){if(Number(clipDateFrom)>Number(date1)&&Number(clipDateTo)<=Number(date2)){clipDatesArray.push({from:clipDateFrom,to:clipDateTo})}multiplier=Number(clipObject.repeat.multiplier);clipDateFrom=+clipDateFrom;clipDateTo=+clipDateTo;if(String(clipObject.repeat.unit).toLowerCase()===\"month\"){clipDateFrom=new Date(Number(new Date(clipDateFrom).setMonth(new Date(clipDateFrom).getMonth()+multiplier)));clipDateTo=new Date(Number(new Date(clipDateTo).setMonth(new Date(clipDateTo).getMonth()+multiplier)))}else if(String(clipObject.repeat.unit).toLowerCase()===\"year\"){clipDateFrom=new Date(Number(new Date(clipDateFrom).setFullYear(new Date(clipDateFrom).getFullYear()+multiplier)));clipDateTo=new Date(Number(new Date(clipDateTo).setFullYear(new Date(clipDateTo).getFullYear()+multiplier)))}else{clipDateFrom=new Date(Number(clipDateFrom)+repeatAfter);clipDateTo=new Date(Number(clipDateTo)+repeatAfter)}}}else{if(from>date1&&to<=date2){clipDatesArray.push(clipObject)}}}}return clipDatesArray},getClipArray=function getClipArray(_clipDates,_clipArray){var clipDates=_clipDates,clipArray=_clipArray,entryEnabled=true,i;if(!_clipDates||_clipDates.length<=0){return clipArray}var _loop=function _loop(){var clipDate=clipDates[i];entryEnabled=clipArray.every((function(date){if(clipDate.from>=date.from&&clipDate.to<=date.to){return false}else if(clipDate.from<=date.from&&clipDate.to>=date.to){date.entryEnabled=false}else if(clipDate.from>=date.from&&clipDate.from<=date.to&&clipDate.to>=date.to){clipDate.from=date.from;date.entryEnabled=false}else if(clipDate.to>=date.from&&clipDate.to<=date.to&&clipDate.from<=date.from){clipDate.to=date.to;date.entryEnabled=false}else{date.entryEnabled=true}return true}));if(entryEnabled){clipDate.entryEnabled=true;clipArray.push(clipDate)}};for(i=0;i<clipDates.length;i++){_loop()}clipArray=clipArray.filter((function(date){return date.entryEnabled===true}));return clipArray},clampUpDateWithinClip=function clampUpDateWithinClip(_initialDate,_offsetDate,_clipDates,_timeLimits){if(_timeLimits&&Array.isArray(_timeLimits)&&_timeLimits.length>0){if(Number(_offsetDate)>=Number(_timeLimits[1])){return _timeLimits[1]}else if(Number(_offsetDate)<=Number(_timeLimits[0])){return _timeLimits[0]}}if(!_clipDates||_clipDates.length<=0){return _offsetDate}var offsetDate=_offsetDate,clipDates=_clipDates,initialDate=_initialDate,clipArray=getValidDatesWithin(clipDates,offsetDate,initialDate),finalDate=getFinalClampUpDate(offsetDate,clipArray,clipDates,_timeLimits);return finalDate},getFinalClampUpDate=function getFinalClampUpDate(_date,_clipArray,_clipDates,timeLimits){var clipArray=_clipArray,clipDates=getClampRangesAround(_clipDates,_date),offsetdate=_date,finalDate,clipDuration=0;clipArray=getClipArray(clipDates,clipArray);if(clipArray.length>0){clipArray.forEach((function(date){clipDuration+=Number(date.to)-Number(date.from)}))}finalDate=new Date(Number(offsetdate.setTime(Number(offsetdate)-clipDuration)));if(Number(finalDate)===Number(offsetdate)){return offsetdate}finalDate=clampUpDateWithinClip(offsetdate,finalDate,_clipDates,timeLimits);return finalDate},getFloor=function getFloor(_date,_clipDates,_timeLimits){if(_timeLimits&&Array.isArray(_timeLimits)&&_timeLimits.length>0){if(Number(_date)>=Number(_timeLimits[1])){return _timeLimits[1]}else if(Number(_date)<=Number(_timeLimits[0])){return _timeLimits[0]}}if(!_clipDates||_clipDates.length<=0){return _date}var date=_date,finalDate,clipDates=getClampRangesAround(_clipDates,_date),clipArray=[];if(clipDates.length===0){return date}clipArray=getClipArray(clipDates,clipArray);finalDate=clipArray.reduce((function(prev,current){return prev.to>current.to?+new Date(Number(prev.to)):+new Date(Number(current.to))}),0);return Number(finalDate)===Number(date)?finalDate:getFloor(finalDate,_clipDates,_timeLimits)};exports.getFloor=getFloor;exports.clampUpDateWithinClip=clampUpDateWithinClip;exports.getClipArray=getClipArray;exports.getClippedDatesWithin=getClippedDatesWithin;exports.getClampRangesAround=getClampRangesAround;exports.getValidDatesWithin=getValidDatesWithin;exports.clampDownDateWithinClip=clampDownDateWithinClip;"]},"metadata":{},"sourceType":"script"}