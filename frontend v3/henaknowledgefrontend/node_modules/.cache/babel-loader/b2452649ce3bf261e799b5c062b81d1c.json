{"ast":null,"code":"import { createSlice } from \"@reduxjs/toolkit\";\nlet loginState = false;\n\nif (localStorage.getItem(\"jwt\") !== null && localStorage.getItem(\"jwt\") !== null) {\n  loginState = true;\n}\n\nlet ObtainedUserType;\n\nif (localStorage.getItem(\"userType\") !== null) {\n  ObtainedUserType = localStorage.getItem(\"userType\");\n}\n\nconst initAuth = {\n  isLoggedin: loginState,\n  userType: ObtainedUserType,\n  expirationDate: 0\n};\nconst AuthSlice = createSlice({\n  name: \"Authentication\",\n  initialState: initAuth,\n  reducers: {\n    login(state, action) {\n      state.isLoggedin = true;\n      state.userType = action.payload.userType;\n      state.userType = action.payload.expirationDate;\n      localStorage.setItem(\"jwt\", action.payload.jwt);\n      localStorage.setItem(\"username\", action.payload.username);\n      localStorage.setItem(\"userType\", action.payload.userType);\n      localStorage.setItem(\"expirationDate\", action.payload.expirationDate);\n    },\n\n    logout(state) {\n      state.isLoggedin = false;\n      state.userType = \"\";\n      localStorage.clear();\n    }\n\n  }\n});\nexport const AuthActions = AuthSlice.actions;\nexport default AuthSlice.reducer;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/14_05_2021/henaknowledge/frontend v3/henaknowledgefrontend/src/Store/AuthSlice.js"],"names":["createSlice","loginState","localStorage","getItem","ObtainedUserType","initAuth","isLoggedin","userType","expirationDate","AuthSlice","name","initialState","reducers","login","state","action","payload","setItem","jwt","username","logout","clear","AuthActions","actions","reducer"],"mappings":"AAAA,SAASA,WAAT,QAA4B,kBAA5B;AAEA,IAAIC,UAAU,GAAG,KAAjB;;AAEA,IACEC,YAAY,CAACC,OAAb,CAAqB,KAArB,MAAgC,IAAhC,IACAD,YAAY,CAACC,OAAb,CAAqB,KAArB,MAAgC,IAFlC,EAGE;AACAF,EAAAA,UAAU,GAAG,IAAb;AACD;;AACD,IAAIG,gBAAJ;;AACA,IAAIF,YAAY,CAACC,OAAb,CAAqB,UAArB,MAAqC,IAAzC,EAA+C;AAC7CC,EAAAA,gBAAgB,GAAGF,YAAY,CAACC,OAAb,CAAqB,UAArB,CAAnB;AACD;;AACD,MAAME,QAAQ,GAAG;AACfC,EAAAA,UAAU,EAAEL,UADG;AAEfM,EAAAA,QAAQ,EAAEH,gBAFK;AAGfI,EAAAA,cAAc,EAAE;AAHD,CAAjB;AAMA,MAAMC,SAAS,GAAGT,WAAW,CAAC;AAC5BU,EAAAA,IAAI,EAAE,gBADsB;AAE5BC,EAAAA,YAAY,EAAEN,QAFc;AAG5BO,EAAAA,QAAQ,EAAE;AACRC,IAAAA,KAAK,CAACC,KAAD,EAAQC,MAAR,EAAgB;AACnBD,MAAAA,KAAK,CAACR,UAAN,GAAmB,IAAnB;AACAQ,MAAAA,KAAK,CAACP,QAAN,GAAiBQ,MAAM,CAACC,OAAP,CAAeT,QAAhC;AACAO,MAAAA,KAAK,CAACP,QAAN,GAAiBQ,MAAM,CAACC,OAAP,CAAeR,cAAhC;AACAN,MAAAA,YAAY,CAACe,OAAb,CAAqB,KAArB,EAA4BF,MAAM,CAACC,OAAP,CAAeE,GAA3C;AACAhB,MAAAA,YAAY,CAACe,OAAb,CAAqB,UAArB,EAAiCF,MAAM,CAACC,OAAP,CAAeG,QAAhD;AACAjB,MAAAA,YAAY,CAACe,OAAb,CAAqB,UAArB,EAAiCF,MAAM,CAACC,OAAP,CAAeT,QAAhD;AACAL,MAAAA,YAAY,CAACe,OAAb,CAAqB,gBAArB,EAAuCF,MAAM,CAACC,OAAP,CAAeR,cAAtD;AACD,KATO;;AAWRY,IAAAA,MAAM,CAACN,KAAD,EAAQ;AACZA,MAAAA,KAAK,CAACR,UAAN,GAAmB,KAAnB;AACAQ,MAAAA,KAAK,CAACP,QAAN,GAAiB,EAAjB;AACAL,MAAAA,YAAY,CAACmB,KAAb;AACD;;AAfO;AAHkB,CAAD,CAA7B;AAsBA,OAAO,MAAMC,WAAW,GAAGb,SAAS,CAACc,OAA9B;AACP,eAAed,SAAS,CAACe,OAAzB","sourcesContent":["import { createSlice } from \"@reduxjs/toolkit\";\r\n\r\nlet loginState = false;\r\n\r\nif (\r\n  localStorage.getItem(\"jwt\") !== null &&\r\n  localStorage.getItem(\"jwt\") !== null\r\n) {\r\n  loginState = true;\r\n}\r\nlet ObtainedUserType;\r\nif (localStorage.getItem(\"userType\") !== null) {\r\n  ObtainedUserType = localStorage.getItem(\"userType\");\r\n}\r\nconst initAuth = {\r\n  isLoggedin: loginState,\r\n  userType: ObtainedUserType,\r\n  expirationDate: 0,\r\n};\r\n\r\nconst AuthSlice = createSlice({\r\n  name: \"Authentication\",\r\n  initialState: initAuth,\r\n  reducers: {\r\n    login(state, action) {\r\n      state.isLoggedin = true;\r\n      state.userType = action.payload.userType;\r\n      state.userType = action.payload.expirationDate;\r\n      localStorage.setItem(\"jwt\", action.payload.jwt);\r\n      localStorage.setItem(\"username\", action.payload.username);\r\n      localStorage.setItem(\"userType\", action.payload.userType);\r\n      localStorage.setItem(\"expirationDate\", action.payload.expirationDate);\r\n    },\r\n\r\n    logout(state) {\r\n      state.isLoggedin = false;\r\n      state.userType = \"\";\r\n      localStorage.clear();\r\n    },\r\n  },\r\n});\r\n\r\nexport const AuthActions = AuthSlice.actions;\r\nexport default AuthSlice.reducer;\r\n"]},"metadata":{},"sourceType":"module"}