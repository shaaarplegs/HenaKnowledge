{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.minimumEnquiry = exports.getCrispPath = exports.default = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _axis = _interopRequireDefault(require(\"./axis\"));\n\nvar _lib = require(\"../lib\");\n\nvar _cartesianAxis = _interopRequireDefault(require(\"./cartesian-axis.animation\"));\n\nvar _diff = _interopRequireDefault(require(\"@fusioncharts/utils/src/scale-utils/array/diff\"));\n\nvar _differenceWith = _interopRequireDefault(require(\"ramda/src/differenceWith\"));\n\nvar _dependencyManager = require(\"../dependency-manager\");\n\nvar _commonApi = require(\"./common-api\");\n\nvar CRISP = \"crisp\",\n    BUTT = \"butt\",\n    EVENTARGS = \"eventArgs\",\n    TREND_ID = \"_trend\",\n    TICK_ID = \"_tick\",\n    LABEL_ID = \"_label\",\n    ROTATE_STR = \"rotate\",\n    AXIS_LINE = \"axisLine\",\n    getCrispPath = function getCrispPath(path, width) {\n  var isCrisped = false,\n      oddWidth = width % 2,\n      value,\n      roundValue;\n\n  if (path[1] === path[4]) {\n    value = path[1];\n    roundValue = Math.round(value);\n    path[1] = path[4] = oddWidth ? roundValue > value ? roundValue - .5 : roundValue + .5 : roundValue;\n    isCrisped = true;\n  }\n\n  if (path[2] === path[5]) {\n    value = path[2];\n    roundValue = Math.round(value);\n    path[2] = path[5] = oddWidth ? roundValue > value ? roundValue - .5 : roundValue + .5 : roundValue;\n    isCrisped = true;\n  }\n\n  return {\n    path: path,\n    isCrisped: isCrisped\n  };\n},\n    isVisible = function isVisible(visibleRange) {\n  return function (min, max) {\n    return !!(visibleRange.minValue <= min && visibleRange.maxValue >= min || visibleRange.minValue <= max && visibleRange.maxValue >= max);\n  };\n},\n    isInBetween = function isInBetween(visibleRange) {\n  return function (val) {\n    return !!(visibleRange.minValue <= val && visibleRange.maxValue >= val);\n  };\n},\n    queryOptions = {\n  wrtVisible: true\n},\n    minimumEnquiry = function minimumEnquiry(category) {\n  var i = 0,\n      len = category.length;\n\n  for (; i < len; i++) {\n    if (category[i].label || category[i].oriLabel) {\n      return i;\n    }\n  }\n};\n\nexports.minimumEnquiry = minimumEnquiry;\nexports.getCrispPath = getCrispPath;\n\nfunction getAxisNamePaddingOffset(axisConfig, chartConfig) {\n  var axisNamePaddingOffset = 0;\n\n  if (axisConfig.relativeAxis && axisConfig.relativeAxis.config && axisConfig.relativeAxis.config.axisNamePadding) {\n    axisNamePaddingOffset = Math.max(axisConfig.relativeAxis.config.axisNamePadding, axisNamePaddingOffset);\n  }\n\n  if (axisConfig.isOpposit && chartConfig.canvasMarginRight) {\n    axisNamePaddingOffset = Math.max(axisNamePaddingOffset, chartConfig.canvasMarginRight - chartConfig.marginLeft - axisConfig.nameMaxW);\n  }\n\n  if (!axisConfig.isOpposit && chartConfig.canvasMarginLeft) {\n    axisNamePaddingOffset = Math.max(axisNamePaddingOffset, chartConfig.canvasMarginLeft - chartConfig.marginRight - axisConfig.nameMaxW);\n  }\n\n  return axisNamePaddingOffset;\n}\n\n(0, _dependencyManager.addDep)({\n  name: \"cartesianAxisAnimation\",\n  type: \"animationRule\",\n  extension: _cartesianAxis.default\n});\n\nvar Cartesian = function (_Axis) {\n  (0, _inheritsLoose2.default)(Cartesian, _Axis);\n\n  function Cartesian() {\n    var _this;\n\n    _this = _Axis.call(this) || this;\n    _this.config.referenceInfo = [];\n    _this.config.prevTicks = [];\n    _this.config.prevIntervalArr = [];\n    _this.config.prevTrendLabels = [];\n    _this.config.prevCategoryIntervalArr = [];\n    return _this;\n  }\n\n  var _proto = Cartesian.prototype;\n\n  _proto.placeAxis = function placeAxis(maxLimit) {\n    var axis = this,\n        scale = axis.getScale(),\n        chart = axis.getFromEnv(\"chart\"),\n        axisConfig = axis.config,\n        isVertical = axisConfig.isVertical,\n        isReverse = axisConfig.isReverse,\n        chartConfig = chart.config,\n        dataLabelStyle = chartConfig.dataLabelStyle,\n        nameStyle = axisConfig.name.style,\n        trendStyle = axisConfig.trend.trendStyle,\n        labelStyle = axisConfig.labels.style,\n        parsedTrendLabels = axisConfig.parsedTrendLabels || [],\n        parsedVLineInfo = axisConfig.parsedVlineInfo || [];\n    nameStyle.fontSize = this.computeFontSize(nameStyle.fontSizeWithUnit);\n    nameStyle.lineHeight = (0, _lib.setLineHeight)(nameStyle);\n    trendStyle.fontSize = this.computeFontSize(trendStyle.fontSizeWithUnit);\n    trendStyle.lineHeight = (0, _lib.setLineHeight)(trendStyle);\n    labelStyle.fontSize = this.computeFontSize(labelStyle.fontSizeWithUnit);\n    labelStyle.lineHeight = (0, _lib.setLineHeight)(labelStyle);\n    dataLabelStyle.fontSize = this.computeFontSize(dataLabelStyle.fontSizeWithUnit);\n    (0, _lib.setLineHeight)(dataLabelStyle);\n    parsedTrendLabels.forEach(function (trendLabel) {\n      trendLabel.css.fontSize = trendStyle.fontSize;\n      trendLabel.css.lineHeight = trendStyle.lineHeight;\n    });\n    parsedVLineInfo.forEach(function (vLine) {\n      if (vLine.text) {\n        vLine.text.css.fontSize = chartConfig.style.inCanfontSize;\n        vLine.text.css.lineHeight = chartConfig.style.inCanLineHeight;\n      }\n    });\n\n    if (isVertical) {\n      isReverse ? scale.setRange([chartConfig.canvasBottom, chartConfig.canvasTop]) : scale.setRange([chartConfig.canvasTop, chartConfig.canvasBottom]);\n      return axis._placeVerticalAxis(maxLimit);\n    }\n\n    isReverse ? scale.setRange([chartConfig.canvasRight, chartConfig.canvasLeft]) : scale.setRange([chartConfig.canvasLeft, chartConfig.canvasRight]);\n    return axis._placeHorizontalAxis(maxLimit);\n  };\n\n  _proto._placeVerticalAxis = function _placeVerticalAxis(_maxWidth) {\n    var axis = this,\n        maxWidth = _maxWidth,\n        axisConfig = axis.config,\n        chart = axis.getFromEnv(\"chart\"),\n        chartConfig = chart.config,\n        smartLabel = chart.getFromEnv(\"smartLabel\"),\n        axisRange = axisConfig.axisRange,\n        minLabelWidthPercent = axisConfig.minLabelWidthPercent,\n        axisNameData = axisConfig.name,\n        isOpposit = axisConfig.isOpposit,\n        numberFormatter = axis.getFromEnv(\"number-formatter\"),\n        canvasHeight = chartConfig.canvasHeight,\n        axisValuePadding = axisConfig.labelPadding = (0, _lib.pluckNumber)(axisConfig.rawAttr.axisValuePadding, 4),\n        axisNamePadding = (0, _lib.pluckNumber)(axisConfig.rawAttr.axisNamePadding, 5),\n        useEllipsesWhenOverflow = axisConfig.useEllipsesWhenOverflow,\n        nameStyle = axisConfig.name.style,\n        trendStyle = axisConfig.trend.trendStyle,\n        axisName = axisConfig.axisName,\n        trendlines = axisConfig.trendLines,\n        drawLabelsOpposit = axisConfig.drawLabelsOpposit,\n        drawAxisNameOpposit = axisConfig.drawAxisNameOpposit,\n        j,\n        jLen,\n        axisLabelWidth = 0,\n        counter = 0,\n        trendLabelConfig,\n        labelWidth = 0,\n        nameWidth = 0,\n        trendLeftWidth = 0,\n        trendRightWidth = 0,\n        retObj = {\n      left: 0,\n      right: 0\n    },\n        maxLeftTrendValue = _lib.BLANKSTRING,\n        maxRightTrendValue = _lib.BLANKSTRING,\n        reserveNameHeight = 0,\n        numberFormatterFn,\n        axisSmartName,\n        axisSmartTrendValue,\n        trendTextFromValue,\n        i,\n        minLabelWidth = -1,\n        max,\n        min,\n        text,\n        dimention,\n        iLim,\n        trendObj,\n        valueOnRight,\n        axisLineThickness,\n        startTValue,\n        endTValue;\n\n    if (minLabelWidthPercent) {\n      minLabelWidth = minLabelWidthPercent / 100 * chartConfig.width;\n    }\n\n    axisConfig.oriCanvasHeight = canvasHeight;\n\n    if (axisValuePadding < 0) {\n      axisConfig.labelPadding = 2;\n    }\n\n    if (axisConfig.drawTick && axisConfig.tickLength) {\n      axisLineThickness = axisConfig.axisLineThickness + axisConfig.tickLength;\n    } else {\n      axisLineThickness = axisConfig.axisLineThickness;\n    }\n\n    if (axisConfig.showAxisLine) {\n      axisConfig.labelPadding = (0, _lib.pluckNumber)(axisValuePadding, 2) + axisLineThickness;\n\n      if (axisConfig.labelPadding < 0) {\n        axisConfig.labelPadding = (axisConfig.axisLineThickness < 0 ? 0 : axisLineThickness) + 2;\n      }\n\n      maxWidth -= axisConfig.axisLineThickness;\n    } else {\n      axisConfig.labelPadding = (0, _lib.pluckNumber)(axisValuePadding, 2);\n\n      if (axisConfig.labelPadding < 0) {\n        axisConfig.labelPadding = 2;\n      }\n    }\n\n    max = axisRange.max;\n    min = axisRange.min;\n    axisConfig.name.rotation = 0;\n    axisConfig.labels.step = axisConfig.labelStep;\n    axisConfig.labels.isDraw = 1;\n    axisConfig.labels.drawNormalVal = axisConfig.showDivLineValues;\n    axisConfig.labels.drawLimitVal = axisConfig.showLimits;\n    reserveNameHeight = nameStyle.lineHeight;\n    reserveNameHeight = Number(reserveNameHeight.replace(/px/i, \"\"));\n\n    if (axisName && reserveNameHeight < maxWidth) {\n      maxWidth -= reserveNameHeight;\n    }\n\n    if (axisConfig.showLimits !== 1 && axisConfig.showDivLineValues !== 1) {\n      axisConfig.labels.isDraw = 0;\n    }\n\n    dimention = axisConfig.drawLabels ? axis._getVMaxLabelDimention(maxWidth - axisConfig.labelPadding) : {\n      width: 0,\n      height: 0\n    };\n\n    if (dimention.width + axisConfig.labelPadding > maxWidth && !axisConfig.tickValues || dimention.width === 0) {\n      axisConfig.labels.isDraw = 0;\n    }\n\n    if (axisConfig.labels.isDraw) {\n      axisConfig.labelMaxW = dimention.width > minLabelWidth ? dimention.width : minLabelWidth;\n      axisConfig.labelMaxH = dimention.height;\n      axisLabelWidth = axisConfig.labelMaxW + axisConfig.labelPadding;\n      labelWidth = axisLabelWidth;\n    }\n\n    if (axisConfig.drawTrendLines && axisConfig.drawTrendLabels && trendlines && trendlines.length) {\n      if (axisConfig.isPercent) {\n        numberFormatterFn = numberFormatter.percentValue;\n      } else if (axisConfig.isVertical) {\n        numberFormatterFn = numberFormatter.yAxis;\n      } else {\n        numberFormatterFn = numberFormatter.xAxis;\n      }\n\n      smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n      smartLabel.setStyle({\n        fontSize: trendStyle.fontSize,\n        fontFamily: trendStyle.fontFamily,\n        lineHeight: trendStyle.lineHeight,\n        fontWeight: trendStyle.fontWeight\n      });\n\n      for (j = 0, jLen = trendlines.length; j < jLen; j += 1) {\n        for (i = 0, iLim = trendlines[j].line && trendlines[j].line.length; i < iLim; i += 1) {\n          trendObj = trendlines[j].line[i];\n          startTValue = numberFormatter.getCleanValue((0, _lib.pluck)(trendObj.startvalue, trendObj.value, 0));\n          endTValue = (0, _lib.pluckNumber)(trendObj.endvalue, startTValue);\n\n          if (startTValue <= max && startTValue >= min && endTValue <= max && endTValue >= min) {\n            valueOnRight = (0, _lib.pluckNumber)(trendObj.valueonright, isOpposit ? 1 : 0);\n            trendTextFromValue = valueOnRight === 1 ? trendObj.endvalue || trendObj.startvalue : trendObj.startvalue || trendObj.endvalue;\n            text = (0, _lib.parseUnsafeString)(trendObj.origText || trendObj.displayvalue || trendTextFromValue || \"\");\n\n            if (text === trendTextFromValue) {\n              text = \"\" + numberFormatterFn.call(numberFormatter, text);\n            }\n\n            if (valueOnRight) {\n              if (text.length > maxRightTrendValue.length) {\n                maxRightTrendValue = text;\n              }\n            } else {\n              if (text.length > maxLeftTrendValue.length) {\n                maxLeftTrendValue = text;\n              }\n            }\n          }\n        }\n      }\n\n      dimention = smartLabel.getOriSize(maxRightTrendValue);\n      trendRightWidth = dimention.width ? dimention.width + axisConfig.labelPadding : 0;\n      dimention = smartLabel.getOriSize(maxLeftTrendValue);\n      trendLeftWidth = dimention.width ? dimention.width + axisConfig.labelPadding : 0;\n\n      if (isOpposit) {\n        if (trendRightWidth > labelWidth && trendRightWidth > maxWidth) {\n          trendRightWidth = maxWidth;\n        }\n\n        labelWidth = Math.max(labelWidth, trendRightWidth + axisConfig.labelPadding);\n\n        if (trendLeftWidth > maxWidth - labelWidth) {\n          trendLeftWidth = Math.min(trendLeftWidth, maxWidth - labelWidth);\n        }\n      } else {\n        if (trendLeftWidth > labelWidth && trendLeftWidth > maxWidth) {\n          trendLeftWidth = maxWidth;\n        }\n\n        labelWidth = Math.max(labelWidth, trendLeftWidth + axisConfig.labelPadding);\n\n        if (trendRightWidth > maxWidth - labelWidth) {\n          trendRightWidth = Math.min(trendRightWidth, maxWidth - labelWidth);\n        }\n      }\n\n      for (j = 0, jLen = trendlines.length; j < jLen; j += 1) {\n        for (i = 0, iLim = trendlines[j].line && trendlines[j].line.length; i < iLim; i += 1) {\n          trendObj = trendlines[j].line[i];\n          startTValue = numberFormatter.getCleanValue((0, _lib.pluck)(trendObj.startvalue, trendObj.value, 0));\n          endTValue = (0, _lib.pluckNumber)(trendObj.endvalue, startTValue);\n\n          if (Number(trendObj.valueonright) === 1) {\n            text = trendObj.origText || trendObj.displayvalue || \"\" + endTValue || \"\";\n          } else {\n            text = trendObj.origText || trendObj.displayvalue || \"\" + startTValue || \"\";\n          }\n\n          text = (0, _lib.parseUnsafeString)(\"\" + text);\n\n          if (text === trendObj.endvalue || text === trendObj.startvalue) {\n            text = \"\" + numberFormatterFn.call(numberFormatter, text);\n          }\n\n          trendObj.origText = text;\n          valueOnRight = (0, _lib.pluckNumber)(trendObj.valueonright, isOpposit ? 1 : 0);\n\n          if (valueOnRight) {\n            axisSmartTrendValue = smartLabel.getSmartText(text, trendRightWidth, chart.config.canvasHeight, useEllipsesWhenOverflow);\n          } else {\n            axisSmartTrendValue = smartLabel.getSmartText(text, trendLeftWidth, chart.config.canvasHeight, useEllipsesWhenOverflow);\n          }\n\n          trendLabelConfig = axisConfig.parsedTrendLabels[counter++];\n\n          if (trendLabelConfig) {\n            trendLabelConfig.attr.text = trendObj.displayvalue = axisSmartTrendValue.text;\n          }\n\n          if (axisSmartTrendValue.tooltext) {\n            trendObj.valueToolText = axisSmartTrendValue.tooltext;\n            trendLabelConfig && (trendLabelConfig.valueToolText = trendObj.valueToolText);\n          } else {\n            delete trendObj.valueToolText;\n            trendLabelConfig && delete trendLabelConfig.valueToolText;\n          }\n        }\n      }\n    }\n\n    maxWidth += reserveNameHeight;\n\n    if (!axisConfig.drawAxisName || maxWidth - labelWidth - trendRightWidth <= 0 || axisName === \"\") {\n      axisNameData.isDraw = false;\n      axisNameData.value = _lib.BLANKSTRING;\n    } else {\n      smartLabel.setStyle({\n        fontSize: nameStyle.fontSize,\n        fontFamily: nameStyle.fontFamily,\n        lineHeight: nameStyle.lineHeight,\n        fontWeight: nameStyle.fontWeight\n      });\n      axisNameData.isDraw = true;\n\n      if (axisConfig.rotateAxisName) {\n        axisConfig.name.rotation = isOpposit ? 90 : 270;\n        axisSmartName = smartLabel.getSmartText(axisName, canvasHeight, maxWidth - labelWidth - trendRightWidth);\n        axisNameData.value = axisName;\n        axisConfig.nameMaxW = Math.min(axisSmartName.height);\n        nameWidth = axisConfig.nameMaxW + axisNamePadding;\n      } else {\n        axisSmartName = smartLabel.getSmartText(axisName, maxWidth - labelWidth - trendRightWidth, canvasHeight);\n        axisNameData.value = axisName;\n        axisConfig.nameMaxW = Math.min(axisSmartName.width, maxWidth - labelWidth);\n        axisConfig.nameMaxH = axisSmartName.height;\n\n        if (axisConfig.axisNameWidth >= 0) {\n          axisConfig.nameMaxW = Math.min(axisConfig.nameMaxW, axisConfig.axisNameWidth);\n        }\n\n        nameWidth = axisConfig.nameMaxW + axisNamePadding;\n      }\n    }\n\n    if (isOpposit) {\n      if (drawLabelsOpposit) {\n        retObj.left += Math.max(axisLabelWidth, trendLeftWidth);\n        retObj.right += trendRightWidth;\n      } else {\n        retObj.left += trendLeftWidth;\n        retObj.right += Math.max(axisLabelWidth, trendRightWidth);\n      }\n\n      if (drawAxisNameOpposit) {\n        axisConfig.axisNamePadding = retObj.left + axisNamePadding;\n        retObj.left += nameWidth;\n      } else {\n        axisConfig.axisNamePadding = retObj.right + axisNamePadding;\n        retObj.right += nameWidth;\n      }\n    } else {\n      if (drawLabelsOpposit) {\n        retObj.left += trendLeftWidth;\n        retObj.right += Math.max(axisLabelWidth, trendRightWidth);\n      } else {\n        retObj.left += Math.max(axisLabelWidth, trendLeftWidth);\n        retObj.right += trendRightWidth;\n      }\n\n      if (drawAxisNameOpposit) {\n        axisConfig.axisNamePadding = retObj.right + axisNamePadding;\n        retObj.right += nameWidth;\n      } else {\n        axisConfig.axisNamePadding = retObj.left + axisNamePadding;\n        retObj.left += nameWidth;\n      }\n    }\n\n    if (axisNameData.isDraw && axisConfig.axisNamePadding + axisConfig.nameMaxW > maxWidth) {\n      axisConfig.axisNamePadding = maxWidth - axisConfig.nameMaxW;\n      nameWidth = axisConfig.nameMaxW + axisConfig.axisNamePadding - labelWidth;\n    }\n\n    return retObj;\n  };\n\n  _proto._placeHorizontalAxis = function _placeHorizontalAxis(_maxHeight) {\n    var axis = this,\n        maxHeight = _maxHeight,\n        axisConfig = axis.config,\n        chart = axis.getFromEnv(\"chart\"),\n        chartConfig = chart.config,\n        smartLabel = chart.getFromEnv(\"smartLabel\"),\n        axisRange = axisConfig.axisRange,\n        axisNameData = axisConfig.name,\n        isOpposit = axisConfig.isOpposit,\n        numberFormatter = chart.getFromEnv(\"number-formatter\"),\n        drawLabelsOpposit = axisConfig.drawLabelsOpposit,\n        drawAxisNameOpposit = axisConfig.drawAxisNameOpposit,\n        axisLabelHeight = 0,\n        canvasWidth = chartConfig.canvasWidth,\n        axisValuePadding = axisConfig.labelPadding = (0, _lib.pluckNumber)(axisConfig.rawAttr.axisValuePadding, 4),\n        axisNamePadding = (0, _lib.pluckNumber)(axisConfig.rawAttr.axisNamePadding, 5),\n        useEllipsesWhenOverflow = axisConfig.useEllipsesWhenOverflow,\n        nameStyle = axisConfig.name.style,\n        trendStyle = axisConfig.trend.trendStyle,\n        axisName = axisConfig.axisName,\n        vtrendlines = axisConfig.vTrendLines,\n        valueOnRight,\n        trendTextFromValue,\n        j,\n        jLen,\n        labelHeight = 0,\n        counter = 0,\n        trendLabelConfig,\n        nameHeight = 0,\n        retObj = {\n      top: 0,\n      bottom: 0\n    },\n        trendMaxHeight = 0,\n        reserveNameHeight = 0,\n        axisSmartName,\n        i,\n        max,\n        min,\n        text,\n        iLim,\n        heightLeft,\n        trendObj,\n        axisSmartTrendValue,\n        trendHeight,\n        dimention,\n        numberFormatterFn,\n        axisLineThickness,\n        startTValue,\n        endTValue;\n\n    if (axisValuePadding < 0) {\n      axisConfig.labelPadding = 2;\n    }\n\n    if (axisConfig.drawTick && axisConfig.tickLength) {\n      axisLineThickness = axisConfig.axisLineThickness + axisConfig.tickLength;\n    } else {\n      axisLineThickness = axisConfig.axisLineThickness;\n    }\n\n    if (axisConfig.showAxisLine) {\n      axisConfig.labelPadding = (0, _lib.pluckNumber)(axisValuePadding, 2) + axisLineThickness;\n\n      if (axisConfig.labelPadding < 0) {\n        axisConfig.labelPadding = (axisConfig.axisLineThickness < 0 ? 0 : axisLineThickness) + 2;\n      }\n\n      maxHeight -= axisConfig.axisLineThickness;\n    } else {\n      axisConfig.labelPadding = (0, _lib.pluckNumber)(axisValuePadding, 2);\n\n      if (axisConfig.labelPadding < 0) {\n        axisConfig.labelPadding = 2;\n      }\n    }\n\n    max = axisRange.max;\n    min = axisRange.min;\n    axisConfig.labels.rotation = 0;\n    axisConfig.labels.step = axisConfig.labelStep;\n    axisConfig.labels.isDraw = 1;\n    axisConfig.labels.drawNormalVal = axisConfig.showDivLineValues;\n    axisConfig.labels.drawLimitVal = axisConfig.showLimits;\n    reserveNameHeight = nameStyle.lineHeight;\n    reserveNameHeight = Number(reserveNameHeight.replace(/px/i, \"\"));\n\n    if (axisName && reserveNameHeight < maxHeight) {\n      maxHeight -= reserveNameHeight;\n    }\n\n    if (axisConfig.rotateLabels && axisConfig.labelDisplay !== \"stagger\" && axisConfig.labelDisplay !== \"none\") {\n      axisConfig.labelDisplay = ROTATE_STR;\n    }\n\n    if (axisConfig.showLimits !== 1 && axisConfig.showDivLineValues !== 1) {\n      axisConfig.labels.isDraw = 0;\n    }\n\n    dimention = axisConfig.drawLabels ? axis._getHMaxLabelDimention(maxHeight - axisConfig.labelPadding) : {\n      width: 0,\n      height: 0\n    };\n\n    if (axisConfig.labels.rotation) {\n      if (dimention.width + axisConfig.labelPadding > maxHeight && !axisConfig.tickValues) {\n        axisConfig.labels.isDraw = 0;\n      }\n    } else {\n      if (dimention.height + axisConfig.labelPadding > maxHeight && !axisConfig.tickValues) {\n        axisConfig.labels.isDraw = 0;\n      }\n    }\n\n    if (axisConfig.labels.isDraw) {\n      if (axisConfig.labels.rotation) {\n        axisConfig.labelMaxW = dimention.height;\n        axisConfig.labelMaxH = dimention.width;\n        axisLabelHeight = dimention.width + axisConfig.labelPadding;\n      } else {\n        axisConfig.labelMaxW = dimention.width;\n        axisConfig.labelMaxH = dimention.height;\n        axisLabelHeight = dimention.height + axisConfig.labelPadding;\n      }\n\n      labelHeight = axisLabelHeight;\n    }\n\n    labelHeight = Math.max(labelHeight, axisConfig.labelPadding);\n    heightLeft = labelHeight <= maxHeight ? maxHeight - labelHeight : maxHeight;\n\n    if (axisConfig.drawTrendLines && axisConfig.drawTrendLabels && vtrendlines && axisConfig.isActive) {\n      if (axisConfig.isPercent) {\n        numberFormatterFn = axis.getFromEnv(\"number-formatter\").percentValue;\n      } else if (axisConfig.isVertical) {\n        numberFormatterFn = axis.getFromEnv(\"number-formatter\").yAxis;\n      } else {\n        numberFormatterFn = axis.getFromEnv(\"number-formatter\").xAxis;\n      }\n\n      smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n      smartLabel.setStyle({\n        fontSize: trendStyle.fontSize,\n        fontFamily: trendStyle.fontFamily,\n        lineHeight: trendStyle.lineHeight,\n        fontWeight: trendStyle.fontWeight\n      });\n\n      for (j = 0, jLen = vtrendlines.length; j < jLen; j += 1) {\n        for (i = 0, iLim = vtrendlines[j].line && vtrendlines[j].line.length; i < iLim; i += 1) {\n          trendObj = vtrendlines[j].line[i];\n          startTValue = numberFormatter.getCleanValue((0, _lib.pluck)(trendObj.startvalue, trendObj.value, 0));\n          endTValue = (0, _lib.pluckNumber)(trendObj.endvalue, startTValue);\n\n          if (startTValue <= max && startTValue >= min && endTValue <= max && endTValue >= min) {\n            valueOnRight = (0, _lib.pluckNumber)(trendObj.valueonright, 0);\n            trendTextFromValue = valueOnRight === 1 ? trendObj.endvalue || trendObj.startvalue : trendObj.startvalue || trendObj.endvalue;\n            text = (0, _lib.parseUnsafeString)(trendObj.origText || trendObj.displayvalue || trendTextFromValue || \"\");\n\n            if (text === trendTextFromValue) {\n              text = \"\" + numberFormatterFn.call(chart.getFromEnv(\"number-formatter\"), text);\n            }\n\n            trendObj.origText = text;\n            axisSmartTrendValue = smartLabel.getSmartText(text, chart.canvasWidth, trendStyle.lineHeight, useEllipsesWhenOverflow);\n            trendHeight = axisSmartTrendValue.height + 2;\n\n            if (heightLeft - trendHeight < 0) {\n              trendObj.displayvalue = _lib.BLANKSTRING;\n            } else {\n              trendLabelConfig = axisConfig.parsedTrendLabels[counter++];\n\n              if (trendLabelConfig) {\n                trendLabelConfig.attr.text = trendObj.displayvalue = axisSmartTrendValue.text;\n              }\n\n              trendMaxHeight = trendMaxHeight < axisSmartTrendValue.height ? axisSmartTrendValue.height : trendMaxHeight;\n            }\n\n            if (axisSmartTrendValue.tooltext) {\n              trendObj.valueToolText = axisSmartTrendValue.tooltext;\n              trendLabelConfig && (trendLabelConfig.valueToolText = trendObj.valueToolText);\n            } else {\n              delete trendObj.valueToolText;\n              trendLabelConfig && delete trendLabelConfig.valueToolText;\n            }\n          }\n        }\n      }\n    }\n\n    heightLeft -= trendMaxHeight;\n    labelHeight += isOpposit ? 0 : trendMaxHeight;\n    heightLeft += reserveNameHeight;\n    maxHeight += reserveNameHeight;\n\n    if (!axisConfig.drawAxisName || heightLeft <= 0 || axisName === \"\") {\n      axisNameData.isDraw = false;\n      axisNameData.value = _lib.BLANKSTRING;\n    } else {\n      smartLabel.setStyle({\n        fontSize: nameStyle.fontSize,\n        fontFamily: nameStyle.fontFamily,\n        lineHeight: nameStyle.lineHeight,\n        fontWeight: nameStyle.fontWeight\n      });\n      axisNameData.isDraw = true;\n      axisSmartName = smartLabel.getSmartText(axisName, canvasWidth, heightLeft);\n      axisNameData.value = axisName;\n      axisConfig.nameMaxW = canvasWidth;\n      axisConfig.nameMaxH = axisSmartName.height;\n      nameHeight = axisSmartName.height + axisNamePadding;\n      axisConfig.axisNamePadding = axisNamePadding + labelHeight;\n\n      if (axisConfig.axisNamePadding + axisSmartName.height > maxHeight) {\n        axisConfig.axisNamePadding = maxHeight - axisSmartName.height;\n        nameHeight = axisSmartName.height + axisConfig.axisNamePadding - labelHeight;\n      }\n    }\n\n    if (isOpposit) {\n      if (drawLabelsOpposit) {\n        retObj.bottom += axisLabelHeight + trendMaxHeight;\n      } else {\n        retObj.top += axisLabelHeight;\n        retObj.bottom += trendMaxHeight;\n      }\n\n      axisConfig.trendBottomPadding = retObj.bottom - trendMaxHeight + 2;\n\n      if (drawAxisNameOpposit) {\n        retObj.bottom += nameHeight;\n      } else {\n        retObj.top += nameHeight;\n      }\n    } else {\n      if (drawLabelsOpposit) {\n        retObj.top += axisLabelHeight;\n        retObj.bottom += trendMaxHeight;\n      } else {\n        retObj.bottom += axisLabelHeight + trendMaxHeight;\n      }\n\n      axisConfig.trendBottomPadding = retObj.bottom - trendMaxHeight + 2;\n\n      if (drawAxisNameOpposit) {\n        retObj.top += nameHeight;\n      } else {\n        retObj.bottom += nameHeight;\n      }\n    }\n\n    return retObj;\n  };\n\n  _proto._parseCategoryPlotLine = function _parseCategoryPlotLine() {\n    var axis = this,\n        axisConfig = axis.config,\n        axisRange = axisConfig.axisRange,\n        tickValue = axisConfig.tickValues.tickValue,\n        plotLineColor = (0, _lib.convertColor)(axisConfig.divLineColor, axisConfig.divLineAlpha),\n        plotLineWidth = axisConfig.divLineThickness,\n        plotLineDashStyle = axisConfig.divLineIsDashed ? (0, _lib.getDashStyle)(axisConfig.divLineDashLen, axisConfig.divLineDashGap, plotLineWidth) : _lib.DASH_DEF,\n        axisAttrObj,\n        i,\n        willDraw = isInBetween(axis.getVisibleConfig()),\n        value,\n        ticks = axisConfig._allTicks,\n        len = ticks.length;\n    axisAttrObj = {\n      stroke: plotLineColor,\n      \"stroke-width\": plotLineWidth,\n      \"stroke-dasharray\": plotLineDashStyle\n    };\n\n    if (tickValue[0] && (tickValue[0].x !== _lib.UNDEF || tickValue[0].y !== _lib.UNDEF)) {\n      return;\n    }\n\n    if (axisConfig.lines.isDraw && axisConfig.categoryNumDivLines) {\n      for (i = 0; i < len; ++i) {\n        value = ticks[i];\n\n        if (!willDraw(value)) {\n          continue;\n        }\n\n        if (value === axisRange.min || value === axisRange.max) {\n          continue;\n        }\n\n        axis.setReferenceInfo({\n          from: value,\n          type: \"line\",\n          layer: 1,\n          attr: axisAttrObj\n        });\n      }\n    }\n  };\n\n  _proto._drawComponents = function _drawComponents() {\n    var axis = this,\n        axisConfig = axis.config;\n    axisConfig.drawAxisName && axis._drawAxisName();\n    axisConfig.drawAxisLine && axis._drawAxisLine();\n\n    if (!axisConfig.tickValues) {\n      axisConfig.drawLabels && axis._drawLabel();\n    } else {\n      axisConfig.drawLabels && axis._drawCategory();\n    }\n\n    axisConfig.drawTrendLines && axis.drawTrendLabel();\n  };\n\n  _proto.drawTrendLabel = function drawTrendLabel() {\n    var axis = this,\n        axisConfig = axis.config,\n        trendLabelConfigs = axisConfig.parsedTrendLabels,\n        animationManager = axis.getFromEnv(\"animationManager\"),\n        toolTipController = this.getFromEnv(\"toolTipController\"),\n        container = axisConfig.axisTrendLabelContainer,\n        isOpposite = axisConfig.isOpposit,\n        axisPadding = axisConfig.labelPadding,\n        vtrendlines = axisConfig.vTrendLines,\n        trendlines = axisConfig.trendLines,\n        axisDimension = axisConfig.axisDimention,\n        visibleDomain = axis.getVisibleConfig(),\n        visibleMin = visibleDomain.minValue,\n        visibleMax = visibleDomain.maxValue,\n        valueOnRight,\n        trendLabelConfig,\n        trendLabelElement,\n        fixedTrendLabelPos,\n        fixedTrendLabelPosRight,\n        isTrendZone,\n        startValue,\n        midValue,\n        endValue,\n        _isVisible = true,\n        startValuePixel,\n        endValuePixel,\n        removingElement,\n        diff,\n        isEndValDefined,\n        i,\n        ii;\n\n    for (i = 0, ii = trendLabelConfigs.length; i < ii; i++) {\n      trendLabelConfigs[i].id = i + TREND_ID;\n    }\n\n    if (vtrendlines) {\n      fixedTrendLabelPos = isOpposite ? axisDimension.opposite + (axisConfig.trendBottomPadding || 0) : axisDimension.y + (axisConfig.trendBottomPadding || 0);\n    } else {\n      fixedTrendLabelPos = isOpposite ? axisDimension.opposite - (axisPadding || 0) : axisDimension.x - (axisPadding || 0);\n      fixedTrendLabelPosRight = isOpposite ? axisDimension.x + (axisPadding || 0) : axisDimension.opposite + (axisPadding || 0);\n    }\n\n    diff = (0, _differenceWith.default)(function (prev, now) {\n      return prev.attr.text === now.attr.text;\n    }, axisConfig.prevTrendLabels, trendLabelConfigs);\n\n    for (i = 0, ii = diff.length; i < ii; i++) {\n      removingElement = axis.getGraphicalElement(diff[i].id);\n\n      if (removingElement) {\n        axis.removeGraphicalElement(removingElement);\n      }\n    }\n\n    axisConfig.prevTrendLabels = (0, _lib.extend2)([], trendLabelConfigs);\n\n    if (!axisConfig.drawTrendLabels) {\n      for (i = 0, ii = trendLabelConfigs.length; i < ii; i++) {\n        removingElement = axis.getGraphicalElement(trendLabelConfigs[i].id);\n\n        if (removingElement) {\n          axis.removeGraphicalElement(removingElement);\n        }\n      }\n\n      return;\n    }\n\n    for (i = 0, ii = trendLabelConfigs.length; i < ii; i++) {\n      trendLabelConfig = trendLabelConfigs[i];\n      trendLabelElement = axis.getGraphicalElement(i + TREND_ID);\n      startValue = +trendLabelConfig.from;\n      endValue = +trendLabelConfig.to;\n      _isVisible = true;\n      isEndValDefined = !isNaN(endValue);\n\n      if (isEndValDefined) {\n        midValue = startValue + (endValue - startValue) / 2;\n        if (visibleMin > midValue || visibleMax < midValue) _isVisible = false;\n      } else {\n        if (visibleMin > startValue || visibleMax < startValue) _isVisible = false;\n      }\n\n      if (!_isVisible) {\n        trendLabelElement && axis.removeGraphicalElement(trendLabelElement);\n      } else {\n        if (vtrendlines) {\n          startValuePixel = axis.getPixel(startValue, queryOptions);\n          endValuePixel = isEndValDefined ? axis.getPixel(endValue, queryOptions) : 0;\n          isTrendZone = (0, _lib.pluckNumber)(trendLabelConfig.isTrendZone, axisConfig.isTrendZone, 1);\n\n          if (isEndValDefined && endValue !== startValue && isTrendZone) {\n            trendLabelConfig.attr.x = startValuePixel + (endValuePixel - startValuePixel) / 2;\n            trendLabelConfig.attr.y = fixedTrendLabelPos;\n          } else {\n            trendLabelConfig.attr.x = isEndValDefined ? endValuePixel : startValuePixel;\n            trendLabelConfig.attr.y = fixedTrendLabelPos;\n          }\n        } else if (trendlines) {\n          startValuePixel = axis.getPixel(startValue, queryOptions);\n          endValuePixel = isEndValDefined ? axis.getPixel(endValue, queryOptions) : 0;\n          valueOnRight = (0, _lib.pluckNumber)(trendLabelConfig.valueOnRight, axisConfig.isOpposit ? 1 : 0);\n          isTrendZone = (0, _lib.pluckNumber)(trendLabelConfig.isTrendZone, axisConfig.isTrendZone, 0);\n\n          if (isEndValDefined && endValue !== startValue && isTrendZone) {\n            trendLabelConfig.attr.x = valueOnRight ? fixedTrendLabelPosRight : fixedTrendLabelPos;\n            trendLabelConfig.attr.y = startValuePixel + (endValuePixel - startValuePixel) / 2;\n          } else {\n            trendLabelConfig.attr.x = valueOnRight ? fixedTrendLabelPosRight : fixedTrendLabelPos;\n            trendLabelConfig.attr.y = isEndValDefined ? valueOnRight ? endValuePixel : startValuePixel : startValuePixel;\n          }\n        }\n\n        trendLabelElement = axis.addGraphicalElement(i + TREND_ID, animationManager.setAnimation({\n          container: container,\n          el: trendLabelElement || \"text\",\n          attr: trendLabelConfig.attr,\n          css: trendLabelConfig.css,\n          data: {\n            value: midValue || startValue\n          },\n          component: axis,\n          label: \"text\"\n        }));\n\n        if (axisConfig.showTooltip && trendLabelConfig.valueToolText) {\n          toolTipController.enableToolTip(trendLabelElement, trendLabelConfig.valueToolText);\n        } else {\n          toolTipController.disableToolTip(trendLabelElement);\n        }\n      }\n    }\n  };\n\n  _proto._drawAxisName = function _drawAxisName() {\n    var axis = this,\n        axisConfig = axis.config,\n        toolTipController = this.getFromEnv(\"toolTipController\"),\n        canvasDimensions = axis.getLinkedItem(\"canvas\").getEffectiveDimensions(),\n        animationManager = axis.getFromEnv(\"animationManager\"),\n        canvasLeft = canvasDimensions.left,\n        canvasTop = canvasDimensions.top,\n        canvasWidth = canvasDimensions.width,\n        canvasHeight = canvasDimensions.height,\n        canvasBottom = canvasTop + canvasHeight,\n        canvasRight = canvasLeft + canvasWidth,\n        chartConfig = axis.getFromEnv(\"chart\").config,\n        style = axisConfig.name.style,\n        axisName = axisConfig.name.value,\n        isOpposite = axisConfig.isOpposit,\n        isVertical = axisConfig.isVertical,\n        smartLabel = axis.getFromEnv(\"smartLabel\"),\n        axisNameContainer = axisConfig.axisNameContainer,\n        axisNamePadding = axisConfig.axisNamePadding,\n        axisNameMaxH = axisConfig.nameMaxH,\n        axisNameMaxW = axisConfig.nameMaxW,\n        axisDimension = axisConfig.axisDimention,\n        axisStart = isVertical ? axisDimension.x : axisDimension.y,\n        axisOpposite = axisDimension.opposite,\n        axisNameElement = axis.getGraphicalElement(\"axisName\"),\n        rotation = (0, _lib.pluckNumber)(axisConfig.name.rotation, isVertical ? 90 : 270),\n        paper = axis.getFromEnv(\"paper\"),\n        css = {\n      fontFamily: style.fontFamily,\n      fontSize: style.fontSize,\n      lineHeight: style.lineHeight,\n      fontWeight: style.fontWeight,\n      fontStyle: style.fontStyle\n    },\n        axisAttrObj,\n        axisSmartName,\n        tooltext,\n        nameHeightAvail,\n        nameHeight,\n        yPos;\n\n    if (axisConfig.name.isDraw) {\n      axisAttrObj = {\n        fontFamily: style.fontFamily,\n        fill: style.color,\n        \"vertical-align\": \"middle\",\n        \"font-size\": style.fontSize,\n        \"line-height\": style.lineHeight\n      };\n      smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n      smartLabel.setStyle({\n        fontSize: style.fontSize,\n        fontFamily: style.fontFamily,\n        lineHeight: style.lineHeight,\n        fontWeight: style.fontWeight\n      });\n\n      if (axisConfig.drawAxisNameOpposit) {\n        isOpposite = !isOpposite;\n        axisStart = axisOpposite;\n      }\n\n      if (isVertical) {\n        axisNamePadding = Math.max(axisNamePadding, getAxisNamePaddingOffset(axisConfig, chartConfig));\n\n        if (axisConfig.axisNameAlignCanvas || chartConfig.captionalignment && chartConfig.captionalignment === \"left\") {\n          nameHeightAvail = canvasHeight;\n        } else {\n          nameHeightAvail = Math.max(canvasHeight, axisConfig.oriCanvasHeight || 0);\n        }\n\n        if (rotation) {\n          axisSmartName = smartLabel.getSmartText(axisName, nameHeightAvail, axisNameMaxW);\n          tooltext = axisSmartName.tooltext;\n          nameHeight = axisSmartName.width;\n        } else {\n          axisSmartName = smartLabel.getSmartText(axisName, axisNameMaxW, nameHeightAvail);\n          tooltext = axisSmartName.tooltext;\n          nameHeight = axisSmartName.height;\n        }\n\n        if (axisConfig.drawAxisNameFromBottom) {\n          yPos = canvasBottom - nameHeight / 2;\n        } else {\n          yPos = nameHeight > canvasHeight ? chartConfig.height / 2 : canvasTop + canvasHeight / 2;\n        }\n\n        axisAttrObj.text = axisSmartName.text;\n        axisAttrObj.x = isOpposite ? (axisStart || canvasRight) + axisNamePadding + axisNameMaxW / 2 : (axisStart || canvasLeft) - axisNamePadding - axisNameMaxW / 2;\n        axisAttrObj.y = yPos;\n      } else {\n        axisSmartName = smartLabel.getSmartText(axisName, canvasWidth, axisNameMaxH);\n        tooltext = axisSmartName.tooltext;\n\n        if (isOpposite && chartConfig.canvasMarginTop) {\n          axisNamePadding = Math.max(axisNamePadding, chartConfig.canvasMarginTop - chartConfig.marginTop - axisNameMaxH);\n        }\n\n        if (!isOpposite && chartConfig.canvasMarginBottom) {\n          axisNamePadding = Math.max(axisNamePadding, chartConfig.canvasMarginBottom - chartConfig.marginBottom - axisNameMaxH);\n        }\n\n        axisAttrObj.text = axisSmartName.text;\n        axisAttrObj.x = canvasLeft + canvasWidth / 2;\n        axisAttrObj.y = isOpposite ? (axisStart || canvasTop) - axisNamePadding - axisNameMaxH / 2 : (axisStart || canvasBottom) + axisNamePadding + axisNameMaxH / 2;\n      }\n\n      axisAttrObj[\"text-bound\"] = axisSmartName.text === \"\" ? [] : [style.backgroundColor, style.borderColor, style.borderColor ? style.borderThickness : 0, style.borderPadding, style.borderRadius, style.borderDash];\n      axisAttrObj.transform = paper.getSuggestiveRotation(isVertical ? rotation : 0, axisAttrObj.x, axisAttrObj.y);\n      axisNameElement = axis.addGraphicalElement(\"axisName\", animationManager.setAnimation({\n        css: css,\n        el: axisNameElement || \"text\",\n        attr: axisAttrObj,\n        container: axisNameContainer,\n        component: axis,\n        label: \"text\"\n      }));\n\n      if (axisConfig.showTooltip) {\n        toolTipController.enableToolTip(axisNameElement, tooltext);\n      } else {\n        toolTipController.disableToolTip(axisNameElement);\n      }\n    } else {\n      axisNameElement && axis.removeGraphicalElement(axisNameElement);\n    }\n  };\n\n  _proto._drawAxisLine = function _drawAxisLine() {\n    var axis = this,\n        axisConfig = axis.config,\n        isVertical = axisConfig.isVertical,\n        isOpposite = axisConfig.isOpposit,\n        chart = axis.getFromEnv(\"chart\"),\n        canvasDimensions = axis.getLinkedItem(\"canvas\").getEffectiveDimensions(),\n        animationManager = axis.getFromEnv(\"animationManager\"),\n        canvasTop = canvasDimensions.top,\n        canvasLeft = canvasDimensions.left,\n        canvasBottom = canvasTop + canvasDimensions.height,\n        canvasRight = canvasLeft + canvasDimensions.width,\n        axisDimension = axisConfig.axisDimention,\n        axisStartPosition = isVertical ? axisDimension.x : axisDimension.y,\n        drawAxisLineWRTCanvas = axisConfig.drawAxisLineWRTCanvas,\n        chartJSON = chart.getFromEnv(\"chart-attrib\"),\n        axisLineGroup = axisConfig.axisAxisLineContainerBottom,\n        tickAttrObj,\n        axisLineElementCheck = axis.getGraphicalElement(AXIS_LINE),\n        axisLineElement,\n        linePath,\n        xAxisLineLeftExten,\n        fixPoint,\n        tickEndPoint,\n        pixelValue,\n        axisLineAttrObj,\n        tickElement,\n        tickElementCheck,\n        removingElement,\n        tick,\n        tickId,\n        drawElemIds = [],\n        diff,\n        i,\n        crispPath,\n        ticks,\n        ln;\n    xAxisLineLeftExten = (0, _lib.pluckNumber)(chartJSON.showyaxisline, chartJSON.showyaxisline) === 1 ? (0, _lib.pluckNumber)(chartJSON.yaxislinethickness, chartJSON.pyaxislinethickness, 1) : 0;\n\n    if (axisConfig.showAxisLine) {\n      if (isVertical) {\n        if (isOpposite) {\n          axisStartPosition = drawAxisLineWRTCanvas ? canvasRight : axisStartPosition;\n          fixPoint = axisStartPosition + axisConfig.axisLineThickness / 2;\n        } else {\n          axisStartPosition = drawAxisLineWRTCanvas ? canvasLeft : axisStartPosition;\n          fixPoint = axisStartPosition - axisConfig.axisLineThickness / 2;\n        }\n\n        crispPath = getCrispPath([\"M\", fixPoint, canvasBottom, \"L\", fixPoint, canvasTop], axisConfig.axisLineThickness);\n        linePath = crispPath.path;\n      } else {\n        if (isOpposite) {\n          axisStartPosition = drawAxisLineWRTCanvas ? canvasTop : axisStartPosition;\n          fixPoint = axisStartPosition - axisConfig.axisLineThickness / 2;\n        } else {\n          axisStartPosition = drawAxisLineWRTCanvas ? canvasBottom : axisStartPosition;\n          fixPoint = axisStartPosition + axisConfig.axisLineThickness / 2;\n        }\n\n        crispPath = getCrispPath([\"M\", canvasLeft - xAxisLineLeftExten, fixPoint, \"L\", canvasRight, fixPoint], axisConfig.axisLineThickness);\n        linePath = crispPath.path;\n      }\n\n      axisLineAttrObj = {\n        path: linePath,\n        stroke: axisConfig.axisLineColor,\n        \"stroke-linecap\": BUTT,\n        \"stroke-width\": axisConfig.axisLineThickness,\n        \"shape-rendering\": crispPath.isCrisped ? CRISP : _lib.UNDEF\n      };\n\n      if (axisConfig.drawTick && axisConfig.tickLength) {\n        tickAttrObj = {\n          stroke: axisConfig.tickColor,\n          \"stroke-width\": axisConfig.tickWidth\n        };\n\n        if (isVertical) {\n          if (isOpposite) {\n            tickEndPoint = fixPoint + axisConfig.tickLength;\n          } else {\n            tickEndPoint = fixPoint - axisConfig.tickLength;\n          }\n        } else {\n          if (isOpposite) {\n            tickEndPoint = fixPoint - axisConfig.tickLength;\n          } else {\n            tickEndPoint = fixPoint + axisConfig.tickLength;\n          }\n        }\n\n        ticks = axisConfig.tickValues ? axisConfig.tickValues.tickValue.map(function (tickObj) {\n          return isVertical ? tickObj.y : tickObj.x;\n        }) : axisConfig.ticks;\n\n        for (i = 0, ln = ticks.length; i < ln; i += 1) {\n          tick = ticks[i];\n          tickId = \"\" + tick + TICK_ID;\n          tickElementCheck = axis.getGraphicalElement(tickId);\n          pixelValue = axis.getPixel(tick, queryOptions);\n          tickAttrObj.path = getCrispPath(isVertical ? [\"M\", fixPoint, pixelValue, \"L\", tickEndPoint, pixelValue] : [\"M\", pixelValue, fixPoint, \"L\", pixelValue, tickEndPoint], axisConfig.tickWidth).path;\n          tickElement = animationManager.setAnimation({\n            el: tickElementCheck || \"path\",\n            attr: tickAttrObj,\n            data: {\n              value: tick,\n              path: tickAttrObj.path\n            },\n            container: axisLineGroup,\n            component: axis,\n            label: \"path\"\n          });\n\n          if (!tickElementCheck) {\n            axis.addGraphicalElement(tickId, tickElement);\n          }\n\n          drawElemIds.push(tickId);\n        }\n      }\n\n      axisLineElement = animationManager.setAnimation({\n        el: axisLineElementCheck || \"path\",\n        attr: axisLineAttrObj,\n        container: axisLineGroup,\n        component: axis,\n        label: \"path\"\n      });\n\n      if (!axisLineElementCheck) {\n        axis.addGraphicalElement(AXIS_LINE, axisLineElement);\n      }\n\n      drawElemIds.push(AXIS_LINE);\n    }\n\n    diff = (0, _diff.default)(axisConfig.prevTicks, drawElemIds);\n\n    for (i = 0, ln = diff.length; i < ln; i++) {\n      removingElement = axis.getGraphicalElement(diff[i]);\n      removingElement && axis.removeGraphicalElement(removingElement);\n    }\n\n    axisConfig.prevTicks = drawElemIds;\n  };\n\n  _proto._parseCategory = function _parseCategory() {\n    var axis = this,\n        axisConfig = axis.config,\n        axisDimention = axisConfig.axisDimention || {},\n        chart = axis.getFromEnv(\"chart\"),\n        smartLabel = chart.getFromEnv(\"smartLabel\"),\n        axisComponents = axis.components,\n        labelStore = axisComponents.labels,\n        canvasDimensions = axis.getLinkedItem(\"canvas\").getEffectiveDimensions(),\n        chartConfig = chart.config,\n        isOpposit = axisConfig.isOpposit,\n        labels = axisConfig.labels,\n        style = labels.style,\n        isVertical = axisConfig.isVertical,\n        canvasTop = canvasDimensions.top,\n        canvasLeft = canvasDimensions.left,\n        canvasBottom = canvasTop + canvasDimensions.height,\n        canvasRight = canvasLeft + canvasDimensions.width,\n        axisPadding = axisConfig.labelPadding,\n        axisStartPosition = isVertical ? axisDimention.x : axisDimention.y,\n        axisEndPosition = axisDimention.opposite,\n        categories = chart.getFromEnv(\"dataSource\").categories,\n        categoriesStyle = {},\n        tickArr = axisConfig.tickValues.tickValue,\n        i,\n        curCategory,\n        text,\n        labelRotation,\n        labelLineHeight,\n        labelLineHeightpx,\n        addCategoryPadding,\n        css,\n        categoryStyleFontFamily,\n        categoryStyleFontSize,\n        categoryStyleFontWeight,\n        categoryStyleFontStyle,\n        ParentCss,\n        axisAttrObj,\n        fontColor,\n        pos,\n        min = axisConfig.axisRange.min,\n        curCategoryValue,\n        labelBox,\n        categoryArr,\n        ln,\n        tempStep,\n        staggerLineAvailed,\n        staggerLines = axisConfig.drawnStaggerLines,\n        isUnevenLabels = (axisConfig.labelStep !== axisConfig.labels.step || axis.getZoom() !== 1) && axisConfig.labelDisplay === \"stagger\",\n        categoryPadding,\n        staggerLabelWidth,\n        intervalWidth,\n        smartLabelText,\n        labelMaxW,\n        labelMaxH,\n        axisXPadding = 1,\n        curCategoryIndex;\n\n    if (axisConfig.labels.isDraw) {\n      if (isVertical) {\n        intervalWidth = Math.abs(axis.getPixel(0, queryOptions) - axis.getPixel(0 + axisConfig.axisRange.tickInterval, queryOptions));\n\n        if (axisConfig.labelMaxH > intervalWidth) {\n          tempStep = Math.ceil(axisConfig.labelMaxH / intervalWidth);\n        }\n\n        if (tempStep > axisConfig.labels.step) {\n          axisConfig.labels.step = tempStep;\n        }\n      }\n\n      if (isUnevenLabels) {\n        staggerLabelWidth = 2 * Math.abs(axis.getPixel(min, queryOptions) - axis.getPixel(min + axisConfig.labels.step, queryOptions)) * axisConfig.sWidthAdjstFactor - axisXPadding;\n      }\n\n      labelRotation = axisConfig.labels.rotation;\n      labelMaxW = labelRotation ? axisConfig.labelMaxH : axisConfig.labelMaxW;\n      labelMaxH = labelRotation ? axisConfig.labelMaxW : axisConfig.labelMaxH;\n\n      if (axisConfig.drawLabelsOpposit) {\n        isOpposit = !isOpposit;\n        axisStartPosition = axisEndPosition;\n      }\n\n      if (categories && categories[0] && axisConfig.xAxisLabelMode !== \"auto\") {\n        categoriesStyle.fontFamily = categories[0].font;\n        categoriesStyle.fontSize = categories[0].fontsize;\n        categoriesStyle.color = categories[0].fontcolor;\n      }\n\n      axisConfig.ParentCss = ParentCss = {\n        fontFamily: (0, _lib.pluck)(categoriesStyle.fontFamily, style.fontFamily),\n        fontSize: (0, _lib.pluck)(categoriesStyle.fontSize, this.computeFontSize(style.fontSizeWithUnit) + _lib.PXSTRING),\n        fontWeight: (0, _lib.pluck)(style.fontWeight),\n        fontStyle: (0, _lib.pluck)(style.fontStyle)\n      };\n      ParentCss.lineHeight = (0, _lib.setLineHeight)(ParentCss);\n      categoryArr = axis._getCategoryArr();\n      axisComponents.labelIndexArr = [];\n\n      for (i = 0, ln = categoryArr.length; i < ln; i += 1) {\n        curCategoryIndex = categoryArr[i].index;\n        curCategory = tickArr[curCategoryIndex];\n        curCategoryValue = categoryArr[i].value;\n        axisComponents.labelIndexArr.push(curCategoryIndex);\n        categoryStyleFontFamily = (0, _lib.pluck)(curCategory.font, curCategory.labelfont);\n        categoryStyleFontSize = (0, _lib.pluck)(this.computeFontSize(curCategory.fontsize), curCategory.labelfontsize);\n        categoryStyleFontWeight = (0, _lib.pluck)(curCategory.fontbold, curCategory.labelfontbold) ? (0, _lib.pluckNumber)(curCategory.fontbold, curCategory.labelfontbold, 0) ? \"bold\" : _lib.NORMAL : _lib.UNDEF;\n        categoryStyleFontStyle = (0, _lib.pluck)(curCategory.fontitalic, curCategory.labelfontitalic) ? (0, _lib.pluckNumber)(curCategory.fontitalic, curCategory.labelfontitalic, 0) ? \"italic\" : _lib.NORMAL : _lib.UNDEF;\n        fontColor = (0, _lib.convertColor)((0, _lib.pluck)(curCategory.fontcolor, curCategory.labelfontcolor, categoriesStyle.color, style.color), (0, _lib.pluckNumber)(curCategory.labelalpha, axisConfig.rawAttr.labelAlpha, chart.config.singleseries ? _lib.UNDEF : curCategory.alpha, 100));\n\n        if (categoryStyleFontFamily || categoryStyleFontSize || categoryStyleFontWeight || categoryStyleFontStyle) {\n          css = {};\n          categoryStyleFontFamily && (css.fontFamily = categoryStyleFontFamily);\n          categoryStyleFontSize && (css.fontSize = categoryStyleFontSize);\n          categoryStyleFontWeight && (css.fontWeight = categoryStyleFontWeight);\n          categoryStyleFontStyle && (css.fontStyle = categoryStyleFontStyle);\n          css.lineHeight = categoryStyleFontSize ? (0, _lib.setLineHeight)(css) : ParentCss.lineHeight;\n        } else {\n          css = _lib.UNDEF;\n        }\n\n        if (css || ParentCss) {\n          labelLineHeightpx = (css || ParentCss).lineHeight;\n\n          if (labelLineHeightpx.indexOf(\"px\") !== -1) {\n            labelLineHeight = labelLineHeightpx.replace(/px/i, \"\");\n            labelLineHeight = parseFloat(labelLineHeight);\n          }\n        }\n\n        if (curCategory.appliedSmartLabel === false) {\n          smartLabel.setStyle(curCategory._ovrStyle || ParentCss);\n          smartLabelText = smartLabel.getSmartText(curCategory.oriLabel || curCategory.label, labelMaxW, labelMaxH);\n          curCategory.oriLabel = curCategory.oriLabel || curCategory.label;\n          curCategory.label = smartLabelText.text;\n          curCategory.labelTooltext = smartLabelText.labelTooltext;\n          curCategory.appliedSmartLabel = true;\n        }\n\n        pos = axis.getPixel(curCategoryValue, queryOptions);\n\n        if (isVertical) {\n          text = curCategory.label || \"\";\n          addCategoryPadding = Number(curCategory.labelPadding) || 0;\n          axisAttrObj = {\n            fill: fontColor,\n            \"line-height\": labelLineHeight,\n            opacity: 1,\n            \"text-anchor\": isOpposit ? _lib.POSITION_START : _lib.POSITION_END,\n            text: text,\n            cursor: !chartConfig.singleseries && curCategory.link || curCategory.labellink || style.labelLink ? _lib.POINTER : \"\",\n            x: isOpposit ? (axisStartPosition || canvasRight) + axisPadding : (axisStartPosition || canvasLeft) - axisPadding,\n            y: addCategoryPadding ? pos + addCategoryPadding : pos\n          };\n        } else {\n          text = curCategory.label || \"\";\n          addCategoryPadding = Number(curCategory.labelPadding) || 0;\n          axisAttrObj = {\n            fill: fontColor,\n            \"line-height\": labelLineHeight,\n            opacity: 1,\n            text: text,\n            cursor: !chartConfig.singleseries && curCategory.link || curCategory.labellink || style.labelLink ? _lib.POINTER : \"\",\n            x: pos,\n            y: isOpposit ? (axisStartPosition || canvasTop) - axisPadding : (axisStartPosition || canvasBottom) + axisPadding\n          };\n\n          if (labelRotation) {\n            axisAttrObj[\"text-anchor\"] = isOpposit ? _lib.POSITION_START : _lib.POSITION_END;\n            axisAttrObj[\"vertical-align\"] = _lib.POSITION_MIDDLE;\n          } else {\n            axisAttrObj[\"text-anchor\"] = _lib.POSITION_MIDDLE;\n            axisAttrObj[\"vertical-align\"] = isOpposit ? _lib.POSITION_BOTTOM : _lib.POSITION_TOP;\n          }\n\n          if (isUnevenLabels) {\n            staggerLineAvailed = curCategory.labelCount % staggerLines;\n\n            if (staggerLineAvailed) {\n              if (!(labelLineHeight = curCategory.style.lineHeight)) labelLineHeight = axisConfig.labels.style.lineHeight;\n              categoryPadding = labelLineHeight.replace(/px/i, \"\") * staggerLineAvailed;\n              axisAttrObj.y = isOpposit ? axisAttrObj.y - categoryPadding : axisAttrObj.y + categoryPadding;\n            }\n\n            smartLabel.setStyle(curCategory._ovrStyle || ParentCss);\n            smartLabelText = smartLabel.getSmartText(curCategory.oriLabel || curCategory.label, staggerLabelWidth, labelMaxH);\n            curCategory.oriLabel = curCategory.oriLabel || curCategory.label;\n            axisAttrObj.text = curCategory.label = smartLabelText.text;\n            curCategory.labelTooltext = smartLabelText.labelTooltext;\n            curCategory.appliedSmartLabel = true;\n          } else if (addCategoryPadding) {\n            if (isOpposit) {\n              axisAttrObj.y -= addCategoryPadding;\n            } else {\n              axisAttrObj.y += addCategoryPadding;\n            }\n          }\n        }\n\n        labelBox = {\n          label: curCategory.label,\n          lineHeight: labelLineHeightpx,\n          border: (0, _lib.pluckNumber)(curCategory.borderthickness, curCategory.labelborderthickness) ? (0, _lib.pluckNumber)(curCategory.borderthickness, curCategory.labelborderthickness, 1) + \"px solid\" : \"\",\n          borderColor: curCategory.bordercolor || curCategory.labelbordercolor ? (0, _lib.convertColor)(curCategory.bordercolor || curCategory.labelbordercolor, (0, _lib.pluckNumber)(curCategory.borderalpha, curCategory.labelborderalpha, curCategory.alpha, curCategory.labelalpha, 100)) : _lib.BLANKSTRING,\n          borderThickness: (0, _lib.pluckNumber)(curCategory.borderthickness, curCategory.labelborderthickness),\n          borderPadding: (0, _lib.pluckNumber)(curCategory.borderpadding, curCategory.labelborderpadding),\n          borderRadius: (0, _lib.pluckNumber)(curCategory.borderradius, curCategory.labelborderradius),\n          backgroundColor: curCategory.bgcolor || curCategory.labelbgcolor ? (0, _lib.convertColor)(curCategory.bgcolor || curCategory.labelbgcolor, (0, _lib.pluckNumber)(curCategory.bgalpha, curCategory.labelbgalpha, curCategory.alpha, curCategory.labelalpha, axisConfig.rawAttr.labelAlpha, 100)) : _lib.BLANKSTRING,\n          borderDash: (0, _lib.pluckNumber)(curCategory.borderdashed, curCategory.labelborderdashed, 0) ? (0, _lib.getDashStyle)((0, _lib.pluckNumber)(curCategory.borderdashlen, curCategory.labelborderdashlen, 4), (0, _lib.pluckNumber)(curCategory.borderdashgap, curCategory.labelborderdashgap, 2)) : (0, _lib.pluckNumber)(curCategory.borderdashed, curCategory.labelborderdashed) === 0 ? _lib.DASH_DEF : style.borderDash\n        };\n\n        if (!curCategory.label) {\n          axisAttrObj[\"text-bound\"] = [];\n        } else {\n          axisAttrObj[\"text-bound\"] = [(0, _lib.pluck)(labelBox.backgroundColor, style.backgroundColor), (0, _lib.pluck)(labelBox.borderColor, style.borderColor), (0, _lib.pluck)(labelBox.borderThickness, style.borderThickness), (0, _lib.pluck)(labelBox.borderPadding, style.borderPadding), (0, _lib.pluck)(labelBox.borderRadius, style.borderRadius), (0, _lib.pluck)(labelBox.borderDash, style.borderDash)];\n        }\n\n        if (labels.shiftX) {\n          axisAttrObj.x += labels.shiftX;\n        }\n\n        if (labels.shiftY) {\n          axisAttrObj.y += labels.shiftY;\n        }\n\n        axisAttrObj.transform = (0, _lib.getSuggestiveRotation)(labelRotation, axisAttrObj.x, axisAttrObj.y);\n        labelStore[curCategoryIndex] = labelStore[curCategoryIndex] || {\n          config: {\n            props: {\n              label: {}\n            }\n          }\n        };\n        labelStore[curCategoryIndex].config.props.label.attr = axisAttrObj;\n        labelStore[curCategoryIndex].config.props.label.css = css;\n      }\n    }\n  };\n\n  _proto.allocatePosition = function allocatePosition() {\n    var axis = this,\n        axisConfig = axis.config;\n\n    if (!axisConfig.tickValues) {\n      axisConfig.drawLabels && axis._parseLabel();\n    } else {\n      axisConfig.drawLabels && axis._parseCategory();\n    }\n  };\n\n  _proto._drawCategory = function _drawCategory() {\n    var axis = this,\n        axisConfig = axis.config,\n        chart = axis.getFromEnv(\"chart\"),\n        chartConfig = chart.config,\n        labels = axisConfig.labels,\n        animationManager = axis.getFromEnv(\"animationManager\"),\n        style = labels.style,\n        toolTipController = this.getFromEnv(\"toolTipController\"),\n        axisContainer = axisConfig.axisContainer,\n        categoryLabel = axis.config.categoryLabel || (axis.config.categoryLabel = []),\n        raiseEvent = function raiseEvent(event) {\n      return function (data) {\n        var ele = this;\n        chart.plotEventHandler(ele, data, event);\n      };\n    },\n        tickArr = axisConfig.tickValues.tickValue,\n        i,\n        curCategory,\n        textElement,\n        axisAttrObj,\n        diff,\n        curCategoryValue,\n        categoryArr,\n        categoryArrStr = [],\n        tempEle,\n        ln,\n        config,\n        removingElement,\n        curCategoryIndex;\n\n    if (axisConfig.labels.isDraw) {\n      axisContainer.css(axisConfig.ParentCss);\n      categoryArr = axis._getCategoryArr();\n      diff = (0, _differenceWith.default)(function (prev, now) {\n        return prev.value === now.value;\n      }, axisConfig.prevCategoryIntervalArr, categoryArr);\n\n      for (i = 0, ln = diff.length; i < ln; i++) {\n        removingElement = axis.getGraphicalElement(\"\" + diff[i].value + LABEL_ID);\n\n        if (removingElement) {\n          axis.removeGraphicalElement(removingElement);\n        }\n      }\n\n      axisConfig.prevCategoryIntervalArr = (0, _lib.extend2)([], categoryArr);\n\n      for (i = 0, ln = categoryArr.length; i < ln; i += 1) {\n        categoryArrStr[i] = \"\" + categoryArr[i].value + LABEL_ID;\n      }\n\n      for (i = 0, ln = categoryArr.length; i < ln; i += 1) {\n        curCategoryIndex = categoryArr[i].index;\n        curCategory = tickArr[curCategoryIndex];\n        config = axis.components.labels[curCategoryIndex].config;\n        axisAttrObj = config.props.label.attr;\n        tempEle = axis.getGraphicalElement(categoryArrStr[i]);\n        textElement = animationManager.setAnimation({\n          el: tempEle || \"text\",\n          attr: axisAttrObj,\n          container: axisContainer,\n          data: {\n            value: curCategoryValue\n          },\n          component: axis,\n          label: \"text\",\n          css: config.props.label.css\n        });\n\n        if (!tempEle) {\n          axis.addGraphicalElement(categoryArrStr[i], textElement);\n          textElement.on(\"fc-click\", raiseEvent(\"dataLabelClick\")).hover(raiseEvent(\"dataLabelRollOver\"), raiseEvent(\"dataLabelRollOut\"));\n        }\n\n        textElement.data(EVENTARGS, {\n          link: !chartConfig.singleseries && curCategory.link || curCategory.labellink || style.labelLink,\n          text: axisAttrObj.text,\n          index: curCategoryIndex\n        });\n\n        if (curCategory.labelTooltext || textElement.abbrArr) {\n          toolTipController.enableToolTip(textElement, curCategory.labelTooltext);\n        } else {\n          toolTipController.disableToolTip(textElement);\n        }\n\n        categoryLabel[curCategoryIndex] = textElement;\n      }\n    } else {\n      for (i = 0, ln = axisConfig.prevCategoryIntervalArr.length; i < ln; i++) {\n        removingElement = axis.getGraphicalElement(\"\" + axisConfig.prevCategoryIntervalArr[i].value + LABEL_ID);\n\n        if (removingElement) {\n          axis.removeGraphicalElement(removingElement);\n        }\n      }\n    }\n  };\n\n  _proto._getCategoryArr = function _getCategoryArr() {\n    var axis = this,\n        axisConfig = axis.config,\n        isVertical = axisConfig.isVertical,\n        tempStep = 0,\n        count = 0,\n        category,\n        i,\n        max,\n        min,\n        curCategory,\n        getLimit,\n        curCategoryValue,\n        increment,\n        intervalWidth,\n        checkForLimit,\n        retArr = [];\n    category = axisConfig.tickValues.tickValue;\n    min = minimumEnquiry(category);\n    max = category ? category.length - 1 : 0;\n\n    if (isVertical) {\n      intervalWidth = Math.abs(axis.getPixel(0, queryOptions) - axis.getPixel(1, queryOptions));\n\n      if (axisConfig.labelMaxH > intervalWidth) {\n        tempStep = Math.ceil(axisConfig.labelMaxH / intervalWidth);\n      }\n\n      if (tempStep > axisConfig.labels.step) {\n        axisConfig.labels.step = tempStep;\n      }\n    }\n\n    increment = axisConfig.labels.step > 0 ? axisConfig.labels.step : 1;\n    checkForLimit = axis.getZoom() !== 1;\n    getLimit = this.getVisibleConfig();\n\n    for (i = min; i <= max; i += increment) {\n      curCategory = category[i];\n\n      if (!curCategory) {\n        continue;\n      }\n\n      curCategoryValue = (0, _lib.pluckNumber)(curCategory.x, curCategory.y, i);\n\n      if ((0, _lib.pluckNumber)(curCategory.showlabel, axisConfig.showLabels, 1) === 0) {\n        continue;\n      }\n\n      if (checkForLimit && (curCategoryValue < getLimit.minValue || curCategoryValue > getLimit.maxValue)) {\n        curCategory.labelCount = count++;\n        continue;\n      }\n\n      if ((axisConfig.xAxisLabelMode === \"auto\" || axisConfig.xAxisLabelMode === \"mixed\") && (axisConfig.showZeroPlane === 0 || axisConfig.showZeroPlaneValue === 0) && curCategoryValue === 0) {\n        continue;\n      }\n\n      if (!axisConfig.labels.drawNormalVal && !(axisConfig.labels.drawLimitVal && (i === min || i === max))) {\n        continue;\n      }\n\n      if (!axisConfig.labels.drawNormalVal && !(i === min || i === max)) {\n        continue;\n      }\n\n      if (!axisConfig.labels.drawLimitVal && (i === min || i === max)) {\n        continue;\n      }\n\n      curCategory.labelCount = count++;\n      retArr.push({\n        index: i,\n        value: curCategoryValue\n      });\n    }\n\n    return retArr;\n  };\n\n  _proto.getValue = function getValue(pixel, options) {\n    if (options === void 0) {\n      options = {\n        wrtVisible: false\n      };\n    }\n\n    var scale = this.getScale(),\n        translateValue = this.getTranslation(),\n        domainValue = scale.getDomainValue(options.wrtVisible ? pixel : pixel - translateValue);\n    return domainValue;\n  };\n\n  _proto.getPixel = function getPixel(value, options) {\n    if (options === void 0) {\n      options = {\n        wrtVisible: false\n      };\n    }\n\n    var scale = this.getScale(),\n        translateValue = this.getTranslation(),\n        rangeValue = scale.getRangeValue(value);\n    return options.wrtVisible ? rangeValue : rangeValue + translateValue;\n  };\n\n  _proto._getCustomPixel = function _getCustomPixel(value, length, options) {\n    if (options === void 0) {\n      options = {\n        wrtVisible: false\n      };\n    }\n\n    if (!length) {\n      return this.getPixel(value, options);\n    }\n\n    var newScale = this.getScale().copy(),\n        _newScale$getRange = newScale.getRange(),\n        val1 = _newScale$getRange[0],\n        val2 = _newScale$getRange[1],\n        min = Math.min(val1, val2),\n        rangeValue = newScale.getRangeValue(value),\n        translateValue = this.getTranslation();\n\n    newScale.setRange([min, min + length]);\n    return options.wrtVisible ? rangeValue : rangeValue + translateValue;\n  };\n\n  _proto.getTranslation = function getTranslation() {\n    return this.config.translation || 0;\n  };\n\n  _proto.setVisibleConfig = function setVisibleConfig(minValue, maxValue) {\n    var axis = this,\n        axisConfig = axis.config,\n        prevZoom = axis.getZoom(),\n        scale = axis.getScale(),\n        domain;\n\n    if (minValue >= maxValue || minValue < axisConfig.axisRange.min || maxValue > axisConfig.axisRange.max) {\n      return false;\n    }\n\n    domain = scale.setDomain([minValue, maxValue]).getDomain();\n    axisConfig.visibleMin = domain[0];\n    axisConfig.visibleMax = domain[1];\n    axisConfig.zoom = axis._computeZoom();\n    axisConfig.translation = axis._computeTranslation();\n\n    if (prevZoom !== 1 || axis.getZoom() !== 1) {\n      axisConfig.ticks = axis.generateTicks();\n      axisConfig.minorTicks = axis.generateMinorTicks();\n      axisConfig.tickValues && axis.calculateTicksOnLabelMode && axis.calculateTicksOnLabelMode();\n    }\n\n    axis.clearReferenceInfo();\n\n    axis._parseReferenceVisuals();\n\n    axis.fireEvent(\"visiblerangeset\", {\n      minValue: minValue,\n      maxValue: maxValue\n    });\n    axis.asyncDraw();\n    return true;\n  };\n\n  _proto.hide = function hide() {\n    var axis = this,\n        axisConfig = axis.config;\n\n    if (!axisConfig.axisContainer) {\n      return;\n    }\n\n    axisConfig.axisLabelContainerTop.hide();\n    axisConfig.axisContainer.hide();\n    axisConfig.axisNameContainer.hide();\n    axisConfig.axisTrendLabelContainer.hide();\n    axisConfig.axisAxisLineContainer.hide();\n    axisConfig.axisAxisLineContainerBottom.hide();\n  };\n\n  _proto.show = function show() {\n    var axis = this,\n        axisConfig = axis.config;\n\n    if (!axisConfig.axisContainer) {\n      return;\n    }\n\n    axisConfig.axisLabelContainerTop.show();\n    axisConfig.axisContainer.show();\n    axisConfig.axisNameContainer.show();\n    axisConfig.axisTrendLabelContainer.show();\n    axisConfig.axisAxisLineContainer.show();\n    axisConfig.axisAxisLineContainerBottom.show();\n  };\n\n  _proto.getZoom = function getZoom() {\n    return this.config.zoom || 1;\n  };\n\n  _proto._computeTranslation = function _computeTranslation() {\n    var axisConfig = this.config,\n        visibleDomain = this.getVisibleConfig(),\n        visibleMin = (0, _lib.pluckNumber)(visibleDomain.minValue, axisConfig.axisRange.min, 0),\n        rangeMin = (0, _lib.pluckNumber)(axisConfig.axisRange.min, visibleDomain.minValue, 0);\n    return this.getPixel(visibleMin) - this.getPixel(rangeMin);\n  };\n\n  _proto._computeZoom = function _computeZoom() {\n    var axisConfig = this.config,\n        visibleDomain = this.getVisibleConfig(),\n        visibleMin = (0, _lib.pluckNumber)(visibleDomain.minValue, axisConfig.axisRange.min, 0),\n        visibleMax = (0, _lib.pluckNumber)(visibleDomain.maxValue, axisConfig.axisRange.max, 1),\n        rangeMin = (0, _lib.pluckNumber)(axisConfig.axisRange.min, visibleDomain.minValue, 0),\n        rangeMax = (0, _lib.pluckNumber)(axisConfig.axisRange.max, visibleDomain.maxValue, 1),\n        zoomLimit = axisConfig.maxZoomLimit,\n        zoom = (rangeMax - rangeMin) / (visibleMax - visibleMin);\n    return zoom > zoomLimit ? zoomLimit : zoom;\n  };\n\n  _proto.getTickValues = function getTickValues() {\n    var tickInfo = this.config.tickValues;\n    return tickInfo && tickInfo.tickValue || [];\n  };\n\n  _proto.dataLabels = function dataLabels(value) {\n    var axis = this,\n        axisIndex = axis.config.axisIndex,\n        numberFormatter = axis.getFromEnv(\"number-formatter\");\n    return numberFormatter.dataLabels(value, axisIndex);\n  };\n\n  _proto.getAxisBase = function getAxisBase() {\n    var _this$getVisibleConfi = this.getVisibleConfig(),\n        minValue = _this$getVisibleConfi.minValue,\n        maxValue = _this$getVisibleConfi.maxValue;\n\n    return minValue < 0 && maxValue > 0 ? 0 : maxValue <= 0 ? maxValue : minValue;\n  };\n\n  _proto._parseReferenceVisuals = function _parseReferenceVisuals() {\n    var axis = this,\n        axisConfig = axis.config,\n        tickValues = axis.getTickValues(),\n        min = 0,\n        max = tickValues.length,\n        is3d = axis.getFromEnv(\"chartConfig\").is3D,\n        preLineDrawState,\n        preBandDrawState;\n\n    if (!axisConfig.isActive) {\n      preLineDrawState = axisConfig.lines.isDraw;\n      preBandDrawState = axisConfig.band.isDraw;\n      axisConfig.lines.isDraw = 0;\n      axisConfig.band.isDraw = 0;\n    }\n\n    if (!axisConfig.tickValues) {\n      axisConfig.drawPlotlines && axis._parsePlotLine();\n    } else {\n      axisConfig.drawLabels && axis._parseCategoryLine(tickValues, min, max);\n    }\n\n    if (!axisConfig.tickValues || axisConfig.xAxisLabelMode === \"auto\") {\n      axisConfig.drawPlotBands && !is3d && axis._parsePlotBand();\n    } else {\n      axisConfig.drawPlotlines && !is3d && axis._parseCategoryPlotLine();\n      axisConfig.drawPlotBands && !is3d && axis._parseCategoryPlotBand();\n\n      if (axisConfig.xAxisLabelMode === \"mixed\") {\n        axisConfig.drawPlotBands && !is3d && axis._parsePlotBand();\n      }\n    }\n\n    if (!axisConfig.isActive) {\n      axisConfig.lines.isDraw = preLineDrawState;\n      axisConfig.band.isDraw = preBandDrawState;\n    }\n\n    axisConfig.drawTrendLines && axis._parseTrendLine();\n  };\n\n  _proto._parseCategoryPlotBand = function _parseCategoryPlotBand() {\n    var axis = this,\n        axisConfig = axis.config,\n        tickValue = axisConfig.tickValues.tickValue,\n        showAlternateGridColor = axisConfig.showAlternateGridColor,\n        alternateGridColor = axisConfig.alternateGridColor,\n        alternateGridAlpha = axisConfig.alternateGridAlpha,\n        ticks = axisConfig._allTicks,\n        limit = axis.getLimit(),\n        min = limit.min,\n        max = limit.max,\n        axisAttrObj,\n        colorDetector,\n        from,\n        to,\n        willDraw = isVisible(axis.getVisibleConfig()),\n        i;\n\n    if (tickValue[0] && (tickValue[0].x !== _lib.UNDEF || tickValue[0].y !== _lib.UNDEF)) {\n      return;\n    }\n\n    if (showAlternateGridColor && axisConfig.band.isDraw && axisConfig.categoryNumDivLines) {\n      axisAttrObj = {\n        fill: (0, _lib.toRaphaelColor)((0, _lib.convertColor)(alternateGridColor, alternateGridAlpha)),\n        \"stroke-width\": 0\n      };\n      colorDetector = 0;\n\n      for (i = 0; i < ticks.length; ++colorDetector, ++i) {\n        if (!willDraw(ticks[i], ticks[i + 1])) {\n          continue;\n        }\n\n        from = ticks[i];\n\n        if (colorDetector % 2 !== 0) {\n          continue;\n        }\n\n        to = ticks[i + 1];\n\n        if (to === _lib.UNDEF) {\n          continue;\n        }\n\n        if (from === min) from = \"canvasStart\";\n        if (to === max) to = \"canvasEnd\";\n        axis.setReferenceInfo({\n          from: from,\n          to: to,\n          layer: 0,\n          type: \"band\",\n          attr: axisAttrObj\n        });\n      }\n    }\n  };\n\n  _proto._parseTrendLine = function _parseTrendLine() {\n    var axis = this,\n        axisConfig = axis.config,\n        isVertical = axisConfig.isVertical,\n        axisIndex = axisConfig.axisIndex,\n        chartAttr = axis.getFromEnv(\"chart-attrib\"),\n        numberFormatter = axis.getFromEnv(\"number-formatter\"),\n        axisRange = axisConfig.axisRange,\n        max = axisRange.max,\n        min = axisRange.min,\n        style = axisConfig.trend.trendStyle,\n        css = {\n      fontFamily: style.fontFamily,\n      fontSize: style.fontSize,\n      lineHeight: style.lineHeight,\n      fontWeight: style.fontWeight,\n      fontStyle: style.fontStyle\n    },\n        vtrendlines = axisConfig.vTrendLines,\n        trendlines = axisConfig.trendLines,\n        i,\n        iLim,\n        j,\n        jLen,\n        toolText,\n        showOnTop,\n        counter = 0,\n        comTrendLines,\n        isTrendZone,\n        axisDrawingAttrObj,\n        axisTextAttrObj,\n        trendObj,\n        text,\n        valueOnRight,\n        startValue,\n        endValue,\n        strokeWidth,\n        NFMethodName,\n        from,\n        type,\n        to;\n    comTrendLines = trendlines || vtrendlines;\n\n    if (comTrendLines) {\n      for (j = 0, jLen = comTrendLines.length; j < jLen; j += 1) {\n        for (i = 0, iLim = comTrendLines[j].line && comTrendLines[j].line.length; i < iLim; i += 1) {\n          trendObj = comTrendLines[j].line[i];\n          NFMethodName = axisConfig.isPercent ? \"yAxisPercentValue\" : isVertical ? \"yAxis\" : \"xAxis\";\n          startValue = trendObj.startvalue || trendObj.value || 0;\n          startValue = numberFormatter.getCleanValue((0, _lib.pluck)(trendObj.startvalue, trendObj.value, 0));\n          endValue = isNaN(trendObj.endvalue) || trendObj.endvalue === \"\" ? _lib.UNDEF : trendObj.endvalue;\n          toolText = (0, _lib.getValidValue)((0, _lib.parseUnsafeString)((0, _lib.pluck)(comTrendLines[j].line[i].tooltext, comTrendLines[0].tooltext, axisConfig.trendlineToolText), false));\n          toolText = (0, _lib.parseTooltext)(toolText, [7, 15, 16, 17, 18, 19], {\n            startValue: startValue,\n            startDataValue: numberFormatter[NFMethodName](startValue, axisIndex),\n            endValue: endValue || startValue,\n            endDataValue: numberFormatter[NFMethodName](endValue || startValue, axisIndex),\n            axisName: axisConfig.axisName\n          }, trendObj);\n\n          if (startValue > max || startValue < min || endValue > max || endValue < min) {\n            continue;\n          }\n\n          if (vtrendlines) {\n            text = (0, _lib.parseUnsafeString)(trendObj.displayvalue || \"\");\n            isTrendZone = (0, _lib.pluckNumber)(trendObj.istrendzone, axisConfig.isTrendZone, 1);\n\n            if (endValue !== _lib.UNDEF && endValue !== \"\" && endValue !== startValue && isTrendZone) {\n              axisDrawingAttrObj = {\n                fill: (0, _lib.convertColor)((0, _lib.pluck)(trendObj.color, axisConfig.trendlineColor), (0, _lib.pluck)(trendObj.alpha, axisConfig.trendlineAlpha, 40)),\n                \"stroke-width\": 0\n              };\n              axisTextAttrObj = {\n                fill: (0, _lib.convertColor)((0, _lib.pluck)(trendObj.color, style.color), (0, _lib.pluck)(trendObj.valuealpha, chartAttr.trendvaluealpha, trendObj.alpha, axisConfig.trendlineAlpha, 99)),\n                \"vertical-align\": _lib.POSITION_TOP,\n                text: text\n              };\n            } else {\n              strokeWidth = (0, _lib.pluckNumber)(trendObj.thickness, axisConfig.trendlineThickness, 1);\n              axisDrawingAttrObj = {\n                stroke: (0, _lib.convertColor)((0, _lib.pluck)(trendObj.color, axisConfig.trendlineColor), (0, _lib.pluck)(trendObj.alpha, axisConfig.trendlineAlpha, 99)),\n                \"stroke-width\": strokeWidth,\n                \"stroke-dasharray\": (0, _lib.pluck)(trendObj.dashed, axisConfig.trendlinesAreDashed) === _lib.ONESTRING ? (0, _lib.getDashStyle)((0, _lib.pluckNumber)(trendObj.dashlen, axisConfig.trendlinesDashLen), (0, _lib.pluckNumber)(trendObj.dashgap, axisConfig.trendlinesDashGap)) : _lib.DASH_DEF\n              };\n              axisTextAttrObj = {\n                fill: (0, _lib.convertColor)((0, _lib.pluck)(trendObj.color, style.color), (0, _lib.pluck)(trendObj.valuealpha, chartAttr.trendvaluealpha, trendObj.alpha, axisConfig.trendlineAlpha, 99)),\n                \"vertical-align\": _lib.POSITION_TOP,\n                text: text\n              };\n            }\n          } else if (trendlines) {\n            text = (0, _lib.pluck)((0, _lib.parseUnsafeString)(trendObj.displayvalue), trendObj.startvalue, \"\");\n            valueOnRight = (0, _lib.pluckNumber)(trendObj.valueonright, axisConfig.isOpposit ? 1 : 0);\n            isTrendZone = (0, _lib.pluckNumber)(trendObj.istrendzone, axisConfig.isTrendZone, 0);\n\n            if (endValue !== _lib.UNDEF && endValue !== \"\" && endValue !== startValue && isTrendZone) {\n              axisDrawingAttrObj = {\n                fill: (0, _lib.convertColor)((0, _lib.pluck)(trendObj.color, axisConfig.trendlineColor), (0, _lib.pluck)(trendObj.alpha, axisConfig.trendlineAlpha, 40)),\n                \"stroke-width\": 0\n              };\n              axisTextAttrObj = {\n                \"text-anchor\": valueOnRight ? _lib.POSITION_START : _lib.POSITION_END,\n                fill: (0, _lib.convertColor)((0, _lib.pluck)(trendObj.color, style.color), (0, _lib.pluck)(trendObj.valuealpha, chartAttr.trendvaluealpha, trendObj.alpha, axisConfig.trendlineAlpha, 99)),\n                text: text\n              };\n            } else {\n              strokeWidth = (0, _lib.pluckNumber)(trendObj.thickness, axisConfig.trendlineThickness, 1);\n              axisDrawingAttrObj = {\n                stroke: (0, _lib.convertColor)((0, _lib.pluck)(trendObj.color, axisConfig.trendlineColor), (0, _lib.pluck)(trendObj.alpha, axisConfig.trendlineAlpha, 99)),\n                \"stroke-width\": strokeWidth,\n                \"stroke-dasharray\": (0, _lib.pluck)(trendObj.dashed, axisConfig.trendlinesAreDashed) === _lib.ONESTRING ? (0, _lib.getDashStyle)((0, _lib.pluckNumber)(trendObj.dashlen, axisConfig.trendlinesDashLen), (0, _lib.pluckNumber)(trendObj.dashgap, axisConfig.trendlinesDashGap)) : _lib.DASH_DEF\n              };\n              axisTextAttrObj = {\n                \"text-anchor\": valueOnRight ? _lib.POSITION_START : _lib.POSITION_END,\n                fill: (0, _lib.convertColor)((0, _lib.pluck)(trendObj.color, style.color), (0, _lib.pluck)(trendObj.valuealpha, chartAttr.trendvaluealpha, trendObj.alpha, axisConfig.trendlineAlpha, 99)),\n                text: text\n              };\n            }\n          }\n\n          axisTextAttrObj[\"text-bound\"] = axisTextAttrObj.text ? [style.backgroundColor, style.borderColor, style.borderThickness, style.borderPadding, style.borderRadius, style.borderDash] : [];\n\n          if (!(axisConfig.showTooltip && toolText)) {\n            toolText = _lib.BLANKSTRING;\n          }\n\n          showOnTop = axisConfig.forceTrendBelow ? 0 : (0, _lib.pluckNumber)(trendObj.showontop, chartAttr.showtrendlinesontop, 0);\n\n          if (isVertical) {\n            from = startValue;\n            to = endValue !== _lib.UNDEF ? endValue : startValue;\n          } else {\n            from = endValue !== _lib.UNDEF ? endValue : startValue;\n            to = startValue;\n          }\n\n          type = isTrendZone && from !== to ? \"band\" : \"line\";\n          from !== _lib.UNDEF && axis.setReferenceInfo({\n            from: from,\n            to: to,\n            toolText: toolText,\n            attr: axisDrawingAttrObj,\n            layer: showOnTop ? 3 : 2,\n            type: type,\n            id: \"trend\" + counter + type\n          });\n          axisConfig.parsedTrendLabels.push({\n            css: css,\n            valueOnRight: valueOnRight,\n            isTrendZone: isTrendZone,\n            from: startValue,\n            to: endValue,\n            attr: axisTextAttrObj\n          });\n          counter += 1;\n        }\n      }\n    }\n  };\n\n  _proto._parsePlotLine = function _parsePlotLine() {\n    var axis = this,\n        axisConfig = axis.config,\n        axisRange = axisConfig.axisRange,\n        max = axisRange.max,\n        min = axisRange.min,\n        willDraw = isInBetween(axis.getVisibleConfig()),\n        showCanvasBorder = axisConfig.showCanvasBorder,\n        plotLineColor = (0, _lib.convertColor)(axisConfig.divLineColor, axisConfig.divLineAlpha),\n        plotLineWidth = axisConfig.divLineThickness,\n        plotLineDashStyle = axisConfig.divLineIsDashed ? (0, _lib.getDashStyle)(axisConfig.divLineDashLen, axisConfig.divLineDashGap) : _lib.DASH_DEF,\n        zeroPlaneColor = (0, _lib.convertColor)(axisConfig.zeroPlaneColor, axisConfig.zeroPlaneAlpha),\n        zeroPlaneThickness = axisConfig.zeroPlaneThickness,\n        ticks = axisConfig._allTicks,\n        len = ticks.length,\n        i,\n        j,\n        showZeroPlaneOnTop = axisConfig.showZeroPlaneOnTop,\n        minorTicksArr = axisConfig.minorTicks,\n        minorTicksLen = minorTicksArr && minorTicksArr.length,\n        minorTicks,\n        axisAttrObj,\n        minorAttrObj;\n\n    if (axisConfig.lines.isDraw) {\n      for (j = 0; j < len; ++j) {\n        i = ticks[j];\n\n        if (!willDraw(i)) {\n          continue;\n        }\n\n        axisAttrObj = {\n          \"stroke-dasharray\": plotLineDashStyle\n        };\n\n        if (axisConfig.showZeroPlane === 0 && i === 0 || showCanvasBorder && (i === max || i === min)) {\n          continue;\n        }\n\n        if (i === 0 && i !== min && i !== max) {\n          axisAttrObj.stroke = zeroPlaneColor;\n          axisAttrObj[\"stroke-width\"] = zeroPlaneThickness;\n          showZeroPlaneOnTop = axisConfig.showZeroPlaneOnTop;\n        } else {\n          showZeroPlaneOnTop = 0;\n          axisAttrObj.stroke = plotLineColor;\n          axisAttrObj[\"stroke-width\"] = plotLineWidth;\n        }\n\n        axis.setReferenceInfo({\n          type: \"line\",\n          from: i,\n          layer: i === 0 && showZeroPlaneOnTop ? 3 : 1,\n          attr: axisAttrObj\n        });\n      }\n    }\n\n    minorAttrObj = {\n      stroke: axisConfig.minorDivlinecolor,\n      \"stroke-width\": axisConfig.minorDivLineThickness,\n      \"stroke-dasharray\": plotLineDashStyle\n    };\n\n    for (j = 0; j < minorTicksLen; ++j) {\n      minorTicks = minorTicksArr[j];\n      axis.setReferenceInfo({\n        type: \"line\",\n        from: minorTicks,\n        layer: 1,\n        attr: minorAttrObj\n      });\n    }\n  };\n\n  _proto._parseCategoryLine = function _parseCategoryLine(category, _min, _max) {\n    var axis = this,\n        min = _min,\n        max = _max,\n        axisConfig = axis.config,\n        colorM = axis.getFromEnv(\"color-manager\"),\n        chartInstance = axis.getFromEnv(\"chartInstance\"),\n        categories = chartInstance.getJSONData().categories,\n        categoriesStyle = {},\n        i,\n        curCategory,\n        getLimit,\n        categoryLineAttr,\n        curCategoryValue,\n        checkForLimit;\n    min = min || 0;\n    max = max || category ? category.length - 1 : 0;\n\n    if (axisConfig.drawPlotlines) {\n      checkForLimit = axis.getZoom() !== 1;\n      getLimit = this.getVisibleConfig();\n\n      if (categories && categories[0]) {\n        categoriesStyle.verticalLineColor = categories[0].verticallinecolor;\n        categoriesStyle.verticalLineAlpha = categories[0].verticallinealpha;\n        categoriesStyle.verticalLineThickness = categories[0].verticallinethickness;\n        categoriesStyle.verticalLineDashed = categories[0].verticallinedashed;\n        categoriesStyle.verticalLineDashLen = categories[0].verticallinedashlen;\n        categoriesStyle.verticalLineDashGap = categories[0].verticallinedashgap;\n      }\n\n      for (i = min; i <= max; i += 1) {\n        curCategory = category[i];\n\n        if (!curCategory) {\n          continue;\n        }\n\n        curCategoryValue = (0, _lib.pluckNumber)(curCategory.x, curCategory.y, i);\n\n        if (Number(curCategory.showverticalline) !== 1) {\n          continue;\n        }\n\n        if (checkForLimit && (curCategoryValue < getLimit.minValue || curCategoryValue > getLimit.maxValue)) {\n          continue;\n        }\n\n        categoryLineAttr = {\n          stroke: (0, _lib.convertColor)((0, _lib.pluck)(curCategory.linecolor, categoriesStyle.verticalLineColor, axisConfig.divLineColor, colorM.getColor(\"divLineColor\")), (0, _lib.pluck)(curCategory.linealpha, categoriesStyle.verticalLineAlpha, colorM.getColor(\"divLineAlpha\"))),\n          \"stroke-width\": (0, _lib.pluckNumber)(curCategory.linethickness, categoriesStyle.verticalLineThickness, 1)\n        };\n        categoryLineAttr[\"stroke-dasharray\"] = (0, _lib.pluckNumber)(curCategory.linedashed, categoriesStyle.verticalLineDashed, 0) ? (0, _lib.getDashStyle)((0, _lib.pluckNumber)(curCategory.linedashLen, categoriesStyle.verticalLineDashLen, 4), (0, _lib.pluckNumber)(curCategory.linedashgap, categoriesStyle.verticalLineDashGap, 2), categoryLineAttr[\"stroke-width\"]) : _lib.DASH_DEF;\n        axis.setReferenceInfo({\n          type: \"line\",\n          from: curCategoryValue,\n          layer: 1,\n          attr: categoryLineAttr\n        });\n      }\n    }\n  };\n\n  _proto._parsePlotBand = function _parsePlotBand() {\n    var axis = this,\n        axisConfig = axis.config,\n        showAlternateGridColor = axisConfig.showAlternateGridColor,\n        alternateGridColor = axisConfig.alternateGridColor,\n        alternateGridAlpha = axisConfig.alternateGridAlpha,\n        axisAttrObj,\n        colorDetector,\n        ticks = axisConfig._allTicks,\n        len,\n        willDraw = isVisible(axis.getVisibleConfig()),\n        i,\n        to,\n        isReverse = axisConfig.isReverse,\n        from;\n\n    if (showAlternateGridColor && axisConfig.band.isDraw) {\n      colorDetector = 1;\n      axisAttrObj = {\n        fill: (0, _lib.toRaphaelColor)((0, _lib.convertColor)(alternateGridColor, alternateGridAlpha)),\n        \"stroke-width\": 0\n      };\n\n      for (i = 0, len = ticks.length; i < len; ++i, ++colorDetector) {\n        if (!willDraw(ticks[i], ticks[i + 1])) {\n          continue;\n        }\n\n        if (colorDetector % 2 !== 0) {\n          continue;\n        }\n\n        if (ticks[i + 1] === _lib.UNDEF) {\n          continue;\n        }\n\n        from = isReverse ? Math.max(ticks[i], ticks[i + 1]) : Math.min(ticks[i], ticks[i + 1]);\n        to = isReverse ? Math.min(ticks[i], ticks[i + 1]) : Math.max(ticks[i], ticks[i + 1]);\n        axis.setReferenceInfo({\n          from: from,\n          to: to,\n          type: \"band\",\n          layer: 0,\n          attr: axisAttrObj\n        });\n      }\n    }\n  };\n\n  _proto.getReferenceInfo = function getReferenceInfo() {\n    return this.config.referenceInfo;\n  };\n\n  _proto.setReferenceInfo = function setReferenceInfo(info) {\n    this.config.referenceInfo.push(info);\n  };\n\n  _proto.clearReferenceInfo = function clearReferenceInfo() {\n    var axisConfig = this.config;\n    axisConfig.referenceInfo = [];\n    axisConfig.parsedTrendLabels = [];\n    axisConfig.parsedVlineInfo = [];\n  };\n\n  _proto.resetStoredLimits = function resetStoredLimits() {\n    this.config.dataLimit = {};\n  };\n\n  _proto.getAxisDimension = function getAxisDimension() {\n    var _this$config$axisDime = this.config.axisDimention,\n        x = _this$config$axisDime.x,\n        y = _this$config$axisDime.y,\n        opposite = _this$config$axisDime.opposite,\n        axisLength = _this$config$axisDime.axisLength;\n    return {\n      x: x,\n      y: y,\n      opposite: opposite,\n      axisLength: axisLength\n    };\n  };\n\n  return Cartesian;\n}(_axis.default);\n\nCartesian.prototype.setAxisDimention = _commonApi.setAxisDimention;\nCartesian.prototype.shiftLabels = _commonApi.shiftLabels;\nCartesian.prototype._createContainer = _commonApi._createContainer;\nvar _default = Cartesian;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/core/src/axis/cartesian.js"],"names":["_interopRequireDefault","require","exports","__esModule","minimumEnquiry","getCrispPath","default","_inheritsLoose2","_axis","_lib","_cartesianAxis","_diff","_differenceWith","_dependencyManager","_commonApi","CRISP","BUTT","EVENTARGS","TREND_ID","TICK_ID","LABEL_ID","ROTATE_STR","AXIS_LINE","path","width","isCrisped","oddWidth","value","roundValue","Math","round","isVisible","visibleRange","min","max","minValue","maxValue","isInBetween","val","queryOptions","wrtVisible","category","i","len","length","label","oriLabel","getAxisNamePaddingOffset","axisConfig","chartConfig","axisNamePaddingOffset","relativeAxis","config","axisNamePadding","isOpposit","canvasMarginRight","marginLeft","nameMaxW","canvasMarginLeft","marginRight","addDep","name","type","extension","Cartesian","_Axis","_this","call","referenceInfo","prevTicks","prevIntervalArr","prevTrendLabels","prevCategoryIntervalArr","_proto","prototype","placeAxis","maxLimit","axis","scale","getScale","chart","getFromEnv","isVertical","isReverse","dataLabelStyle","nameStyle","style","trendStyle","trend","labelStyle","labels","parsedTrendLabels","parsedVLineInfo","parsedVlineInfo","fontSize","computeFontSize","fontSizeWithUnit","lineHeight","setLineHeight","forEach","trendLabel","css","vLine","text","inCanfontSize","inCanLineHeight","setRange","canvasBottom","canvasTop","_placeVerticalAxis","canvasRight","canvasLeft","_placeHorizontalAxis","_maxWidth","maxWidth","smartLabel","axisRange","minLabelWidthPercent","axisNameData","numberFormatter","canvasHeight","axisValuePadding","labelPadding","pluckNumber","rawAttr","useEllipsesWhenOverflow","axisName","trendlines","trendLines","drawLabelsOpposit","drawAxisNameOpposit","j","jLen","axisLabelWidth","counter","trendLabelConfig","labelWidth","nameWidth","trendLeftWidth","trendRightWidth","retObj","left","right","maxLeftTrendValue","BLANKSTRING","maxRightTrendValue","reserveNameHeight","numberFormatterFn","axisSmartName","axisSmartTrendValue","trendTextFromValue","minLabelWidth","dimention","iLim","trendObj","valueOnRight","axisLineThickness","startTValue","endTValue","oriCanvasHeight","drawTick","tickLength","showAxisLine","rotation","step","labelStep","isDraw","drawNormalVal","showDivLineValues","drawLimitVal","showLimits","Number","replace","drawLabels","_getVMaxLabelDimention","height","tickValues","labelMaxW","labelMaxH","drawTrendLines","drawTrendLabels","isPercent","percentValue","yAxis","xAxis","useEllipsesOnOverflow","setStyle","fontFamily","fontWeight","line","getCleanValue","pluck","startvalue","endvalue","valueonright","parseUnsafeString","origText","displayvalue","getOriSize","getSmartText","attr","tooltext","valueToolText","drawAxisName","rotateAxisName","nameMaxH","axisNameWidth","_maxHeight","maxHeight","axisLabelHeight","canvasWidth","vtrendlines","vTrendLines","labelHeight","nameHeight","top","bottom","trendMaxHeight","heightLeft","trendHeight","rotateLabels","labelDisplay","_getHMaxLabelDimention","isActive","trendBottomPadding","_parseCategoryPlotLine","tickValue","plotLineColor","convertColor","divLineColor","divLineAlpha","plotLineWidth","divLineThickness","plotLineDashStyle","divLineIsDashed","getDashStyle","divLineDashLen","divLineDashGap","DASH_DEF","axisAttrObj","willDraw","getVisibleConfig","ticks","_allTicks","stroke","x","UNDEF","y","lines","categoryNumDivLines","setReferenceInfo","from","layer","_drawComponents","_drawAxisName","drawAxisLine","_drawAxisLine","_drawLabel","_drawCategory","drawTrendLabel","trendLabelConfigs","animationManager","toolTipController","container","axisTrendLabelContainer","isOpposite","axisPadding","axisDimension","axisDimention","visibleDomain","visibleMin","visibleMax","trendLabelElement","fixedTrendLabelPos","fixedTrendLabelPosRight","isTrendZone","startValue","midValue","endValue","_isVisible","startValuePixel","endValuePixel","removingElement","diff","isEndValDefined","ii","id","opposite","prev","now","getGraphicalElement","removeGraphicalElement","extend2","to","isNaN","getPixel","addGraphicalElement","setAnimation","el","data","component","showTooltip","enableToolTip","disableToolTip","canvasDimensions","getLinkedItem","getEffectiveDimensions","axisNameContainer","axisNameMaxH","axisNameMaxW","axisStart","axisOpposite","axisNameElement","paper","fontStyle","nameHeightAvail","yPos","fill","color","axisNameAlignCanvas","captionalignment","drawAxisNameFromBottom","canvasMarginTop","marginTop","canvasMarginBottom","marginBottom","backgroundColor","borderColor","borderThickness","borderPadding","borderRadius","borderDash","transform","getSuggestiveRotation","axisStartPosition","drawAxisLineWRTCanvas","chartJSON","axisLineGroup","axisAxisLineContainerBottom","tickAttrObj","axisLineElementCheck","axisLineElement","linePath","xAxisLineLeftExten","fixPoint","tickEndPoint","pixelValue","axisLineAttrObj","tickElement","tickElementCheck","tick","tickId","drawElemIds","crispPath","ln","showyaxisline","yaxislinethickness","pyaxislinethickness","axisLineColor","tickColor","tickWidth","map","tickObj","push","_parseCategory","axisComponents","components","labelStore","axisEndPosition","categories","categoriesStyle","tickArr","curCategory","labelRotation","labelLineHeight","labelLineHeightpx","addCategoryPadding","categoryStyleFontFamily","categoryStyleFontSize","categoryStyleFontWeight","categoryStyleFontStyle","ParentCss","fontColor","pos","curCategoryValue","labelBox","categoryArr","tempStep","staggerLineAvailed","staggerLines","drawnStaggerLines","isUnevenLabels","getZoom","categoryPadding","staggerLabelWidth","intervalWidth","smartLabelText","axisXPadding","curCategoryIndex","abs","tickInterval","ceil","sWidthAdjstFactor","xAxisLabelMode","font","fontsize","fontcolor","PXSTRING","_getCategoryArr","labelIndexArr","index","labelfont","labelfontsize","fontbold","labelfontbold","NORMAL","fontitalic","labelfontitalic","labelfontcolor","labelalpha","labelAlpha","singleseries","alpha","indexOf","parseFloat","appliedSmartLabel","_ovrStyle","labelTooltext","opacity","POSITION_START","POSITION_END","cursor","link","labellink","labelLink","POINTER","POSITION_MIDDLE","POSITION_BOTTOM","POSITION_TOP","labelCount","border","borderthickness","labelborderthickness","bordercolor","labelbordercolor","borderalpha","labelborderalpha","borderpadding","labelborderpadding","borderradius","labelborderradius","bgcolor","labelbgcolor","bgalpha","labelbgalpha","borderdashed","labelborderdashed","borderdashlen","labelborderdashlen","borderdashgap","labelborderdashgap","shiftX","shiftY","props","allocatePosition","_parseLabel","axisContainer","categoryLabel","raiseEvent","event","ele","plotEventHandler","textElement","categoryArrStr","tempEle","on","hover","abbrArr","count","getLimit","increment","checkForLimit","retArr","showlabel","showLabels","showZeroPlane","showZeroPlaneValue","getValue","pixel","options","translateValue","getTranslation","domainValue","getDomainValue","rangeValue","getRangeValue","_getCustomPixel","newScale","copy","_newScale$getRange","getRange","val1","val2","translation","setVisibleConfig","prevZoom","domain","setDomain","getDomain","zoom","_computeZoom","_computeTranslation","generateTicks","minorTicks","generateMinorTicks","calculateTicksOnLabelMode","clearReferenceInfo","_parseReferenceVisuals","fireEvent","asyncDraw","hide","axisLabelContainerTop","axisAxisLineContainer","show","rangeMin","rangeMax","zoomLimit","maxZoomLimit","getTickValues","tickInfo","dataLabels","axisIndex","getAxisBase","_this$getVisibleConfi","is3d","is3D","preLineDrawState","preBandDrawState","band","drawPlotlines","_parsePlotLine","_parseCategoryLine","drawPlotBands","_parsePlotBand","_parseCategoryPlotBand","_parseTrendLine","showAlternateGridColor","alternateGridColor","alternateGridAlpha","limit","colorDetector","toRaphaelColor","chartAttr","toolText","showOnTop","comTrendLines","axisDrawingAttrObj","axisTextAttrObj","strokeWidth","NFMethodName","getValidValue","trendlineToolText","parseTooltext","startDataValue","endDataValue","istrendzone","trendlineColor","trendlineAlpha","valuealpha","trendvaluealpha","thickness","trendlineThickness","dashed","trendlinesAreDashed","ONESTRING","dashlen","trendlinesDashLen","dashgap","trendlinesDashGap","forceTrendBelow","showontop","showtrendlinesontop","showCanvasBorder","zeroPlaneColor","zeroPlaneAlpha","zeroPlaneThickness","showZeroPlaneOnTop","minorTicksArr","minorTicksLen","minorAttrObj","minorDivlinecolor","minorDivLineThickness","_min","_max","colorM","chartInstance","getJSONData","categoryLineAttr","verticalLineColor","verticallinecolor","verticalLineAlpha","verticallinealpha","verticalLineThickness","verticallinethickness","verticalLineDashed","verticallinedashed","verticalLineDashLen","verticallinedashlen","verticalLineDashGap","verticallinedashgap","showverticalline","linecolor","getColor","linealpha","linethickness","linedashed","linedashLen","linedashgap","getReferenceInfo","info","resetStoredLimits","dataLimit","getAxisDimension","_this$config$axisDime","axisLength","setAxisDimention","shiftLabels","_createContainer","_default"],"mappings":"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","sourcesContent":["\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.minimumEnquiry=exports.getCrispPath=exports.default=void 0;var _inheritsLoose2=_interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));var _axis=_interopRequireDefault(require(\"./axis\"));var _lib=require(\"../lib\");var _cartesianAxis=_interopRequireDefault(require(\"./cartesian-axis.animation\"));var _diff=_interopRequireDefault(require(\"@fusioncharts/utils/src/scale-utils/array/diff\"));var _differenceWith=_interopRequireDefault(require(\"ramda/src/differenceWith\"));var _dependencyManager=require(\"../dependency-manager\");var _commonApi=require(\"./common-api\");var CRISP=\"crisp\",BUTT=\"butt\",EVENTARGS=\"eventArgs\",TREND_ID=\"_trend\",TICK_ID=\"_tick\",LABEL_ID=\"_label\",ROTATE_STR=\"rotate\",AXIS_LINE=\"axisLine\",getCrispPath=function getCrispPath(path,width){var isCrisped=false,oddWidth=width%2,value,roundValue;if(path[1]===path[4]){value=path[1];roundValue=Math.round(value);path[1]=path[4]=oddWidth?roundValue>value?roundValue-.5:roundValue+.5:roundValue;isCrisped=true}if(path[2]===path[5]){value=path[2];roundValue=Math.round(value);path[2]=path[5]=oddWidth?roundValue>value?roundValue-.5:roundValue+.5:roundValue;isCrisped=true}return{path:path,isCrisped:isCrisped}},isVisible=function isVisible(visibleRange){return function(min,max){return!!(visibleRange.minValue<=min&&visibleRange.maxValue>=min||visibleRange.minValue<=max&&visibleRange.maxValue>=max)}},isInBetween=function isInBetween(visibleRange){return function(val){return!!(visibleRange.minValue<=val&&visibleRange.maxValue>=val)}},queryOptions={wrtVisible:true},minimumEnquiry=function minimumEnquiry(category){var i=0,len=category.length;for(;i<len;i++){if(category[i].label||category[i].oriLabel){return i}}};exports.minimumEnquiry=minimumEnquiry;exports.getCrispPath=getCrispPath;function getAxisNamePaddingOffset(axisConfig,chartConfig){var axisNamePaddingOffset=0;if(axisConfig.relativeAxis&&axisConfig.relativeAxis.config&&axisConfig.relativeAxis.config.axisNamePadding){axisNamePaddingOffset=Math.max(axisConfig.relativeAxis.config.axisNamePadding,axisNamePaddingOffset)}if(axisConfig.isOpposit&&chartConfig.canvasMarginRight){axisNamePaddingOffset=Math.max(axisNamePaddingOffset,chartConfig.canvasMarginRight-chartConfig.marginLeft-axisConfig.nameMaxW)}if(!axisConfig.isOpposit&&chartConfig.canvasMarginLeft){axisNamePaddingOffset=Math.max(axisNamePaddingOffset,chartConfig.canvasMarginLeft-chartConfig.marginRight-axisConfig.nameMaxW)}return axisNamePaddingOffset}(0,_dependencyManager.addDep)({name:\"cartesianAxisAnimation\",type:\"animationRule\",extension:_cartesianAxis.default});var Cartesian=function(_Axis){(0,_inheritsLoose2.default)(Cartesian,_Axis);function Cartesian(){var _this;_this=_Axis.call(this)||this;_this.config.referenceInfo=[];_this.config.prevTicks=[];_this.config.prevIntervalArr=[];_this.config.prevTrendLabels=[];_this.config.prevCategoryIntervalArr=[];return _this}var _proto=Cartesian.prototype;_proto.placeAxis=function placeAxis(maxLimit){var axis=this,scale=axis.getScale(),chart=axis.getFromEnv(\"chart\"),axisConfig=axis.config,isVertical=axisConfig.isVertical,isReverse=axisConfig.isReverse,chartConfig=chart.config,dataLabelStyle=chartConfig.dataLabelStyle,nameStyle=axisConfig.name.style,trendStyle=axisConfig.trend.trendStyle,labelStyle=axisConfig.labels.style,parsedTrendLabels=axisConfig.parsedTrendLabels||[],parsedVLineInfo=axisConfig.parsedVlineInfo||[];nameStyle.fontSize=this.computeFontSize(nameStyle.fontSizeWithUnit);nameStyle.lineHeight=(0,_lib.setLineHeight)(nameStyle);trendStyle.fontSize=this.computeFontSize(trendStyle.fontSizeWithUnit);trendStyle.lineHeight=(0,_lib.setLineHeight)(trendStyle);labelStyle.fontSize=this.computeFontSize(labelStyle.fontSizeWithUnit);labelStyle.lineHeight=(0,_lib.setLineHeight)(labelStyle);dataLabelStyle.fontSize=this.computeFontSize(dataLabelStyle.fontSizeWithUnit);(0,_lib.setLineHeight)(dataLabelStyle);parsedTrendLabels.forEach((function(trendLabel){trendLabel.css.fontSize=trendStyle.fontSize;trendLabel.css.lineHeight=trendStyle.lineHeight}));parsedVLineInfo.forEach((function(vLine){if(vLine.text){vLine.text.css.fontSize=chartConfig.style.inCanfontSize;vLine.text.css.lineHeight=chartConfig.style.inCanLineHeight}}));if(isVertical){isReverse?scale.setRange([chartConfig.canvasBottom,chartConfig.canvasTop]):scale.setRange([chartConfig.canvasTop,chartConfig.canvasBottom]);return axis._placeVerticalAxis(maxLimit)}isReverse?scale.setRange([chartConfig.canvasRight,chartConfig.canvasLeft]):scale.setRange([chartConfig.canvasLeft,chartConfig.canvasRight]);return axis._placeHorizontalAxis(maxLimit)};_proto._placeVerticalAxis=function _placeVerticalAxis(_maxWidth){var axis=this,maxWidth=_maxWidth,axisConfig=axis.config,chart=axis.getFromEnv(\"chart\"),chartConfig=chart.config,smartLabel=chart.getFromEnv(\"smartLabel\"),axisRange=axisConfig.axisRange,minLabelWidthPercent=axisConfig.minLabelWidthPercent,axisNameData=axisConfig.name,isOpposit=axisConfig.isOpposit,numberFormatter=axis.getFromEnv(\"number-formatter\"),canvasHeight=chartConfig.canvasHeight,axisValuePadding=axisConfig.labelPadding=(0,_lib.pluckNumber)(axisConfig.rawAttr.axisValuePadding,4),axisNamePadding=(0,_lib.pluckNumber)(axisConfig.rawAttr.axisNamePadding,5),useEllipsesWhenOverflow=axisConfig.useEllipsesWhenOverflow,nameStyle=axisConfig.name.style,trendStyle=axisConfig.trend.trendStyle,axisName=axisConfig.axisName,trendlines=axisConfig.trendLines,drawLabelsOpposit=axisConfig.drawLabelsOpposit,drawAxisNameOpposit=axisConfig.drawAxisNameOpposit,j,jLen,axisLabelWidth=0,counter=0,trendLabelConfig,labelWidth=0,nameWidth=0,trendLeftWidth=0,trendRightWidth=0,retObj={left:0,right:0},maxLeftTrendValue=_lib.BLANKSTRING,maxRightTrendValue=_lib.BLANKSTRING,reserveNameHeight=0,numberFormatterFn,axisSmartName,axisSmartTrendValue,trendTextFromValue,i,minLabelWidth=-1,max,min,text,dimention,iLim,trendObj,valueOnRight,axisLineThickness,startTValue,endTValue;if(minLabelWidthPercent){minLabelWidth=minLabelWidthPercent/100*chartConfig.width}axisConfig.oriCanvasHeight=canvasHeight;if(axisValuePadding<0){axisConfig.labelPadding=2}if(axisConfig.drawTick&&axisConfig.tickLength){axisLineThickness=axisConfig.axisLineThickness+axisConfig.tickLength}else{axisLineThickness=axisConfig.axisLineThickness}if(axisConfig.showAxisLine){axisConfig.labelPadding=(0,_lib.pluckNumber)(axisValuePadding,2)+axisLineThickness;if(axisConfig.labelPadding<0){axisConfig.labelPadding=(axisConfig.axisLineThickness<0?0:axisLineThickness)+2}maxWidth-=axisConfig.axisLineThickness}else{axisConfig.labelPadding=(0,_lib.pluckNumber)(axisValuePadding,2);if(axisConfig.labelPadding<0){axisConfig.labelPadding=2}}max=axisRange.max;min=axisRange.min;axisConfig.name.rotation=0;axisConfig.labels.step=axisConfig.labelStep;axisConfig.labels.isDraw=1;axisConfig.labels.drawNormalVal=axisConfig.showDivLineValues;axisConfig.labels.drawLimitVal=axisConfig.showLimits;reserveNameHeight=nameStyle.lineHeight;reserveNameHeight=Number(reserveNameHeight.replace(/px/i,\"\"));if(axisName&&reserveNameHeight<maxWidth){maxWidth-=reserveNameHeight}if(axisConfig.showLimits!==1&&axisConfig.showDivLineValues!==1){axisConfig.labels.isDraw=0}dimention=axisConfig.drawLabels?axis._getVMaxLabelDimention(maxWidth-axisConfig.labelPadding):{width:0,height:0};if(dimention.width+axisConfig.labelPadding>maxWidth&&!axisConfig.tickValues||dimention.width===0){axisConfig.labels.isDraw=0}if(axisConfig.labels.isDraw){axisConfig.labelMaxW=dimention.width>minLabelWidth?dimention.width:minLabelWidth;axisConfig.labelMaxH=dimention.height;axisLabelWidth=axisConfig.labelMaxW+axisConfig.labelPadding;labelWidth=axisLabelWidth}if(axisConfig.drawTrendLines&&axisConfig.drawTrendLabels&&trendlines&&trendlines.length){if(axisConfig.isPercent){numberFormatterFn=numberFormatter.percentValue}else if(axisConfig.isVertical){numberFormatterFn=numberFormatter.yAxis}else{numberFormatterFn=numberFormatter.xAxis}smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);smartLabel.setStyle({fontSize:trendStyle.fontSize,fontFamily:trendStyle.fontFamily,lineHeight:trendStyle.lineHeight,fontWeight:trendStyle.fontWeight});for(j=0,jLen=trendlines.length;j<jLen;j+=1){for(i=0,iLim=trendlines[j].line&&trendlines[j].line.length;i<iLim;i+=1){trendObj=trendlines[j].line[i];startTValue=numberFormatter.getCleanValue((0,_lib.pluck)(trendObj.startvalue,trendObj.value,0));endTValue=(0,_lib.pluckNumber)(trendObj.endvalue,startTValue);if(startTValue<=max&&startTValue>=min&&endTValue<=max&&endTValue>=min){valueOnRight=(0,_lib.pluckNumber)(trendObj.valueonright,isOpposit?1:0);trendTextFromValue=valueOnRight===1?trendObj.endvalue||trendObj.startvalue:trendObj.startvalue||trendObj.endvalue;text=(0,_lib.parseUnsafeString)(trendObj.origText||trendObj.displayvalue||trendTextFromValue||\"\");if(text===trendTextFromValue){text=\"\"+numberFormatterFn.call(numberFormatter,text)}if(valueOnRight){if(text.length>maxRightTrendValue.length){maxRightTrendValue=text}}else{if(text.length>maxLeftTrendValue.length){maxLeftTrendValue=text}}}}}dimention=smartLabel.getOriSize(maxRightTrendValue);trendRightWidth=dimention.width?dimention.width+axisConfig.labelPadding:0;dimention=smartLabel.getOriSize(maxLeftTrendValue);trendLeftWidth=dimention.width?dimention.width+axisConfig.labelPadding:0;if(isOpposit){if(trendRightWidth>labelWidth&&trendRightWidth>maxWidth){trendRightWidth=maxWidth}labelWidth=Math.max(labelWidth,trendRightWidth+axisConfig.labelPadding);if(trendLeftWidth>maxWidth-labelWidth){trendLeftWidth=Math.min(trendLeftWidth,maxWidth-labelWidth)}}else{if(trendLeftWidth>labelWidth&&trendLeftWidth>maxWidth){trendLeftWidth=maxWidth}labelWidth=Math.max(labelWidth,trendLeftWidth+axisConfig.labelPadding);if(trendRightWidth>maxWidth-labelWidth){trendRightWidth=Math.min(trendRightWidth,maxWidth-labelWidth)}}for(j=0,jLen=trendlines.length;j<jLen;j+=1){for(i=0,iLim=trendlines[j].line&&trendlines[j].line.length;i<iLim;i+=1){trendObj=trendlines[j].line[i];startTValue=numberFormatter.getCleanValue((0,_lib.pluck)(trendObj.startvalue,trendObj.value,0));endTValue=(0,_lib.pluckNumber)(trendObj.endvalue,startTValue);if(Number(trendObj.valueonright)===1){text=trendObj.origText||trendObj.displayvalue||\"\"+endTValue||\"\"}else{text=trendObj.origText||trendObj.displayvalue||\"\"+startTValue||\"\"}text=(0,_lib.parseUnsafeString)(\"\"+text);if(text===trendObj.endvalue||text===trendObj.startvalue){text=\"\"+numberFormatterFn.call(numberFormatter,text)}trendObj.origText=text;valueOnRight=(0,_lib.pluckNumber)(trendObj.valueonright,isOpposit?1:0);if(valueOnRight){axisSmartTrendValue=smartLabel.getSmartText(text,trendRightWidth,chart.config.canvasHeight,useEllipsesWhenOverflow)}else{axisSmartTrendValue=smartLabel.getSmartText(text,trendLeftWidth,chart.config.canvasHeight,useEllipsesWhenOverflow)}trendLabelConfig=axisConfig.parsedTrendLabels[counter++];if(trendLabelConfig){trendLabelConfig.attr.text=trendObj.displayvalue=axisSmartTrendValue.text}if(axisSmartTrendValue.tooltext){trendObj.valueToolText=axisSmartTrendValue.tooltext;trendLabelConfig&&(trendLabelConfig.valueToolText=trendObj.valueToolText)}else{delete trendObj.valueToolText;trendLabelConfig&&delete trendLabelConfig.valueToolText}}}}maxWidth+=reserveNameHeight;if(!axisConfig.drawAxisName||maxWidth-labelWidth-trendRightWidth<=0||axisName===\"\"){axisNameData.isDraw=false;axisNameData.value=_lib.BLANKSTRING}else{smartLabel.setStyle({fontSize:nameStyle.fontSize,fontFamily:nameStyle.fontFamily,lineHeight:nameStyle.lineHeight,fontWeight:nameStyle.fontWeight});axisNameData.isDraw=true;if(axisConfig.rotateAxisName){axisConfig.name.rotation=isOpposit?90:270;axisSmartName=smartLabel.getSmartText(axisName,canvasHeight,maxWidth-labelWidth-trendRightWidth);axisNameData.value=axisName;axisConfig.nameMaxW=Math.min(axisSmartName.height);nameWidth=axisConfig.nameMaxW+axisNamePadding}else{axisSmartName=smartLabel.getSmartText(axisName,maxWidth-labelWidth-trendRightWidth,canvasHeight);axisNameData.value=axisName;axisConfig.nameMaxW=Math.min(axisSmartName.width,maxWidth-labelWidth);axisConfig.nameMaxH=axisSmartName.height;if(axisConfig.axisNameWidth>=0){axisConfig.nameMaxW=Math.min(axisConfig.nameMaxW,axisConfig.axisNameWidth)}nameWidth=axisConfig.nameMaxW+axisNamePadding}}if(isOpposit){if(drawLabelsOpposit){retObj.left+=Math.max(axisLabelWidth,trendLeftWidth);retObj.right+=trendRightWidth}else{retObj.left+=trendLeftWidth;retObj.right+=Math.max(axisLabelWidth,trendRightWidth)}if(drawAxisNameOpposit){axisConfig.axisNamePadding=retObj.left+axisNamePadding;retObj.left+=nameWidth}else{axisConfig.axisNamePadding=retObj.right+axisNamePadding;retObj.right+=nameWidth}}else{if(drawLabelsOpposit){retObj.left+=trendLeftWidth;retObj.right+=Math.max(axisLabelWidth,trendRightWidth)}else{retObj.left+=Math.max(axisLabelWidth,trendLeftWidth);retObj.right+=trendRightWidth}if(drawAxisNameOpposit){axisConfig.axisNamePadding=retObj.right+axisNamePadding;retObj.right+=nameWidth}else{axisConfig.axisNamePadding=retObj.left+axisNamePadding;retObj.left+=nameWidth}}if(axisNameData.isDraw&&axisConfig.axisNamePadding+axisConfig.nameMaxW>maxWidth){axisConfig.axisNamePadding=maxWidth-axisConfig.nameMaxW;nameWidth=axisConfig.nameMaxW+axisConfig.axisNamePadding-labelWidth}return retObj};_proto._placeHorizontalAxis=function _placeHorizontalAxis(_maxHeight){var axis=this,maxHeight=_maxHeight,axisConfig=axis.config,chart=axis.getFromEnv(\"chart\"),chartConfig=chart.config,smartLabel=chart.getFromEnv(\"smartLabel\"),axisRange=axisConfig.axisRange,axisNameData=axisConfig.name,isOpposit=axisConfig.isOpposit,numberFormatter=chart.getFromEnv(\"number-formatter\"),drawLabelsOpposit=axisConfig.drawLabelsOpposit,drawAxisNameOpposit=axisConfig.drawAxisNameOpposit,axisLabelHeight=0,canvasWidth=chartConfig.canvasWidth,axisValuePadding=axisConfig.labelPadding=(0,_lib.pluckNumber)(axisConfig.rawAttr.axisValuePadding,4),axisNamePadding=(0,_lib.pluckNumber)(axisConfig.rawAttr.axisNamePadding,5),useEllipsesWhenOverflow=axisConfig.useEllipsesWhenOverflow,nameStyle=axisConfig.name.style,trendStyle=axisConfig.trend.trendStyle,axisName=axisConfig.axisName,vtrendlines=axisConfig.vTrendLines,valueOnRight,trendTextFromValue,j,jLen,labelHeight=0,counter=0,trendLabelConfig,nameHeight=0,retObj={top:0,bottom:0},trendMaxHeight=0,reserveNameHeight=0,axisSmartName,i,max,min,text,iLim,heightLeft,trendObj,axisSmartTrendValue,trendHeight,dimention,numberFormatterFn,axisLineThickness,startTValue,endTValue;if(axisValuePadding<0){axisConfig.labelPadding=2}if(axisConfig.drawTick&&axisConfig.tickLength){axisLineThickness=axisConfig.axisLineThickness+axisConfig.tickLength}else{axisLineThickness=axisConfig.axisLineThickness}if(axisConfig.showAxisLine){axisConfig.labelPadding=(0,_lib.pluckNumber)(axisValuePadding,2)+axisLineThickness;if(axisConfig.labelPadding<0){axisConfig.labelPadding=(axisConfig.axisLineThickness<0?0:axisLineThickness)+2}maxHeight-=axisConfig.axisLineThickness}else{axisConfig.labelPadding=(0,_lib.pluckNumber)(axisValuePadding,2);if(axisConfig.labelPadding<0){axisConfig.labelPadding=2}}max=axisRange.max;min=axisRange.min;axisConfig.labels.rotation=0;axisConfig.labels.step=axisConfig.labelStep;axisConfig.labels.isDraw=1;axisConfig.labels.drawNormalVal=axisConfig.showDivLineValues;axisConfig.labels.drawLimitVal=axisConfig.showLimits;reserveNameHeight=nameStyle.lineHeight;reserveNameHeight=Number(reserveNameHeight.replace(/px/i,\"\"));if(axisName&&reserveNameHeight<maxHeight){maxHeight-=reserveNameHeight}if(axisConfig.rotateLabels&&axisConfig.labelDisplay!==\"stagger\"&&axisConfig.labelDisplay!==\"none\"){axisConfig.labelDisplay=ROTATE_STR}if(axisConfig.showLimits!==1&&axisConfig.showDivLineValues!==1){axisConfig.labels.isDraw=0}dimention=axisConfig.drawLabels?axis._getHMaxLabelDimention(maxHeight-axisConfig.labelPadding):{width:0,height:0};if(axisConfig.labels.rotation){if(dimention.width+axisConfig.labelPadding>maxHeight&&!axisConfig.tickValues){axisConfig.labels.isDraw=0}}else{if(dimention.height+axisConfig.labelPadding>maxHeight&&!axisConfig.tickValues){axisConfig.labels.isDraw=0}}if(axisConfig.labels.isDraw){if(axisConfig.labels.rotation){axisConfig.labelMaxW=dimention.height;axisConfig.labelMaxH=dimention.width;axisLabelHeight=dimention.width+axisConfig.labelPadding}else{axisConfig.labelMaxW=dimention.width;axisConfig.labelMaxH=dimention.height;axisLabelHeight=dimention.height+axisConfig.labelPadding}labelHeight=axisLabelHeight}labelHeight=Math.max(labelHeight,axisConfig.labelPadding);heightLeft=labelHeight<=maxHeight?maxHeight-labelHeight:maxHeight;if(axisConfig.drawTrendLines&&axisConfig.drawTrendLabels&&vtrendlines&&axisConfig.isActive){if(axisConfig.isPercent){numberFormatterFn=axis.getFromEnv(\"number-formatter\").percentValue}else if(axisConfig.isVertical){numberFormatterFn=axis.getFromEnv(\"number-formatter\").yAxis}else{numberFormatterFn=axis.getFromEnv(\"number-formatter\").xAxis}smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);smartLabel.setStyle({fontSize:trendStyle.fontSize,fontFamily:trendStyle.fontFamily,lineHeight:trendStyle.lineHeight,fontWeight:trendStyle.fontWeight});for(j=0,jLen=vtrendlines.length;j<jLen;j+=1){for(i=0,iLim=vtrendlines[j].line&&vtrendlines[j].line.length;i<iLim;i+=1){trendObj=vtrendlines[j].line[i];startTValue=numberFormatter.getCleanValue((0,_lib.pluck)(trendObj.startvalue,trendObj.value,0));endTValue=(0,_lib.pluckNumber)(trendObj.endvalue,startTValue);if(startTValue<=max&&startTValue>=min&&endTValue<=max&&endTValue>=min){valueOnRight=(0,_lib.pluckNumber)(trendObj.valueonright,0);trendTextFromValue=valueOnRight===1?trendObj.endvalue||trendObj.startvalue:trendObj.startvalue||trendObj.endvalue;text=(0,_lib.parseUnsafeString)(trendObj.origText||trendObj.displayvalue||trendTextFromValue||\"\");if(text===trendTextFromValue){text=\"\"+numberFormatterFn.call(chart.getFromEnv(\"number-formatter\"),text)}trendObj.origText=text;axisSmartTrendValue=smartLabel.getSmartText(text,chart.canvasWidth,trendStyle.lineHeight,useEllipsesWhenOverflow);trendHeight=axisSmartTrendValue.height+2;if(heightLeft-trendHeight<0){trendObj.displayvalue=_lib.BLANKSTRING}else{trendLabelConfig=axisConfig.parsedTrendLabels[counter++];if(trendLabelConfig){trendLabelConfig.attr.text=trendObj.displayvalue=axisSmartTrendValue.text}trendMaxHeight=trendMaxHeight<axisSmartTrendValue.height?axisSmartTrendValue.height:trendMaxHeight}if(axisSmartTrendValue.tooltext){trendObj.valueToolText=axisSmartTrendValue.tooltext;trendLabelConfig&&(trendLabelConfig.valueToolText=trendObj.valueToolText)}else{delete trendObj.valueToolText;trendLabelConfig&&delete trendLabelConfig.valueToolText}}}}}heightLeft-=trendMaxHeight;labelHeight+=isOpposit?0:trendMaxHeight;heightLeft+=reserveNameHeight;maxHeight+=reserveNameHeight;if(!axisConfig.drawAxisName||heightLeft<=0||axisName===\"\"){axisNameData.isDraw=false;axisNameData.value=_lib.BLANKSTRING}else{smartLabel.setStyle({fontSize:nameStyle.fontSize,fontFamily:nameStyle.fontFamily,lineHeight:nameStyle.lineHeight,fontWeight:nameStyle.fontWeight});axisNameData.isDraw=true;axisSmartName=smartLabel.getSmartText(axisName,canvasWidth,heightLeft);axisNameData.value=axisName;axisConfig.nameMaxW=canvasWidth;axisConfig.nameMaxH=axisSmartName.height;nameHeight=axisSmartName.height+axisNamePadding;axisConfig.axisNamePadding=axisNamePadding+labelHeight;if(axisConfig.axisNamePadding+axisSmartName.height>maxHeight){axisConfig.axisNamePadding=maxHeight-axisSmartName.height;nameHeight=axisSmartName.height+axisConfig.axisNamePadding-labelHeight}}if(isOpposit){if(drawLabelsOpposit){retObj.bottom+=axisLabelHeight+trendMaxHeight}else{retObj.top+=axisLabelHeight;retObj.bottom+=trendMaxHeight}axisConfig.trendBottomPadding=retObj.bottom-trendMaxHeight+2;if(drawAxisNameOpposit){retObj.bottom+=nameHeight}else{retObj.top+=nameHeight}}else{if(drawLabelsOpposit){retObj.top+=axisLabelHeight;retObj.bottom+=trendMaxHeight}else{retObj.bottom+=axisLabelHeight+trendMaxHeight}axisConfig.trendBottomPadding=retObj.bottom-trendMaxHeight+2;if(drawAxisNameOpposit){retObj.top+=nameHeight}else{retObj.bottom+=nameHeight}}return retObj};_proto._parseCategoryPlotLine=function _parseCategoryPlotLine(){var axis=this,axisConfig=axis.config,axisRange=axisConfig.axisRange,tickValue=axisConfig.tickValues.tickValue,plotLineColor=(0,_lib.convertColor)(axisConfig.divLineColor,axisConfig.divLineAlpha),plotLineWidth=axisConfig.divLineThickness,plotLineDashStyle=axisConfig.divLineIsDashed?(0,_lib.getDashStyle)(axisConfig.divLineDashLen,axisConfig.divLineDashGap,plotLineWidth):_lib.DASH_DEF,axisAttrObj,i,willDraw=isInBetween(axis.getVisibleConfig()),value,ticks=axisConfig._allTicks,len=ticks.length;axisAttrObj={stroke:plotLineColor,\"stroke-width\":plotLineWidth,\"stroke-dasharray\":plotLineDashStyle};if(tickValue[0]&&(tickValue[0].x!==_lib.UNDEF||tickValue[0].y!==_lib.UNDEF)){return}if(axisConfig.lines.isDraw&&axisConfig.categoryNumDivLines){for(i=0;i<len;++i){value=ticks[i];if(!willDraw(value)){continue}if(value===axisRange.min||value===axisRange.max){continue}axis.setReferenceInfo({from:value,type:\"line\",layer:1,attr:axisAttrObj})}}};_proto._drawComponents=function _drawComponents(){var axis=this,axisConfig=axis.config;axisConfig.drawAxisName&&axis._drawAxisName();axisConfig.drawAxisLine&&axis._drawAxisLine();if(!axisConfig.tickValues){axisConfig.drawLabels&&axis._drawLabel()}else{axisConfig.drawLabels&&axis._drawCategory()}axisConfig.drawTrendLines&&axis.drawTrendLabel()};_proto.drawTrendLabel=function drawTrendLabel(){var axis=this,axisConfig=axis.config,trendLabelConfigs=axisConfig.parsedTrendLabels,animationManager=axis.getFromEnv(\"animationManager\"),toolTipController=this.getFromEnv(\"toolTipController\"),container=axisConfig.axisTrendLabelContainer,isOpposite=axisConfig.isOpposit,axisPadding=axisConfig.labelPadding,vtrendlines=axisConfig.vTrendLines,trendlines=axisConfig.trendLines,axisDimension=axisConfig.axisDimention,visibleDomain=axis.getVisibleConfig(),visibleMin=visibleDomain.minValue,visibleMax=visibleDomain.maxValue,valueOnRight,trendLabelConfig,trendLabelElement,fixedTrendLabelPos,fixedTrendLabelPosRight,isTrendZone,startValue,midValue,endValue,_isVisible=true,startValuePixel,endValuePixel,removingElement,diff,isEndValDefined,i,ii;for(i=0,ii=trendLabelConfigs.length;i<ii;i++){trendLabelConfigs[i].id=i+TREND_ID}if(vtrendlines){fixedTrendLabelPos=isOpposite?axisDimension.opposite+(axisConfig.trendBottomPadding||0):axisDimension.y+(axisConfig.trendBottomPadding||0)}else{fixedTrendLabelPos=isOpposite?axisDimension.opposite-(axisPadding||0):axisDimension.x-(axisPadding||0);fixedTrendLabelPosRight=isOpposite?axisDimension.x+(axisPadding||0):axisDimension.opposite+(axisPadding||0)}diff=(0,_differenceWith.default)((function(prev,now){return prev.attr.text===now.attr.text}),axisConfig.prevTrendLabels,trendLabelConfigs);for(i=0,ii=diff.length;i<ii;i++){removingElement=axis.getGraphicalElement(diff[i].id);if(removingElement){axis.removeGraphicalElement(removingElement)}}axisConfig.prevTrendLabels=(0,_lib.extend2)([],trendLabelConfigs);if(!axisConfig.drawTrendLabels){for(i=0,ii=trendLabelConfigs.length;i<ii;i++){removingElement=axis.getGraphicalElement(trendLabelConfigs[i].id);if(removingElement){axis.removeGraphicalElement(removingElement)}}return}for(i=0,ii=trendLabelConfigs.length;i<ii;i++){trendLabelConfig=trendLabelConfigs[i];trendLabelElement=axis.getGraphicalElement(i+TREND_ID);startValue=+trendLabelConfig.from;endValue=+trendLabelConfig.to;_isVisible=true;isEndValDefined=!isNaN(endValue);if(isEndValDefined){midValue=startValue+(endValue-startValue)/2;if(visibleMin>midValue||visibleMax<midValue)_isVisible=false}else{if(visibleMin>startValue||visibleMax<startValue)_isVisible=false}if(!_isVisible){trendLabelElement&&axis.removeGraphicalElement(trendLabelElement)}else{if(vtrendlines){startValuePixel=axis.getPixel(startValue,queryOptions);endValuePixel=isEndValDefined?axis.getPixel(endValue,queryOptions):0;isTrendZone=(0,_lib.pluckNumber)(trendLabelConfig.isTrendZone,axisConfig.isTrendZone,1);if(isEndValDefined&&endValue!==startValue&&isTrendZone){trendLabelConfig.attr.x=startValuePixel+(endValuePixel-startValuePixel)/2;trendLabelConfig.attr.y=fixedTrendLabelPos}else{trendLabelConfig.attr.x=isEndValDefined?endValuePixel:startValuePixel;trendLabelConfig.attr.y=fixedTrendLabelPos}}else if(trendlines){startValuePixel=axis.getPixel(startValue,queryOptions);endValuePixel=isEndValDefined?axis.getPixel(endValue,queryOptions):0;valueOnRight=(0,_lib.pluckNumber)(trendLabelConfig.valueOnRight,axisConfig.isOpposit?1:0);isTrendZone=(0,_lib.pluckNumber)(trendLabelConfig.isTrendZone,axisConfig.isTrendZone,0);if(isEndValDefined&&endValue!==startValue&&isTrendZone){trendLabelConfig.attr.x=valueOnRight?fixedTrendLabelPosRight:fixedTrendLabelPos;trendLabelConfig.attr.y=startValuePixel+(endValuePixel-startValuePixel)/2}else{trendLabelConfig.attr.x=valueOnRight?fixedTrendLabelPosRight:fixedTrendLabelPos;trendLabelConfig.attr.y=isEndValDefined?valueOnRight?endValuePixel:startValuePixel:startValuePixel}}trendLabelElement=axis.addGraphicalElement(i+TREND_ID,animationManager.setAnimation({container:container,el:trendLabelElement||\"text\",attr:trendLabelConfig.attr,css:trendLabelConfig.css,data:{value:midValue||startValue},component:axis,label:\"text\"}));if(axisConfig.showTooltip&&trendLabelConfig.valueToolText){toolTipController.enableToolTip(trendLabelElement,trendLabelConfig.valueToolText)}else{toolTipController.disableToolTip(trendLabelElement)}}}};_proto._drawAxisName=function _drawAxisName(){var axis=this,axisConfig=axis.config,toolTipController=this.getFromEnv(\"toolTipController\"),canvasDimensions=axis.getLinkedItem(\"canvas\").getEffectiveDimensions(),animationManager=axis.getFromEnv(\"animationManager\"),canvasLeft=canvasDimensions.left,canvasTop=canvasDimensions.top,canvasWidth=canvasDimensions.width,canvasHeight=canvasDimensions.height,canvasBottom=canvasTop+canvasHeight,canvasRight=canvasLeft+canvasWidth,chartConfig=axis.getFromEnv(\"chart\").config,style=axisConfig.name.style,axisName=axisConfig.name.value,isOpposite=axisConfig.isOpposit,isVertical=axisConfig.isVertical,smartLabel=axis.getFromEnv(\"smartLabel\"),axisNameContainer=axisConfig.axisNameContainer,axisNamePadding=axisConfig.axisNamePadding,axisNameMaxH=axisConfig.nameMaxH,axisNameMaxW=axisConfig.nameMaxW,axisDimension=axisConfig.axisDimention,axisStart=isVertical?axisDimension.x:axisDimension.y,axisOpposite=axisDimension.opposite,axisNameElement=axis.getGraphicalElement(\"axisName\"),rotation=(0,_lib.pluckNumber)(axisConfig.name.rotation,isVertical?90:270),paper=axis.getFromEnv(\"paper\"),css={fontFamily:style.fontFamily,fontSize:style.fontSize,lineHeight:style.lineHeight,fontWeight:style.fontWeight,fontStyle:style.fontStyle},axisAttrObj,axisSmartName,tooltext,nameHeightAvail,nameHeight,yPos;if(axisConfig.name.isDraw){axisAttrObj={fontFamily:style.fontFamily,fill:style.color,\"vertical-align\":\"middle\",\"font-size\":style.fontSize,\"line-height\":style.lineHeight};smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);smartLabel.setStyle({fontSize:style.fontSize,fontFamily:style.fontFamily,lineHeight:style.lineHeight,fontWeight:style.fontWeight});if(axisConfig.drawAxisNameOpposit){isOpposite=!isOpposite;axisStart=axisOpposite}if(isVertical){axisNamePadding=Math.max(axisNamePadding,getAxisNamePaddingOffset(axisConfig,chartConfig));if(axisConfig.axisNameAlignCanvas||chartConfig.captionalignment&&chartConfig.captionalignment===\"left\"){nameHeightAvail=canvasHeight}else{nameHeightAvail=Math.max(canvasHeight,axisConfig.oriCanvasHeight||0)}if(rotation){axisSmartName=smartLabel.getSmartText(axisName,nameHeightAvail,axisNameMaxW);tooltext=axisSmartName.tooltext;nameHeight=axisSmartName.width}else{axisSmartName=smartLabel.getSmartText(axisName,axisNameMaxW,nameHeightAvail);tooltext=axisSmartName.tooltext;nameHeight=axisSmartName.height}if(axisConfig.drawAxisNameFromBottom){yPos=canvasBottom-nameHeight/2}else{yPos=nameHeight>canvasHeight?chartConfig.height/2:canvasTop+canvasHeight/2}axisAttrObj.text=axisSmartName.text;axisAttrObj.x=isOpposite?(axisStart||canvasRight)+axisNamePadding+axisNameMaxW/2:(axisStart||canvasLeft)-axisNamePadding-axisNameMaxW/2;axisAttrObj.y=yPos}else{axisSmartName=smartLabel.getSmartText(axisName,canvasWidth,axisNameMaxH);tooltext=axisSmartName.tooltext;if(isOpposite&&chartConfig.canvasMarginTop){axisNamePadding=Math.max(axisNamePadding,chartConfig.canvasMarginTop-chartConfig.marginTop-axisNameMaxH)}if(!isOpposite&&chartConfig.canvasMarginBottom){axisNamePadding=Math.max(axisNamePadding,chartConfig.canvasMarginBottom-chartConfig.marginBottom-axisNameMaxH)}axisAttrObj.text=axisSmartName.text;axisAttrObj.x=canvasLeft+canvasWidth/2;axisAttrObj.y=isOpposite?(axisStart||canvasTop)-axisNamePadding-axisNameMaxH/2:(axisStart||canvasBottom)+axisNamePadding+axisNameMaxH/2}axisAttrObj[\"text-bound\"]=axisSmartName.text===\"\"?[]:[style.backgroundColor,style.borderColor,style.borderColor?style.borderThickness:0,style.borderPadding,style.borderRadius,style.borderDash];axisAttrObj.transform=paper.getSuggestiveRotation(isVertical?rotation:0,axisAttrObj.x,axisAttrObj.y);axisNameElement=axis.addGraphicalElement(\"axisName\",animationManager.setAnimation({css:css,el:axisNameElement||\"text\",attr:axisAttrObj,container:axisNameContainer,component:axis,label:\"text\"}));if(axisConfig.showTooltip){toolTipController.enableToolTip(axisNameElement,tooltext)}else{toolTipController.disableToolTip(axisNameElement)}}else{axisNameElement&&axis.removeGraphicalElement(axisNameElement)}};_proto._drawAxisLine=function _drawAxisLine(){var axis=this,axisConfig=axis.config,isVertical=axisConfig.isVertical,isOpposite=axisConfig.isOpposit,chart=axis.getFromEnv(\"chart\"),canvasDimensions=axis.getLinkedItem(\"canvas\").getEffectiveDimensions(),animationManager=axis.getFromEnv(\"animationManager\"),canvasTop=canvasDimensions.top,canvasLeft=canvasDimensions.left,canvasBottom=canvasTop+canvasDimensions.height,canvasRight=canvasLeft+canvasDimensions.width,axisDimension=axisConfig.axisDimention,axisStartPosition=isVertical?axisDimension.x:axisDimension.y,drawAxisLineWRTCanvas=axisConfig.drawAxisLineWRTCanvas,chartJSON=chart.getFromEnv(\"chart-attrib\"),axisLineGroup=axisConfig.axisAxisLineContainerBottom,tickAttrObj,axisLineElementCheck=axis.getGraphicalElement(AXIS_LINE),axisLineElement,linePath,xAxisLineLeftExten,fixPoint,tickEndPoint,pixelValue,axisLineAttrObj,tickElement,tickElementCheck,removingElement,tick,tickId,drawElemIds=[],diff,i,crispPath,ticks,ln;xAxisLineLeftExten=(0,_lib.pluckNumber)(chartJSON.showyaxisline,chartJSON.showyaxisline)===1?(0,_lib.pluckNumber)(chartJSON.yaxislinethickness,chartJSON.pyaxislinethickness,1):0;if(axisConfig.showAxisLine){if(isVertical){if(isOpposite){axisStartPosition=drawAxisLineWRTCanvas?canvasRight:axisStartPosition;fixPoint=axisStartPosition+axisConfig.axisLineThickness/2}else{axisStartPosition=drawAxisLineWRTCanvas?canvasLeft:axisStartPosition;fixPoint=axisStartPosition-axisConfig.axisLineThickness/2}crispPath=getCrispPath([\"M\",fixPoint,canvasBottom,\"L\",fixPoint,canvasTop],axisConfig.axisLineThickness);linePath=crispPath.path}else{if(isOpposite){axisStartPosition=drawAxisLineWRTCanvas?canvasTop:axisStartPosition;fixPoint=axisStartPosition-axisConfig.axisLineThickness/2}else{axisStartPosition=drawAxisLineWRTCanvas?canvasBottom:axisStartPosition;fixPoint=axisStartPosition+axisConfig.axisLineThickness/2}crispPath=getCrispPath([\"M\",canvasLeft-xAxisLineLeftExten,fixPoint,\"L\",canvasRight,fixPoint],axisConfig.axisLineThickness);linePath=crispPath.path}axisLineAttrObj={path:linePath,stroke:axisConfig.axisLineColor,\"stroke-linecap\":BUTT,\"stroke-width\":axisConfig.axisLineThickness,\"shape-rendering\":crispPath.isCrisped?CRISP:_lib.UNDEF};if(axisConfig.drawTick&&axisConfig.tickLength){tickAttrObj={stroke:axisConfig.tickColor,\"stroke-width\":axisConfig.tickWidth};if(isVertical){if(isOpposite){tickEndPoint=fixPoint+axisConfig.tickLength}else{tickEndPoint=fixPoint-axisConfig.tickLength}}else{if(isOpposite){tickEndPoint=fixPoint-axisConfig.tickLength}else{tickEndPoint=fixPoint+axisConfig.tickLength}}ticks=axisConfig.tickValues?axisConfig.tickValues.tickValue.map((function(tickObj){return isVertical?tickObj.y:tickObj.x})):axisConfig.ticks;for(i=0,ln=ticks.length;i<ln;i+=1){tick=ticks[i];tickId=\"\"+tick+TICK_ID;tickElementCheck=axis.getGraphicalElement(tickId);pixelValue=axis.getPixel(tick,queryOptions);tickAttrObj.path=getCrispPath(isVertical?[\"M\",fixPoint,pixelValue,\"L\",tickEndPoint,pixelValue]:[\"M\",pixelValue,fixPoint,\"L\",pixelValue,tickEndPoint],axisConfig.tickWidth).path;tickElement=animationManager.setAnimation({el:tickElementCheck||\"path\",attr:tickAttrObj,data:{value:tick,path:tickAttrObj.path},container:axisLineGroup,component:axis,label:\"path\"});if(!tickElementCheck){axis.addGraphicalElement(tickId,tickElement)}drawElemIds.push(tickId)}}axisLineElement=animationManager.setAnimation({el:axisLineElementCheck||\"path\",attr:axisLineAttrObj,container:axisLineGroup,component:axis,label:\"path\"});if(!axisLineElementCheck){axis.addGraphicalElement(AXIS_LINE,axisLineElement)}drawElemIds.push(AXIS_LINE)}diff=(0,_diff.default)(axisConfig.prevTicks,drawElemIds);for(i=0,ln=diff.length;i<ln;i++){removingElement=axis.getGraphicalElement(diff[i]);removingElement&&axis.removeGraphicalElement(removingElement)}axisConfig.prevTicks=drawElemIds};_proto._parseCategory=function _parseCategory(){var axis=this,axisConfig=axis.config,axisDimention=axisConfig.axisDimention||{},chart=axis.getFromEnv(\"chart\"),smartLabel=chart.getFromEnv(\"smartLabel\"),axisComponents=axis.components,labelStore=axisComponents.labels,canvasDimensions=axis.getLinkedItem(\"canvas\").getEffectiveDimensions(),chartConfig=chart.config,isOpposit=axisConfig.isOpposit,labels=axisConfig.labels,style=labels.style,isVertical=axisConfig.isVertical,canvasTop=canvasDimensions.top,canvasLeft=canvasDimensions.left,canvasBottom=canvasTop+canvasDimensions.height,canvasRight=canvasLeft+canvasDimensions.width,axisPadding=axisConfig.labelPadding,axisStartPosition=isVertical?axisDimention.x:axisDimention.y,axisEndPosition=axisDimention.opposite,categories=chart.getFromEnv(\"dataSource\").categories,categoriesStyle={},tickArr=axisConfig.tickValues.tickValue,i,curCategory,text,labelRotation,labelLineHeight,labelLineHeightpx,addCategoryPadding,css,categoryStyleFontFamily,categoryStyleFontSize,categoryStyleFontWeight,categoryStyleFontStyle,ParentCss,axisAttrObj,fontColor,pos,min=axisConfig.axisRange.min,curCategoryValue,labelBox,categoryArr,ln,tempStep,staggerLineAvailed,staggerLines=axisConfig.drawnStaggerLines,isUnevenLabels=(axisConfig.labelStep!==axisConfig.labels.step||axis.getZoom()!==1)&&axisConfig.labelDisplay===\"stagger\",categoryPadding,staggerLabelWidth,intervalWidth,smartLabelText,labelMaxW,labelMaxH,axisXPadding=1,curCategoryIndex;if(axisConfig.labels.isDraw){if(isVertical){intervalWidth=Math.abs(axis.getPixel(0,queryOptions)-axis.getPixel(0+axisConfig.axisRange.tickInterval,queryOptions));if(axisConfig.labelMaxH>intervalWidth){tempStep=Math.ceil(axisConfig.labelMaxH/intervalWidth)}if(tempStep>axisConfig.labels.step){axisConfig.labels.step=tempStep}}if(isUnevenLabels){staggerLabelWidth=2*Math.abs(axis.getPixel(min,queryOptions)-axis.getPixel(min+axisConfig.labels.step,queryOptions))*axisConfig.sWidthAdjstFactor-axisXPadding}labelRotation=axisConfig.labels.rotation;labelMaxW=labelRotation?axisConfig.labelMaxH:axisConfig.labelMaxW;labelMaxH=labelRotation?axisConfig.labelMaxW:axisConfig.labelMaxH;if(axisConfig.drawLabelsOpposit){isOpposit=!isOpposit;axisStartPosition=axisEndPosition}if(categories&&categories[0]&&axisConfig.xAxisLabelMode!==\"auto\"){categoriesStyle.fontFamily=categories[0].font;categoriesStyle.fontSize=categories[0].fontsize;categoriesStyle.color=categories[0].fontcolor}axisConfig.ParentCss=ParentCss={fontFamily:(0,_lib.pluck)(categoriesStyle.fontFamily,style.fontFamily),fontSize:(0,_lib.pluck)(categoriesStyle.fontSize,this.computeFontSize(style.fontSizeWithUnit)+_lib.PXSTRING),fontWeight:(0,_lib.pluck)(style.fontWeight),fontStyle:(0,_lib.pluck)(style.fontStyle)};ParentCss.lineHeight=(0,_lib.setLineHeight)(ParentCss);categoryArr=axis._getCategoryArr();axisComponents.labelIndexArr=[];for(i=0,ln=categoryArr.length;i<ln;i+=1){curCategoryIndex=categoryArr[i].index;curCategory=tickArr[curCategoryIndex];curCategoryValue=categoryArr[i].value;axisComponents.labelIndexArr.push(curCategoryIndex);categoryStyleFontFamily=(0,_lib.pluck)(curCategory.font,curCategory.labelfont);categoryStyleFontSize=(0,_lib.pluck)(this.computeFontSize(curCategory.fontsize),curCategory.labelfontsize);categoryStyleFontWeight=(0,_lib.pluck)(curCategory.fontbold,curCategory.labelfontbold)?(0,_lib.pluckNumber)(curCategory.fontbold,curCategory.labelfontbold,0)?\"bold\":_lib.NORMAL:_lib.UNDEF;categoryStyleFontStyle=(0,_lib.pluck)(curCategory.fontitalic,curCategory.labelfontitalic)?(0,_lib.pluckNumber)(curCategory.fontitalic,curCategory.labelfontitalic,0)?\"italic\":_lib.NORMAL:_lib.UNDEF;fontColor=(0,_lib.convertColor)((0,_lib.pluck)(curCategory.fontcolor,curCategory.labelfontcolor,categoriesStyle.color,style.color),(0,_lib.pluckNumber)(curCategory.labelalpha,axisConfig.rawAttr.labelAlpha,chart.config.singleseries?_lib.UNDEF:curCategory.alpha,100));if(categoryStyleFontFamily||categoryStyleFontSize||categoryStyleFontWeight||categoryStyleFontStyle){css={};categoryStyleFontFamily&&(css.fontFamily=categoryStyleFontFamily);categoryStyleFontSize&&(css.fontSize=categoryStyleFontSize);categoryStyleFontWeight&&(css.fontWeight=categoryStyleFontWeight);categoryStyleFontStyle&&(css.fontStyle=categoryStyleFontStyle);css.lineHeight=categoryStyleFontSize?(0,_lib.setLineHeight)(css):ParentCss.lineHeight}else{css=_lib.UNDEF}if(css||ParentCss){labelLineHeightpx=(css||ParentCss).lineHeight;if(labelLineHeightpx.indexOf(\"px\")!==-1){labelLineHeight=labelLineHeightpx.replace(/px/i,\"\");labelLineHeight=parseFloat(labelLineHeight)}}if(curCategory.appliedSmartLabel===false){smartLabel.setStyle(curCategory._ovrStyle||ParentCss);smartLabelText=smartLabel.getSmartText(curCategory.oriLabel||curCategory.label,labelMaxW,labelMaxH);curCategory.oriLabel=curCategory.oriLabel||curCategory.label;curCategory.label=smartLabelText.text;curCategory.labelTooltext=smartLabelText.labelTooltext;curCategory.appliedSmartLabel=true}pos=axis.getPixel(curCategoryValue,queryOptions);if(isVertical){text=curCategory.label||\"\";addCategoryPadding=Number(curCategory.labelPadding)||0;axisAttrObj={fill:fontColor,\"line-height\":labelLineHeight,opacity:1,\"text-anchor\":isOpposit?_lib.POSITION_START:_lib.POSITION_END,text:text,cursor:!chartConfig.singleseries&&curCategory.link||curCategory.labellink||style.labelLink?_lib.POINTER:\"\",x:isOpposit?(axisStartPosition||canvasRight)+axisPadding:(axisStartPosition||canvasLeft)-axisPadding,y:addCategoryPadding?pos+addCategoryPadding:pos}}else{text=curCategory.label||\"\";addCategoryPadding=Number(curCategory.labelPadding)||0;axisAttrObj={fill:fontColor,\"line-height\":labelLineHeight,opacity:1,text:text,cursor:!chartConfig.singleseries&&curCategory.link||curCategory.labellink||style.labelLink?_lib.POINTER:\"\",x:pos,y:isOpposit?(axisStartPosition||canvasTop)-axisPadding:(axisStartPosition||canvasBottom)+axisPadding};if(labelRotation){axisAttrObj[\"text-anchor\"]=isOpposit?_lib.POSITION_START:_lib.POSITION_END;axisAttrObj[\"vertical-align\"]=_lib.POSITION_MIDDLE}else{axisAttrObj[\"text-anchor\"]=_lib.POSITION_MIDDLE;axisAttrObj[\"vertical-align\"]=isOpposit?_lib.POSITION_BOTTOM:_lib.POSITION_TOP}if(isUnevenLabels){staggerLineAvailed=curCategory.labelCount%staggerLines;if(staggerLineAvailed){if(!(labelLineHeight=curCategory.style.lineHeight))labelLineHeight=axisConfig.labels.style.lineHeight;categoryPadding=labelLineHeight.replace(/px/i,\"\")*staggerLineAvailed;axisAttrObj.y=isOpposit?axisAttrObj.y-categoryPadding:axisAttrObj.y+categoryPadding}smartLabel.setStyle(curCategory._ovrStyle||ParentCss);smartLabelText=smartLabel.getSmartText(curCategory.oriLabel||curCategory.label,staggerLabelWidth,labelMaxH);curCategory.oriLabel=curCategory.oriLabel||curCategory.label;axisAttrObj.text=curCategory.label=smartLabelText.text;curCategory.labelTooltext=smartLabelText.labelTooltext;curCategory.appliedSmartLabel=true}else if(addCategoryPadding){if(isOpposit){axisAttrObj.y-=addCategoryPadding}else{axisAttrObj.y+=addCategoryPadding}}}labelBox={label:curCategory.label,lineHeight:labelLineHeightpx,border:(0,_lib.pluckNumber)(curCategory.borderthickness,curCategory.labelborderthickness)?(0,_lib.pluckNumber)(curCategory.borderthickness,curCategory.labelborderthickness,1)+\"px solid\":\"\",borderColor:curCategory.bordercolor||curCategory.labelbordercolor?(0,_lib.convertColor)(curCategory.bordercolor||curCategory.labelbordercolor,(0,_lib.pluckNumber)(curCategory.borderalpha,curCategory.labelborderalpha,curCategory.alpha,curCategory.labelalpha,100)):_lib.BLANKSTRING,borderThickness:(0,_lib.pluckNumber)(curCategory.borderthickness,curCategory.labelborderthickness),borderPadding:(0,_lib.pluckNumber)(curCategory.borderpadding,curCategory.labelborderpadding),borderRadius:(0,_lib.pluckNumber)(curCategory.borderradius,curCategory.labelborderradius),backgroundColor:curCategory.bgcolor||curCategory.labelbgcolor?(0,_lib.convertColor)(curCategory.bgcolor||curCategory.labelbgcolor,(0,_lib.pluckNumber)(curCategory.bgalpha,curCategory.labelbgalpha,curCategory.alpha,curCategory.labelalpha,axisConfig.rawAttr.labelAlpha,100)):_lib.BLANKSTRING,borderDash:(0,_lib.pluckNumber)(curCategory.borderdashed,curCategory.labelborderdashed,0)?(0,_lib.getDashStyle)((0,_lib.pluckNumber)(curCategory.borderdashlen,curCategory.labelborderdashlen,4),(0,_lib.pluckNumber)(curCategory.borderdashgap,curCategory.labelborderdashgap,2)):(0,_lib.pluckNumber)(curCategory.borderdashed,curCategory.labelborderdashed)===0?_lib.DASH_DEF:style.borderDash};if(!curCategory.label){axisAttrObj[\"text-bound\"]=[]}else{axisAttrObj[\"text-bound\"]=[(0,_lib.pluck)(labelBox.backgroundColor,style.backgroundColor),(0,_lib.pluck)(labelBox.borderColor,style.borderColor),(0,_lib.pluck)(labelBox.borderThickness,style.borderThickness),(0,_lib.pluck)(labelBox.borderPadding,style.borderPadding),(0,_lib.pluck)(labelBox.borderRadius,style.borderRadius),(0,_lib.pluck)(labelBox.borderDash,style.borderDash)]}if(labels.shiftX){axisAttrObj.x+=labels.shiftX}if(labels.shiftY){axisAttrObj.y+=labels.shiftY}axisAttrObj.transform=(0,_lib.getSuggestiveRotation)(labelRotation,axisAttrObj.x,axisAttrObj.y);labelStore[curCategoryIndex]=labelStore[curCategoryIndex]||{config:{props:{label:{}}}};labelStore[curCategoryIndex].config.props.label.attr=axisAttrObj;labelStore[curCategoryIndex].config.props.label.css=css}}};_proto.allocatePosition=function allocatePosition(){var axis=this,axisConfig=axis.config;if(!axisConfig.tickValues){axisConfig.drawLabels&&axis._parseLabel()}else{axisConfig.drawLabels&&axis._parseCategory()}};_proto._drawCategory=function _drawCategory(){var axis=this,axisConfig=axis.config,chart=axis.getFromEnv(\"chart\"),chartConfig=chart.config,labels=axisConfig.labels,animationManager=axis.getFromEnv(\"animationManager\"),style=labels.style,toolTipController=this.getFromEnv(\"toolTipController\"),axisContainer=axisConfig.axisContainer,categoryLabel=axis.config.categoryLabel||(axis.config.categoryLabel=[]),raiseEvent=function raiseEvent(event){return function(data){var ele=this;chart.plotEventHandler(ele,data,event)}},tickArr=axisConfig.tickValues.tickValue,i,curCategory,textElement,axisAttrObj,diff,curCategoryValue,categoryArr,categoryArrStr=[],tempEle,ln,config,removingElement,curCategoryIndex;if(axisConfig.labels.isDraw){axisContainer.css(axisConfig.ParentCss);categoryArr=axis._getCategoryArr();diff=(0,_differenceWith.default)((function(prev,now){return prev.value===now.value}),axisConfig.prevCategoryIntervalArr,categoryArr);for(i=0,ln=diff.length;i<ln;i++){removingElement=axis.getGraphicalElement(\"\"+diff[i].value+LABEL_ID);if(removingElement){axis.removeGraphicalElement(removingElement)}}axisConfig.prevCategoryIntervalArr=(0,_lib.extend2)([],categoryArr);for(i=0,ln=categoryArr.length;i<ln;i+=1){categoryArrStr[i]=\"\"+categoryArr[i].value+LABEL_ID}for(i=0,ln=categoryArr.length;i<ln;i+=1){curCategoryIndex=categoryArr[i].index;curCategory=tickArr[curCategoryIndex];config=axis.components.labels[curCategoryIndex].config;axisAttrObj=config.props.label.attr;tempEle=axis.getGraphicalElement(categoryArrStr[i]);textElement=animationManager.setAnimation({el:tempEle||\"text\",attr:axisAttrObj,container:axisContainer,data:{value:curCategoryValue},component:axis,label:\"text\",css:config.props.label.css});if(!tempEle){axis.addGraphicalElement(categoryArrStr[i],textElement);textElement.on(\"fc-click\",raiseEvent(\"dataLabelClick\")).hover(raiseEvent(\"dataLabelRollOver\"),raiseEvent(\"dataLabelRollOut\"))}textElement.data(EVENTARGS,{link:!chartConfig.singleseries&&curCategory.link||curCategory.labellink||style.labelLink,text:axisAttrObj.text,index:curCategoryIndex});if(curCategory.labelTooltext||textElement.abbrArr){toolTipController.enableToolTip(textElement,curCategory.labelTooltext)}else{toolTipController.disableToolTip(textElement)}categoryLabel[curCategoryIndex]=textElement}}else{for(i=0,ln=axisConfig.prevCategoryIntervalArr.length;i<ln;i++){removingElement=axis.getGraphicalElement(\"\"+axisConfig.prevCategoryIntervalArr[i].value+LABEL_ID);if(removingElement){axis.removeGraphicalElement(removingElement)}}}};_proto._getCategoryArr=function _getCategoryArr(){var axis=this,axisConfig=axis.config,isVertical=axisConfig.isVertical,tempStep=0,count=0,category,i,max,min,curCategory,getLimit,curCategoryValue,increment,intervalWidth,checkForLimit,retArr=[];category=axisConfig.tickValues.tickValue;min=minimumEnquiry(category);max=category?category.length-1:0;if(isVertical){intervalWidth=Math.abs(axis.getPixel(0,queryOptions)-axis.getPixel(1,queryOptions));if(axisConfig.labelMaxH>intervalWidth){tempStep=Math.ceil(axisConfig.labelMaxH/intervalWidth)}if(tempStep>axisConfig.labels.step){axisConfig.labels.step=tempStep}}increment=axisConfig.labels.step>0?axisConfig.labels.step:1;checkForLimit=axis.getZoom()!==1;getLimit=this.getVisibleConfig();for(i=min;i<=max;i+=increment){curCategory=category[i];if(!curCategory){continue}curCategoryValue=(0,_lib.pluckNumber)(curCategory.x,curCategory.y,i);if((0,_lib.pluckNumber)(curCategory.showlabel,axisConfig.showLabels,1)===0){continue}if(checkForLimit&&(curCategoryValue<getLimit.minValue||curCategoryValue>getLimit.maxValue)){curCategory.labelCount=count++;continue}if((axisConfig.xAxisLabelMode===\"auto\"||axisConfig.xAxisLabelMode===\"mixed\")&&(axisConfig.showZeroPlane===0||axisConfig.showZeroPlaneValue===0)&&curCategoryValue===0){continue}if(!axisConfig.labels.drawNormalVal&&!(axisConfig.labels.drawLimitVal&&(i===min||i===max))){continue}if(!axisConfig.labels.drawNormalVal&&!(i===min||i===max)){continue}if(!axisConfig.labels.drawLimitVal&&(i===min||i===max)){continue}curCategory.labelCount=count++;retArr.push({index:i,value:curCategoryValue})}return retArr};_proto.getValue=function getValue(pixel,options){if(options===void 0){options={wrtVisible:false}}var scale=this.getScale(),translateValue=this.getTranslation(),domainValue=scale.getDomainValue(options.wrtVisible?pixel:pixel-translateValue);return domainValue};_proto.getPixel=function getPixel(value,options){if(options===void 0){options={wrtVisible:false}}var scale=this.getScale(),translateValue=this.getTranslation(),rangeValue=scale.getRangeValue(value);return options.wrtVisible?rangeValue:rangeValue+translateValue};_proto._getCustomPixel=function _getCustomPixel(value,length,options){if(options===void 0){options={wrtVisible:false}}if(!length){return this.getPixel(value,options)}var newScale=this.getScale().copy(),_newScale$getRange=newScale.getRange(),val1=_newScale$getRange[0],val2=_newScale$getRange[1],min=Math.min(val1,val2),rangeValue=newScale.getRangeValue(value),translateValue=this.getTranslation();newScale.setRange([min,min+length]);return options.wrtVisible?rangeValue:rangeValue+translateValue};_proto.getTranslation=function getTranslation(){return this.config.translation||0};_proto.setVisibleConfig=function setVisibleConfig(minValue,maxValue){var axis=this,axisConfig=axis.config,prevZoom=axis.getZoom(),scale=axis.getScale(),domain;if(minValue>=maxValue||minValue<axisConfig.axisRange.min||maxValue>axisConfig.axisRange.max){return false}domain=scale.setDomain([minValue,maxValue]).getDomain();axisConfig.visibleMin=domain[0];axisConfig.visibleMax=domain[1];axisConfig.zoom=axis._computeZoom();axisConfig.translation=axis._computeTranslation();if(prevZoom!==1||axis.getZoom()!==1){axisConfig.ticks=axis.generateTicks();axisConfig.minorTicks=axis.generateMinorTicks();axisConfig.tickValues&&axis.calculateTicksOnLabelMode&&axis.calculateTicksOnLabelMode()}axis.clearReferenceInfo();axis._parseReferenceVisuals();axis.fireEvent(\"visiblerangeset\",{minValue:minValue,maxValue:maxValue});axis.asyncDraw();return true};_proto.hide=function hide(){var axis=this,axisConfig=axis.config;if(!axisConfig.axisContainer){return}axisConfig.axisLabelContainerTop.hide();axisConfig.axisContainer.hide();axisConfig.axisNameContainer.hide();axisConfig.axisTrendLabelContainer.hide();axisConfig.axisAxisLineContainer.hide();axisConfig.axisAxisLineContainerBottom.hide()};_proto.show=function show(){var axis=this,axisConfig=axis.config;if(!axisConfig.axisContainer){return}axisConfig.axisLabelContainerTop.show();axisConfig.axisContainer.show();axisConfig.axisNameContainer.show();axisConfig.axisTrendLabelContainer.show();axisConfig.axisAxisLineContainer.show();axisConfig.axisAxisLineContainerBottom.show()};_proto.getZoom=function getZoom(){return this.config.zoom||1};_proto._computeTranslation=function _computeTranslation(){var axisConfig=this.config,visibleDomain=this.getVisibleConfig(),visibleMin=(0,_lib.pluckNumber)(visibleDomain.minValue,axisConfig.axisRange.min,0),rangeMin=(0,_lib.pluckNumber)(axisConfig.axisRange.min,visibleDomain.minValue,0);return this.getPixel(visibleMin)-this.getPixel(rangeMin)};_proto._computeZoom=function _computeZoom(){var axisConfig=this.config,visibleDomain=this.getVisibleConfig(),visibleMin=(0,_lib.pluckNumber)(visibleDomain.minValue,axisConfig.axisRange.min,0),visibleMax=(0,_lib.pluckNumber)(visibleDomain.maxValue,axisConfig.axisRange.max,1),rangeMin=(0,_lib.pluckNumber)(axisConfig.axisRange.min,visibleDomain.minValue,0),rangeMax=(0,_lib.pluckNumber)(axisConfig.axisRange.max,visibleDomain.maxValue,1),zoomLimit=axisConfig.maxZoomLimit,zoom=(rangeMax-rangeMin)/(visibleMax-visibleMin);return zoom>zoomLimit?zoomLimit:zoom};_proto.getTickValues=function getTickValues(){var tickInfo=this.config.tickValues;return tickInfo&&tickInfo.tickValue||[]};_proto.dataLabels=function dataLabels(value){var axis=this,axisIndex=axis.config.axisIndex,numberFormatter=axis.getFromEnv(\"number-formatter\");return numberFormatter.dataLabels(value,axisIndex)};_proto.getAxisBase=function getAxisBase(){var _this$getVisibleConfi=this.getVisibleConfig(),minValue=_this$getVisibleConfi.minValue,maxValue=_this$getVisibleConfi.maxValue;return minValue<0&&maxValue>0?0:maxValue<=0?maxValue:minValue};_proto._parseReferenceVisuals=function _parseReferenceVisuals(){var axis=this,axisConfig=axis.config,tickValues=axis.getTickValues(),min=0,max=tickValues.length,is3d=axis.getFromEnv(\"chartConfig\").is3D,preLineDrawState,preBandDrawState;if(!axisConfig.isActive){preLineDrawState=axisConfig.lines.isDraw;preBandDrawState=axisConfig.band.isDraw;axisConfig.lines.isDraw=0;axisConfig.band.isDraw=0}if(!axisConfig.tickValues){axisConfig.drawPlotlines&&axis._parsePlotLine()}else{axisConfig.drawLabels&&axis._parseCategoryLine(tickValues,min,max)}if(!axisConfig.tickValues||axisConfig.xAxisLabelMode===\"auto\"){axisConfig.drawPlotBands&&!is3d&&axis._parsePlotBand()}else{axisConfig.drawPlotlines&&!is3d&&axis._parseCategoryPlotLine();axisConfig.drawPlotBands&&!is3d&&axis._parseCategoryPlotBand();if(axisConfig.xAxisLabelMode===\"mixed\"){axisConfig.drawPlotBands&&!is3d&&axis._parsePlotBand()}}if(!axisConfig.isActive){axisConfig.lines.isDraw=preLineDrawState;axisConfig.band.isDraw=preBandDrawState}axisConfig.drawTrendLines&&axis._parseTrendLine()};_proto._parseCategoryPlotBand=function _parseCategoryPlotBand(){var axis=this,axisConfig=axis.config,tickValue=axisConfig.tickValues.tickValue,showAlternateGridColor=axisConfig.showAlternateGridColor,alternateGridColor=axisConfig.alternateGridColor,alternateGridAlpha=axisConfig.alternateGridAlpha,ticks=axisConfig._allTicks,limit=axis.getLimit(),min=limit.min,max=limit.max,axisAttrObj,colorDetector,from,to,willDraw=isVisible(axis.getVisibleConfig()),i;if(tickValue[0]&&(tickValue[0].x!==_lib.UNDEF||tickValue[0].y!==_lib.UNDEF)){return}if(showAlternateGridColor&&axisConfig.band.isDraw&&axisConfig.categoryNumDivLines){axisAttrObj={fill:(0,_lib.toRaphaelColor)((0,_lib.convertColor)(alternateGridColor,alternateGridAlpha)),\"stroke-width\":0};colorDetector=0;for(i=0;i<ticks.length;++colorDetector,++i){if(!willDraw(ticks[i],ticks[i+1])){continue}from=ticks[i];if(colorDetector%2!==0){continue}to=ticks[i+1];if(to===_lib.UNDEF){continue}if(from===min)from=\"canvasStart\";if(to===max)to=\"canvasEnd\";axis.setReferenceInfo({from:from,to:to,layer:0,type:\"band\",attr:axisAttrObj})}}};_proto._parseTrendLine=function _parseTrendLine(){var axis=this,axisConfig=axis.config,isVertical=axisConfig.isVertical,axisIndex=axisConfig.axisIndex,chartAttr=axis.getFromEnv(\"chart-attrib\"),numberFormatter=axis.getFromEnv(\"number-formatter\"),axisRange=axisConfig.axisRange,max=axisRange.max,min=axisRange.min,style=axisConfig.trend.trendStyle,css={fontFamily:style.fontFamily,fontSize:style.fontSize,lineHeight:style.lineHeight,fontWeight:style.fontWeight,fontStyle:style.fontStyle},vtrendlines=axisConfig.vTrendLines,trendlines=axisConfig.trendLines,i,iLim,j,jLen,toolText,showOnTop,counter=0,comTrendLines,isTrendZone,axisDrawingAttrObj,axisTextAttrObj,trendObj,text,valueOnRight,startValue,endValue,strokeWidth,NFMethodName,from,type,to;comTrendLines=trendlines||vtrendlines;if(comTrendLines){for(j=0,jLen=comTrendLines.length;j<jLen;j+=1){for(i=0,iLim=comTrendLines[j].line&&comTrendLines[j].line.length;i<iLim;i+=1){trendObj=comTrendLines[j].line[i];NFMethodName=axisConfig.isPercent?\"yAxisPercentValue\":isVertical?\"yAxis\":\"xAxis\";startValue=trendObj.startvalue||trendObj.value||0;startValue=numberFormatter.getCleanValue((0,_lib.pluck)(trendObj.startvalue,trendObj.value,0));endValue=isNaN(trendObj.endvalue)||trendObj.endvalue===\"\"?_lib.UNDEF:trendObj.endvalue;toolText=(0,_lib.getValidValue)((0,_lib.parseUnsafeString)((0,_lib.pluck)(comTrendLines[j].line[i].tooltext,comTrendLines[0].tooltext,axisConfig.trendlineToolText),false));toolText=(0,_lib.parseTooltext)(toolText,[7,15,16,17,18,19],{startValue:startValue,startDataValue:numberFormatter[NFMethodName](startValue,axisIndex),endValue:endValue||startValue,endDataValue:numberFormatter[NFMethodName](endValue||startValue,axisIndex),axisName:axisConfig.axisName},trendObj);if(startValue>max||startValue<min||endValue>max||endValue<min){continue}if(vtrendlines){text=(0,_lib.parseUnsafeString)(trendObj.displayvalue||\"\");isTrendZone=(0,_lib.pluckNumber)(trendObj.istrendzone,axisConfig.isTrendZone,1);if(endValue!==_lib.UNDEF&&endValue!==\"\"&&endValue!==startValue&&isTrendZone){axisDrawingAttrObj={fill:(0,_lib.convertColor)((0,_lib.pluck)(trendObj.color,axisConfig.trendlineColor),(0,_lib.pluck)(trendObj.alpha,axisConfig.trendlineAlpha,40)),\"stroke-width\":0};axisTextAttrObj={fill:(0,_lib.convertColor)((0,_lib.pluck)(trendObj.color,style.color),(0,_lib.pluck)(trendObj.valuealpha,chartAttr.trendvaluealpha,trendObj.alpha,axisConfig.trendlineAlpha,99)),\"vertical-align\":_lib.POSITION_TOP,text:text}}else{strokeWidth=(0,_lib.pluckNumber)(trendObj.thickness,axisConfig.trendlineThickness,1);axisDrawingAttrObj={stroke:(0,_lib.convertColor)((0,_lib.pluck)(trendObj.color,axisConfig.trendlineColor),(0,_lib.pluck)(trendObj.alpha,axisConfig.trendlineAlpha,99)),\"stroke-width\":strokeWidth,\"stroke-dasharray\":(0,_lib.pluck)(trendObj.dashed,axisConfig.trendlinesAreDashed)===_lib.ONESTRING?(0,_lib.getDashStyle)((0,_lib.pluckNumber)(trendObj.dashlen,axisConfig.trendlinesDashLen),(0,_lib.pluckNumber)(trendObj.dashgap,axisConfig.trendlinesDashGap)):_lib.DASH_DEF};axisTextAttrObj={fill:(0,_lib.convertColor)((0,_lib.pluck)(trendObj.color,style.color),(0,_lib.pluck)(trendObj.valuealpha,chartAttr.trendvaluealpha,trendObj.alpha,axisConfig.trendlineAlpha,99)),\"vertical-align\":_lib.POSITION_TOP,text:text}}}else if(trendlines){text=(0,_lib.pluck)((0,_lib.parseUnsafeString)(trendObj.displayvalue),trendObj.startvalue,\"\");valueOnRight=(0,_lib.pluckNumber)(trendObj.valueonright,axisConfig.isOpposit?1:0);isTrendZone=(0,_lib.pluckNumber)(trendObj.istrendzone,axisConfig.isTrendZone,0);if(endValue!==_lib.UNDEF&&endValue!==\"\"&&endValue!==startValue&&isTrendZone){axisDrawingAttrObj={fill:(0,_lib.convertColor)((0,_lib.pluck)(trendObj.color,axisConfig.trendlineColor),(0,_lib.pluck)(trendObj.alpha,axisConfig.trendlineAlpha,40)),\"stroke-width\":0};axisTextAttrObj={\"text-anchor\":valueOnRight?_lib.POSITION_START:_lib.POSITION_END,fill:(0,_lib.convertColor)((0,_lib.pluck)(trendObj.color,style.color),(0,_lib.pluck)(trendObj.valuealpha,chartAttr.trendvaluealpha,trendObj.alpha,axisConfig.trendlineAlpha,99)),text:text}}else{strokeWidth=(0,_lib.pluckNumber)(trendObj.thickness,axisConfig.trendlineThickness,1);axisDrawingAttrObj={stroke:(0,_lib.convertColor)((0,_lib.pluck)(trendObj.color,axisConfig.trendlineColor),(0,_lib.pluck)(trendObj.alpha,axisConfig.trendlineAlpha,99)),\"stroke-width\":strokeWidth,\"stroke-dasharray\":(0,_lib.pluck)(trendObj.dashed,axisConfig.trendlinesAreDashed)===_lib.ONESTRING?(0,_lib.getDashStyle)((0,_lib.pluckNumber)(trendObj.dashlen,axisConfig.trendlinesDashLen),(0,_lib.pluckNumber)(trendObj.dashgap,axisConfig.trendlinesDashGap)):_lib.DASH_DEF};axisTextAttrObj={\"text-anchor\":valueOnRight?_lib.POSITION_START:_lib.POSITION_END,fill:(0,_lib.convertColor)((0,_lib.pluck)(trendObj.color,style.color),(0,_lib.pluck)(trendObj.valuealpha,chartAttr.trendvaluealpha,trendObj.alpha,axisConfig.trendlineAlpha,99)),text:text}}}axisTextAttrObj[\"text-bound\"]=axisTextAttrObj.text?[style.backgroundColor,style.borderColor,style.borderThickness,style.borderPadding,style.borderRadius,style.borderDash]:[];if(!(axisConfig.showTooltip&&toolText)){toolText=_lib.BLANKSTRING}showOnTop=axisConfig.forceTrendBelow?0:(0,_lib.pluckNumber)(trendObj.showontop,chartAttr.showtrendlinesontop,0);if(isVertical){from=startValue;to=endValue!==_lib.UNDEF?endValue:startValue}else{from=endValue!==_lib.UNDEF?endValue:startValue;to=startValue}type=isTrendZone&&from!==to?\"band\":\"line\";from!==_lib.UNDEF&&axis.setReferenceInfo({from:from,to:to,toolText:toolText,attr:axisDrawingAttrObj,layer:showOnTop?3:2,type:type,id:\"trend\"+counter+type});axisConfig.parsedTrendLabels.push({css:css,valueOnRight:valueOnRight,isTrendZone:isTrendZone,from:startValue,to:endValue,attr:axisTextAttrObj});counter+=1}}}};_proto._parsePlotLine=function _parsePlotLine(){var axis=this,axisConfig=axis.config,axisRange=axisConfig.axisRange,max=axisRange.max,min=axisRange.min,willDraw=isInBetween(axis.getVisibleConfig()),showCanvasBorder=axisConfig.showCanvasBorder,plotLineColor=(0,_lib.convertColor)(axisConfig.divLineColor,axisConfig.divLineAlpha),plotLineWidth=axisConfig.divLineThickness,plotLineDashStyle=axisConfig.divLineIsDashed?(0,_lib.getDashStyle)(axisConfig.divLineDashLen,axisConfig.divLineDashGap):_lib.DASH_DEF,zeroPlaneColor=(0,_lib.convertColor)(axisConfig.zeroPlaneColor,axisConfig.zeroPlaneAlpha),zeroPlaneThickness=axisConfig.zeroPlaneThickness,ticks=axisConfig._allTicks,len=ticks.length,i,j,showZeroPlaneOnTop=axisConfig.showZeroPlaneOnTop,minorTicksArr=axisConfig.minorTicks,minorTicksLen=minorTicksArr&&minorTicksArr.length,minorTicks,axisAttrObj,minorAttrObj;if(axisConfig.lines.isDraw){for(j=0;j<len;++j){i=ticks[j];if(!willDraw(i)){continue}axisAttrObj={\"stroke-dasharray\":plotLineDashStyle};if(axisConfig.showZeroPlane===0&&i===0||showCanvasBorder&&(i===max||i===min)){continue}if(i===0&&i!==min&&i!==max){axisAttrObj.stroke=zeroPlaneColor;axisAttrObj[\"stroke-width\"]=zeroPlaneThickness;showZeroPlaneOnTop=axisConfig.showZeroPlaneOnTop}else{showZeroPlaneOnTop=0;axisAttrObj.stroke=plotLineColor;axisAttrObj[\"stroke-width\"]=plotLineWidth}axis.setReferenceInfo({type:\"line\",from:i,layer:i===0&&showZeroPlaneOnTop?3:1,attr:axisAttrObj})}}minorAttrObj={stroke:axisConfig.minorDivlinecolor,\"stroke-width\":axisConfig.minorDivLineThickness,\"stroke-dasharray\":plotLineDashStyle};for(j=0;j<minorTicksLen;++j){minorTicks=minorTicksArr[j];axis.setReferenceInfo({type:\"line\",from:minorTicks,layer:1,attr:minorAttrObj})}};_proto._parseCategoryLine=function _parseCategoryLine(category,_min,_max){var axis=this,min=_min,max=_max,axisConfig=axis.config,colorM=axis.getFromEnv(\"color-manager\"),chartInstance=axis.getFromEnv(\"chartInstance\"),categories=chartInstance.getJSONData().categories,categoriesStyle={},i,curCategory,getLimit,categoryLineAttr,curCategoryValue,checkForLimit;min=min||0;max=max||category?category.length-1:0;if(axisConfig.drawPlotlines){checkForLimit=axis.getZoom()!==1;getLimit=this.getVisibleConfig();if(categories&&categories[0]){categoriesStyle.verticalLineColor=categories[0].verticallinecolor;categoriesStyle.verticalLineAlpha=categories[0].verticallinealpha;categoriesStyle.verticalLineThickness=categories[0].verticallinethickness;categoriesStyle.verticalLineDashed=categories[0].verticallinedashed;categoriesStyle.verticalLineDashLen=categories[0].verticallinedashlen;categoriesStyle.verticalLineDashGap=categories[0].verticallinedashgap}for(i=min;i<=max;i+=1){curCategory=category[i];if(!curCategory){continue}curCategoryValue=(0,_lib.pluckNumber)(curCategory.x,curCategory.y,i);if(Number(curCategory.showverticalline)!==1){continue}if(checkForLimit&&(curCategoryValue<getLimit.minValue||curCategoryValue>getLimit.maxValue)){continue}categoryLineAttr={stroke:(0,_lib.convertColor)((0,_lib.pluck)(curCategory.linecolor,categoriesStyle.verticalLineColor,axisConfig.divLineColor,colorM.getColor(\"divLineColor\")),(0,_lib.pluck)(curCategory.linealpha,categoriesStyle.verticalLineAlpha,colorM.getColor(\"divLineAlpha\"))),\"stroke-width\":(0,_lib.pluckNumber)(curCategory.linethickness,categoriesStyle.verticalLineThickness,1)};categoryLineAttr[\"stroke-dasharray\"]=(0,_lib.pluckNumber)(curCategory.linedashed,categoriesStyle.verticalLineDashed,0)?(0,_lib.getDashStyle)((0,_lib.pluckNumber)(curCategory.linedashLen,categoriesStyle.verticalLineDashLen,4),(0,_lib.pluckNumber)(curCategory.linedashgap,categoriesStyle.verticalLineDashGap,2),categoryLineAttr[\"stroke-width\"]):_lib.DASH_DEF;axis.setReferenceInfo({type:\"line\",from:curCategoryValue,layer:1,attr:categoryLineAttr})}}};_proto._parsePlotBand=function _parsePlotBand(){var axis=this,axisConfig=axis.config,showAlternateGridColor=axisConfig.showAlternateGridColor,alternateGridColor=axisConfig.alternateGridColor,alternateGridAlpha=axisConfig.alternateGridAlpha,axisAttrObj,colorDetector,ticks=axisConfig._allTicks,len,willDraw=isVisible(axis.getVisibleConfig()),i,to,isReverse=axisConfig.isReverse,from;if(showAlternateGridColor&&axisConfig.band.isDraw){colorDetector=1;axisAttrObj={fill:(0,_lib.toRaphaelColor)((0,_lib.convertColor)(alternateGridColor,alternateGridAlpha)),\"stroke-width\":0};for(i=0,len=ticks.length;i<len;++i,++colorDetector){if(!willDraw(ticks[i],ticks[i+1])){continue}if(colorDetector%2!==0){continue}if(ticks[i+1]===_lib.UNDEF){continue}from=isReverse?Math.max(ticks[i],ticks[i+1]):Math.min(ticks[i],ticks[i+1]);to=isReverse?Math.min(ticks[i],ticks[i+1]):Math.max(ticks[i],ticks[i+1]);axis.setReferenceInfo({from:from,to:to,type:\"band\",layer:0,attr:axisAttrObj})}}};_proto.getReferenceInfo=function getReferenceInfo(){return this.config.referenceInfo};_proto.setReferenceInfo=function setReferenceInfo(info){this.config.referenceInfo.push(info)};_proto.clearReferenceInfo=function clearReferenceInfo(){var axisConfig=this.config;axisConfig.referenceInfo=[];axisConfig.parsedTrendLabels=[];axisConfig.parsedVlineInfo=[]};_proto.resetStoredLimits=function resetStoredLimits(){this.config.dataLimit={}};_proto.getAxisDimension=function getAxisDimension(){var _this$config$axisDime=this.config.axisDimention,x=_this$config$axisDime.x,y=_this$config$axisDime.y,opposite=_this$config$axisDime.opposite,axisLength=_this$config$axisDime.axisLength;return{x:x,y:y,opposite:opposite,axisLength:axisLength}};return Cartesian}(_axis.default);Cartesian.prototype.setAxisDimention=_commonApi.setAxisDimention;Cartesian.prototype.shiftLabels=_commonApi.shiftLabels;Cartesian.prototype._createContainer=_commonApi._createContainer;var _default=Cartesian;exports.default=_default;"]},"metadata":{},"sourceType":"script"}