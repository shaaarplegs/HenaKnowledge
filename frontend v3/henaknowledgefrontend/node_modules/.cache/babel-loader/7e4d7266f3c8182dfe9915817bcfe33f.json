{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _componentInterface = require(\"../component-interface\");\n\nvar _colorBucket = _interopRequireDefault(require(\"./color-bucket\"));\n\nvar _gradientColorRange = _interopRequireDefault(require(\"./gradient-color-range\"));\n\nvar _lib = require(\"../lib\");\n\nvar GRADIENT = \"gradient\",\n    ICON = \"icon\",\n    NONE = \"none\";\n\nfunction getOppositeColor(code) {\n  return (0, _lib.getLightColor)(code, 1);\n}\n\nfunction getValidHexColor(code) {\n  var color = code || DEF_COLOR;\n  return (0, _lib.getValidColor)(color) || DEF_COLOR;\n}\n\nvar TRACKER_FILL = \"rgba(192,192,192,\" + (_lib.isIE ? .002 : 1e-6) + \")\",\n    UNDEF,\n    PERCENT_STR = \"%\",\n    DEF_COLOR = \"#000000\",\n    legendManager = function () {\n  var chart,\n      defaultConf = {};\n  defaultConf.legendCarpetConf = {\n    spreadFactor: .85,\n    allowDrag: false,\n    captionAlignment: \"center\",\n    padding: {\n      v: 3,\n      h: 3\n    },\n    style: {\n      fill: \"#e4d9c1\",\n      stroke: \"#c4b89d\"\n    }\n  };\n  defaultConf.legendCaptionConf = {\n    spreadFactor: .2,\n    padding: {\n      v: 2,\n      h: 2\n    },\n    style: {\n      fill: \"#786B50\",\n      fontFamily: \"sans-serif\",\n      fontSize: \"12px\",\n      fontWeight: \"bold\",\n      fontStyle: \"normal\"\n    },\n    bound: {\n      style: {\n        stroke: \"none\"\n      }\n    }\n  };\n  defaultConf.legendBodyConf = {\n    spreadFactor: .8,\n    padding: {\n      v: 2,\n      h: 2\n    },\n    bound: {\n      style: {\n        stroke: \"none\"\n      }\n    }\n  };\n  defaultConf.legendAxisConf = {\n    legendAxisHeight: 11,\n    spreadFactor: .4,\n    padding: {\n      v: 1,\n      h: 1\n    },\n    style: {\n      stroke: \"none\",\n      \"stroke-opacity\": 0,\n      \"stroke-width\": 1\n    },\n    line: {\n      grooveLength: 3,\n      offset: 8,\n      style: {\n        stroke: \"rgba(255, 255, 255, 0.65)\",\n        \"stroke-width\": 1.5\n      }\n    },\n    shadow: {\n      style: {\n        stroke: \"none\",\n        fill: (0, _lib.toRaphaelColor)({\n          FCcolor: {\n            alpha: \"25,0,0\",\n            angle: 360,\n            color: \"000000,FFFFFF,FFFFFF\",\n            ratio: \"0,30,40\"\n          }\n        })\n      }\n    },\n    bound: {\n      style: {\n        stroke: \"none\"\n      }\n    }\n  };\n  defaultConf.sliderGroupConf = {\n    showTooltip: 1,\n    outerCircle: {\n      rFactor: 1.4,\n      style: {\n        fill: TRACKER_FILL,\n        stroke: \"#757575\",\n        \"stroke-width\": 3\n      }\n    },\n    innerCircle: {\n      rFactor: .65,\n      style: {\n        fill: TRACKER_FILL,\n        stroke: \"#FFFFFF\"\n      }\n    }\n  };\n  defaultConf.axisTextItemConf = {\n    spreadFactor: .3,\n    padding: {\n      v: 1,\n      h: 1\n    },\n    style: {\n      fill: \"#786B50\",\n      fontFamily: \"sans-serif\",\n      fontSize: \"12px\",\n      fontWeight: \"normal\",\n      fontStyle: \"normal\"\n    }\n  };\n\n  function normalizePreprocessedData(confArr) {\n    var numberFormatter = chart.getFromEnv(\"number-formatter\"),\n        index,\n        length,\n        rawVal;\n\n    for (index = 0, length = confArr.length; index < length; index++) {\n      rawVal = confArr[index].maxvalue;\n\n      if (!rawVal) {\n        continue;\n      }\n\n      confArr[index].maxvalue = numberFormatter.getCleanValue(rawVal);\n    }\n  }\n\n  return {\n    init: function init(options) {\n      chart = options.chart;\n    },\n    legacyDataParser: function legacyDataParser(data, _extremes) {\n      var colormanagerConf = {},\n          numberFormatter = chart.getFromEnv(\"number-formatter\"),\n          dataSource = chart.getFromEnv(\"dataSource\"),\n          mapData = dataSource.data,\n          colorConfArr,\n          colorConf,\n          startColor,\n          endColor,\n          index,\n          validColor,\n          length,\n          colorRange,\n          value,\n          dispValue,\n          mapByPercent,\n          isMaxValPresent,\n          extremes = _extremes || {};\n\n      if (!data) {\n        return false;\n      }\n\n      if (chart.defaultDatasetType === \"maps\" && (extremes.min === UNDEF || extremes.max === UNDEF)) {\n        extremes = {\n          min: Infinity,\n          max: -Infinity\n        };\n        mapData && mapData.forEach(function (dataObj) {\n          extremes.min = Math.min(extremes.min, (0, _lib.pluckNumber)(dataObj.value, extremes.min));\n          extremes.max = Math.max(extremes.max, (0, _lib.pluckNumber)(dataObj.value, extremes.min));\n        });\n      } else if (chart.getName() === \"HeatMap\" && (extremes.min === UNDEF || extremes.max === UNDEF)) {\n        extremes = {\n          min: Infinity,\n          max: -Infinity\n        };\n        dataSource.dataset.forEach(function (dataset) {\n          dataset.data && dataset.data.forEach(function (dataObj) {\n            extremes.min = Math.min(extremes.min, (0, _lib.pluckNumber)(dataObj.value, extremes.min));\n            extremes.max = Math.max(extremes.max, (0, _lib.pluckNumber)(dataObj.value, extremes.max));\n          });\n        });\n      }\n\n      colormanagerConf.mapByPercent = mapByPercent = !!(0, _lib.pluckNumber)(data.mapbypercent, 0);\n      colorConfArr = data.color || [];\n\n      if (data.minvalue === UNDEF) {\n        data.minvalue = extremes.min !== UNDEF ? mapByPercent ? 0 : extremes.min : 0;\n      }\n\n      if (data.maxvalue === UNDEF) {\n        data.maxvalue = extremes.max !== UNDEF ? mapByPercent ? 100 : extremes.max : 100;\n      }\n\n      if (data.maxvalue === data.minvalue || extremes.min === Infinity || extremes.max === -Infinity) {\n        data.minvalue = 0;\n        data.maxvalue = 100;\n      }\n\n      isMaxValPresent = false;\n\n      for (index = 0, length = colorConfArr.length; index < length; index++) {\n        if (colorConfArr[index].maxvalue) {\n          isMaxValPresent = true;\n          break;\n        }\n      }\n\n      if (!isMaxValPresent) {\n        colorConfArr = [];\n      }\n\n      startColor = data.code;\n      colorRange = colormanagerConf.colorRange = [];\n      colormanagerConf.gradient = !!(0, _lib.pluckNumber)(data.gradient, 1);\n\n      if (!colorConfArr.length) {\n        if (startColor) {\n          endColor = getValidHexColor(startColor);\n          startColor = getValidHexColor();\n        } else {\n          startColor = getValidHexColor();\n          endColor = getOppositeColor(startColor);\n        }\n\n        colorConfArr.push({\n          code: endColor,\n          maxvalue: data.maxvalue,\n          label: UNDEF\n        });\n      } else {\n        startColor = getValidHexColor(startColor);\n      }\n\n      normalizePreprocessedData(colorConfArr);\n      colorConfArr = colorConfArr.sort(function _colorConfComparator(m, n) {\n        return m.maxvalue - n.maxvalue;\n      });\n      value = dispValue = data.minvalue && numberFormatter.getCleanValue(data.minvalue);\n      dispValue = (value !== UNDEF || value !== null) && (mapByPercent ? value + PERCENT_STR : numberFormatter.legendValue(value));\n      colorRange.push({\n        code: (0, _lib.dehashify)(startColor),\n        value: value,\n        displayValue: dispValue,\n        label: data.startlabel\n      });\n\n      for (index = 0, length = colorConfArr.length; index < length; index++) {\n        colorConf = colorConfArr[index];\n        validColor = getValidHexColor(colorConf.code || colorConf.color);\n        value = dispValue = colorConf.maxvalue;\n\n        if (isNaN(parseInt(value, 10))) {\n          continue;\n        }\n\n        dispValue = (value !== UNDEF || value !== null) && (mapByPercent ? value + PERCENT_STR : numberFormatter.legendValue(value));\n        colorRange.push({\n          code: (0, _lib.dehashify)(validColor),\n          value: value,\n          displayValue: dispValue,\n          label: colorConf.label || colorConf.displayvalue\n        });\n      }\n\n      colorRange[colorRange.length - 1].label = data.endlabel || colorConf.label;\n      return colormanagerConf;\n    },\n    getDefaultConf: function getDefaultConf(key) {\n      return defaultConf[key];\n    }\n  };\n}();\n\nvar ColorRange = function (_ComponentInterface) {\n  (0, _inheritsLoose2.default)(ColorRange, _ComponentInterface);\n\n  function ColorRange() {\n    var _this;\n\n    _this = _ComponentInterface.call(this) || this;\n    _this.datasource = {};\n    _this.config.legendItemIds = [];\n    return _this;\n  }\n\n  var _proto = ColorRange.prototype;\n\n  _proto.configure = function configure() {\n    var colorManager = this,\n        chart = this.getFromEnv(\"chart\"),\n        colorrange,\n        legendType,\n        mapByCategory = this.getFromEnv(\"dataSource\").chart.mapbycategory,\n        nData,\n        showLegend = chart.config.showLegend,\n        colorRangeInstance = chart.getChildren(\"colorRange\") && chart.getChildren(\"colorRange\")[0];\n    chart.addToEnv(\"colorManager\", colorManager);\n    colorManager.datasource = chart.getFromEnv(\"dataSource\");\n    colorrange = colorManager.datasource.colorrange;\n    colorRangeInstance && colorRangeInstance.remove({\n      instant: true\n    });\n\n    if (!showLegend) {\n      colorManager.config.legendItemIds = [];\n    }\n\n    if (chart.defaultDatasetType === \"maps\") {\n      if (colorrange.gradient && Number(colorrange.gradient)) {\n        legendType = GRADIENT;\n      } else if (colorrange.color) {\n        legendType = ICON;\n      } else {\n        legendType = NONE;\n      }\n    } else if (chart.getName() === \"TreeMap\") {\n      legendType = GRADIENT;\n    } else {\n      if (colorrange.gradient && colorrange.gradient !== \"0\" && !Number(mapByCategory)) {\n        legendType = GRADIENT;\n      } else {\n        legendType = ICON;\n      }\n    }\n\n    switch (legendType) {\n      case GRADIENT:\n        legendManager.init({\n          chart: chart\n        });\n        nData = legendManager.legacyDataParser(colorrange);\n        (0, _lib.componentFactory)(chart, _gradientColorRange.default, \"colorRange\", 1, [nData]);\n        colorRangeInstance = chart.getChildren(\"colorRange\")[0];\n        chart.addToEnv(\"colorRange\", colorRangeInstance);\n\n        if (!nData) {\n          colorRangeInstance._dontPlot = true;\n        }\n\n        colorManager.config.legendItemIds = [];\n\n        colorManager._configureGradientLegend(colorRangeInstance);\n\n        break;\n\n      case \"icon\":\n        (0, _lib.componentFactory)(chart, _colorBucket.default, \"colorRange\", 1, [{\n          colorRange: colorrange,\n          sortLegend: 0,\n          mapByCategory: (0, _lib.pluckNumber)(mapByCategory, 0),\n          defaultColor: \"cccccc\",\n          numberFormatter: chart.getFromEnv(\"number-formatter\")\n        }]);\n        chart.addToEnv(\"colorRange\", chart.getChildren(\"colorRange\")[0]);\n        showLegend && colorManager._addLegendItems();\n        break;\n\n      case \"none\":\n        chart.deleteFromEnv(\"colorManager\");\n        colorManager.config.legendItemIds = [];\n    }\n  };\n\n  _proto._configureGradientLegend = function _configureGradientLegend(colorRangeInstance) {\n    var colorManager = this,\n        gradientLegend = colorManager.getFromEnv(\"chart\").getFromEnv(\"gLegend\");\n\n    if (!gradientLegend) {\n      return;\n    }\n\n    gradientLegend.setColorRange(colorRangeInstance);\n    colorManager.addExtEventListener(\"rangeUpdated\", function (e, d) {\n      colorManager.fireEvent(\"legendUpdate\", {\n        \"original-event\": e,\n        maxMinArray: d,\n        component: \"gradientlegend\"\n      });\n    }, gradientLegend);\n  };\n\n  _proto._addLegendItems = function _addLegendItems() {\n    var colorManager = this,\n        config = colorManager.config,\n        chart = colorManager.getFromEnv(\"chart\"),\n        legend = chart.getChildren(\"legend\")[0],\n        colorMap = chart.getFromEnv(\"colorRange\").colorArr,\n        fillColor,\n        lightColor,\n        len = colorMap.length,\n        legendItem,\n        i,\n        lconfig;\n\n    for (i = 0; i < len; i++) {\n      lconfig = {\n        label: (0, _lib.pluck)(colorMap[i].label, colorMap[i].displayvalue),\n        datasetObj: colorMap[i],\n        index: i\n      };\n      lightColor = (0, _lib.getLightColor)(colorMap[i].code, 40);\n      fillColor = {\n        FCcolor: {\n          color: colorMap[i].code + \",\" + colorMap[i].code + \",\" + lightColor,\n          ratio: \"0,70,30\",\n          angle: 270,\n          alpha: \"100,100,100\"\n        }\n      };\n      legendItem = legend.getItem(config.legendItemIds[i]);\n\n      if (!legendItem) {\n        config.legendItemIds.push(legend.createItem(colorManager));\n        legendItem = legend.getItem(config.legendItemIds[i]);\n        legendItem.addEventListener(\"fc-click\", legendItem.itemClickFn);\n      }\n\n      legendItem.removeLegendState(\"hidden\");\n      colorMap[i].legendItemId = legendItem && legendItem.getId();\n      legendItem.configure(lconfig);\n      legendItem.setStateCosmetics(\"default\", {\n        symbol: {\n          fill: (0, _lib.toRaphaelColor)(fillColor),\n          rawFillColor: colorMap[i].code\n        }\n      });\n    }\n\n    for (i = len; i < config.legendItemIds.length; i++) {\n      legend.disposeItem(config.legendItemIds[i]);\n    }\n\n    config.legendItemIds.splice(len);\n  };\n\n  _proto.legendInteractivity = function legendInteractivity(legendItem) {\n    var colorManager = this,\n        colorObj = colorManager.getFromEnv(\"colorRange\").colorArr[legendItem.config.index];\n    colorManager.fireEvent(\"legendUpdate\", {\n      legendItem: legendItem,\n      colorObj: colorObj,\n      component: \"legend\"\n    });\n  };\n\n  _proto.getColor = function getColor(value) {\n    var colorManager = this;\n    return !Number(colorManager.datasource.chart.mapbycategory) && Number(colorManager.datasource.colorrange.gradient) ? {\n      code: colorManager.getColorByValue(value),\n      label: colorManager.getLabelByValue(value)\n    } : colorManager.getColorObj(value);\n  };\n\n  _proto.getValueRatio = function getValueRatio() {\n    return this.getFromEnv(\"colorRange\").getValueRatio();\n  };\n\n  _proto.getCumulativeValueRatio = function getCumulativeValueRatio() {\n    return this.getFromEnv(\"colorRange\").getCumulativeValueRatio();\n  };\n\n  _proto.getBoxFill = function getBoxFill(isVertical) {\n    return this.getFromEnv(\"colorRange\").getBoxFill(isVertical);\n  };\n\n  _proto.getColorByValue = function getColorByValue(value) {\n    return this.getFromEnv(\"colorRange\").getColorByValue(value);\n  };\n\n  _proto.getColorObj = function getColorObj(value) {\n    return this.getFromEnv(\"colorRange\").getColorObj(value);\n  };\n\n  _proto.getLabelByValue = function getLabelByValue(value) {\n    return this.getFromEnv(\"colorRange\").getLabelByValue(value);\n  };\n\n  return ColorRange;\n}(_componentInterface.ComponentInterface);\n\nvar _default = ColorRange;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/core/src/color-utils/colorrange.js"],"names":["_interopRequireDefault","require","exports","__esModule","default","_inheritsLoose2","_componentInterface","_colorBucket","_gradientColorRange","_lib","GRADIENT","ICON","NONE","getOppositeColor","code","getLightColor","getValidHexColor","color","DEF_COLOR","getValidColor","TRACKER_FILL","isIE","UNDEF","PERCENT_STR","legendManager","chart","defaultConf","legendCarpetConf","spreadFactor","allowDrag","captionAlignment","padding","v","h","style","fill","stroke","legendCaptionConf","fontFamily","fontSize","fontWeight","fontStyle","bound","legendBodyConf","legendAxisConf","legendAxisHeight","line","grooveLength","offset","shadow","toRaphaelColor","FCcolor","alpha","angle","ratio","sliderGroupConf","showTooltip","outerCircle","rFactor","innerCircle","axisTextItemConf","normalizePreprocessedData","confArr","numberFormatter","getFromEnv","index","length","rawVal","maxvalue","getCleanValue","init","options","legacyDataParser","data","_extremes","colormanagerConf","dataSource","mapData","colorConfArr","colorConf","startColor","endColor","validColor","colorRange","value","dispValue","mapByPercent","isMaxValPresent","extremes","defaultDatasetType","min","max","Infinity","forEach","dataObj","Math","pluckNumber","getName","dataset","mapbypercent","minvalue","gradient","push","label","sort","_colorConfComparator","m","n","legendValue","dehashify","displayValue","startlabel","isNaN","parseInt","displayvalue","endlabel","getDefaultConf","key","ColorRange","_ComponentInterface","_this","call","datasource","config","legendItemIds","_proto","prototype","configure","colorManager","colorrange","legendType","mapByCategory","mapbycategory","nData","showLegend","colorRangeInstance","getChildren","addToEnv","remove","instant","Number","componentFactory","_dontPlot","_configureGradientLegend","sortLegend","defaultColor","_addLegendItems","deleteFromEnv","gradientLegend","setColorRange","addExtEventListener","e","d","fireEvent","maxMinArray","component","legend","colorMap","colorArr","fillColor","lightColor","len","legendItem","i","lconfig","pluck","datasetObj","getItem","createItem","addEventListener","itemClickFn","removeLegendState","legendItemId","getId","setStateCosmetics","symbol","rawFillColor","disposeItem","splice","legendInteractivity","colorObj","getColor","getColorByValue","getLabelByValue","getColorObj","getValueRatio","getCumulativeValueRatio","getBoxFill","isVertical","ComponentInterface","_default"],"mappings":"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","sourcesContent":["\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=void 0;var _inheritsLoose2=_interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));var _componentInterface=require(\"../component-interface\");var _colorBucket=_interopRequireDefault(require(\"./color-bucket\"));var _gradientColorRange=_interopRequireDefault(require(\"./gradient-color-range\"));var _lib=require(\"../lib\");var GRADIENT=\"gradient\",ICON=\"icon\",NONE=\"none\";function getOppositeColor(code){return(0,_lib.getLightColor)(code,1)}function getValidHexColor(code){var color=code||DEF_COLOR;return(0,_lib.getValidColor)(color)||DEF_COLOR}var TRACKER_FILL=\"rgba(192,192,192,\"+(_lib.isIE?.002:1e-6)+\")\",UNDEF,PERCENT_STR=\"%\",DEF_COLOR=\"#000000\",legendManager=function(){var chart,defaultConf={};defaultConf.legendCarpetConf={spreadFactor:.85,allowDrag:false,captionAlignment:\"center\",padding:{v:3,h:3},style:{fill:\"#e4d9c1\",stroke:\"#c4b89d\"}};defaultConf.legendCaptionConf={spreadFactor:.2,padding:{v:2,h:2},style:{fill:\"#786B50\",fontFamily:\"sans-serif\",fontSize:\"12px\",fontWeight:\"bold\",fontStyle:\"normal\"},bound:{style:{stroke:\"none\"}}};defaultConf.legendBodyConf={spreadFactor:.8,padding:{v:2,h:2},bound:{style:{stroke:\"none\"}}};defaultConf.legendAxisConf={legendAxisHeight:11,spreadFactor:.4,padding:{v:1,h:1},style:{stroke:\"none\",\"stroke-opacity\":0,\"stroke-width\":1},line:{grooveLength:3,offset:8,style:{stroke:\"rgba(255, 255, 255, 0.65)\",\"stroke-width\":1.5}},shadow:{style:{stroke:\"none\",fill:(0,_lib.toRaphaelColor)({FCcolor:{alpha:\"25,0,0\",angle:360,color:\"000000,FFFFFF,FFFFFF\",ratio:\"0,30,40\"}})}},bound:{style:{stroke:\"none\"}}};defaultConf.sliderGroupConf={showTooltip:1,outerCircle:{rFactor:1.4,style:{fill:TRACKER_FILL,stroke:\"#757575\",\"stroke-width\":3}},innerCircle:{rFactor:.65,style:{fill:TRACKER_FILL,stroke:\"#FFFFFF\"}}};defaultConf.axisTextItemConf={spreadFactor:.3,padding:{v:1,h:1},style:{fill:\"#786B50\",fontFamily:\"sans-serif\",fontSize:\"12px\",fontWeight:\"normal\",fontStyle:\"normal\"}};function normalizePreprocessedData(confArr){var numberFormatter=chart.getFromEnv(\"number-formatter\"),index,length,rawVal;for(index=0,length=confArr.length;index<length;index++){rawVal=confArr[index].maxvalue;if(!rawVal){continue}confArr[index].maxvalue=numberFormatter.getCleanValue(rawVal)}}return{init:function init(options){chart=options.chart},legacyDataParser:function legacyDataParser(data,_extremes){var colormanagerConf={},numberFormatter=chart.getFromEnv(\"number-formatter\"),dataSource=chart.getFromEnv(\"dataSource\"),mapData=dataSource.data,colorConfArr,colorConf,startColor,endColor,index,validColor,length,colorRange,value,dispValue,mapByPercent,isMaxValPresent,extremes=_extremes||{};if(!data){return false}if(chart.defaultDatasetType===\"maps\"&&(extremes.min===UNDEF||extremes.max===UNDEF)){extremes={min:Infinity,max:-Infinity};mapData&&mapData.forEach((function(dataObj){extremes.min=Math.min(extremes.min,(0,_lib.pluckNumber)(dataObj.value,extremes.min));extremes.max=Math.max(extremes.max,(0,_lib.pluckNumber)(dataObj.value,extremes.min))}))}else if(chart.getName()===\"HeatMap\"&&(extremes.min===UNDEF||extremes.max===UNDEF)){extremes={min:Infinity,max:-Infinity};dataSource.dataset.forEach((function(dataset){dataset.data&&dataset.data.forEach((function(dataObj){extremes.min=Math.min(extremes.min,(0,_lib.pluckNumber)(dataObj.value,extremes.min));extremes.max=Math.max(extremes.max,(0,_lib.pluckNumber)(dataObj.value,extremes.max))}))}))}colormanagerConf.mapByPercent=mapByPercent=!!(0,_lib.pluckNumber)(data.mapbypercent,0);colorConfArr=data.color||[];if(data.minvalue===UNDEF){data.minvalue=extremes.min!==UNDEF?mapByPercent?0:extremes.min:0}if(data.maxvalue===UNDEF){data.maxvalue=extremes.max!==UNDEF?mapByPercent?100:extremes.max:100}if(data.maxvalue===data.minvalue||extremes.min===Infinity||extremes.max===-Infinity){data.minvalue=0;data.maxvalue=100}isMaxValPresent=false;for(index=0,length=colorConfArr.length;index<length;index++){if(colorConfArr[index].maxvalue){isMaxValPresent=true;break}}if(!isMaxValPresent){colorConfArr=[]}startColor=data.code;colorRange=colormanagerConf.colorRange=[];colormanagerConf.gradient=!!(0,_lib.pluckNumber)(data.gradient,1);if(!colorConfArr.length){if(startColor){endColor=getValidHexColor(startColor);startColor=getValidHexColor()}else{startColor=getValidHexColor();endColor=getOppositeColor(startColor)}colorConfArr.push({code:endColor,maxvalue:data.maxvalue,label:UNDEF})}else{startColor=getValidHexColor(startColor)}normalizePreprocessedData(colorConfArr);colorConfArr=colorConfArr.sort((function _colorConfComparator(m,n){return m.maxvalue-n.maxvalue}));value=dispValue=data.minvalue&&numberFormatter.getCleanValue(data.minvalue);dispValue=(value!==UNDEF||value!==null)&&(mapByPercent?value+PERCENT_STR:numberFormatter.legendValue(value));colorRange.push({code:(0,_lib.dehashify)(startColor),value:value,displayValue:dispValue,label:data.startlabel});for(index=0,length=colorConfArr.length;index<length;index++){colorConf=colorConfArr[index];validColor=getValidHexColor(colorConf.code||colorConf.color);value=dispValue=colorConf.maxvalue;if(isNaN(parseInt(value,10))){continue}dispValue=(value!==UNDEF||value!==null)&&(mapByPercent?value+PERCENT_STR:numberFormatter.legendValue(value));colorRange.push({code:(0,_lib.dehashify)(validColor),value:value,displayValue:dispValue,label:colorConf.label||colorConf.displayvalue})}colorRange[colorRange.length-1].label=data.endlabel||colorConf.label;return colormanagerConf},getDefaultConf:function getDefaultConf(key){return defaultConf[key]}}}();var ColorRange=function(_ComponentInterface){(0,_inheritsLoose2.default)(ColorRange,_ComponentInterface);function ColorRange(){var _this;_this=_ComponentInterface.call(this)||this;_this.datasource={};_this.config.legendItemIds=[];return _this}var _proto=ColorRange.prototype;_proto.configure=function configure(){var colorManager=this,chart=this.getFromEnv(\"chart\"),colorrange,legendType,mapByCategory=this.getFromEnv(\"dataSource\").chart.mapbycategory,nData,showLegend=chart.config.showLegend,colorRangeInstance=chart.getChildren(\"colorRange\")&&chart.getChildren(\"colorRange\")[0];chart.addToEnv(\"colorManager\",colorManager);colorManager.datasource=chart.getFromEnv(\"dataSource\");colorrange=colorManager.datasource.colorrange;colorRangeInstance&&colorRangeInstance.remove({instant:true});if(!showLegend){colorManager.config.legendItemIds=[]}if(chart.defaultDatasetType===\"maps\"){if(colorrange.gradient&&Number(colorrange.gradient)){legendType=GRADIENT}else if(colorrange.color){legendType=ICON}else{legendType=NONE}}else if(chart.getName()===\"TreeMap\"){legendType=GRADIENT}else{if(colorrange.gradient&&colorrange.gradient!==\"0\"&&!Number(mapByCategory)){legendType=GRADIENT}else{legendType=ICON}}switch(legendType){case GRADIENT:legendManager.init({chart:chart});nData=legendManager.legacyDataParser(colorrange);(0,_lib.componentFactory)(chart,_gradientColorRange.default,\"colorRange\",1,[nData]);colorRangeInstance=chart.getChildren(\"colorRange\")[0];chart.addToEnv(\"colorRange\",colorRangeInstance);if(!nData){colorRangeInstance._dontPlot=true}colorManager.config.legendItemIds=[];colorManager._configureGradientLegend(colorRangeInstance);break;case\"icon\":(0,_lib.componentFactory)(chart,_colorBucket.default,\"colorRange\",1,[{colorRange:colorrange,sortLegend:0,mapByCategory:(0,_lib.pluckNumber)(mapByCategory,0),defaultColor:\"cccccc\",numberFormatter:chart.getFromEnv(\"number-formatter\")}]);chart.addToEnv(\"colorRange\",chart.getChildren(\"colorRange\")[0]);showLegend&&colorManager._addLegendItems();break;case\"none\":chart.deleteFromEnv(\"colorManager\");colorManager.config.legendItemIds=[]}};_proto._configureGradientLegend=function _configureGradientLegend(colorRangeInstance){var colorManager=this,gradientLegend=colorManager.getFromEnv(\"chart\").getFromEnv(\"gLegend\");if(!gradientLegend){return}gradientLegend.setColorRange(colorRangeInstance);colorManager.addExtEventListener(\"rangeUpdated\",(function(e,d){colorManager.fireEvent(\"legendUpdate\",{\"original-event\":e,maxMinArray:d,component:\"gradientlegend\"})}),gradientLegend)};_proto._addLegendItems=function _addLegendItems(){var colorManager=this,config=colorManager.config,chart=colorManager.getFromEnv(\"chart\"),legend=chart.getChildren(\"legend\")[0],colorMap=chart.getFromEnv(\"colorRange\").colorArr,fillColor,lightColor,len=colorMap.length,legendItem,i,lconfig;for(i=0;i<len;i++){lconfig={label:(0,_lib.pluck)(colorMap[i].label,colorMap[i].displayvalue),datasetObj:colorMap[i],index:i};lightColor=(0,_lib.getLightColor)(colorMap[i].code,40);fillColor={FCcolor:{color:colorMap[i].code+\",\"+colorMap[i].code+\",\"+lightColor,ratio:\"0,70,30\",angle:270,alpha:\"100,100,100\"}};legendItem=legend.getItem(config.legendItemIds[i]);if(!legendItem){config.legendItemIds.push(legend.createItem(colorManager));legendItem=legend.getItem(config.legendItemIds[i]);legendItem.addEventListener(\"fc-click\",legendItem.itemClickFn)}legendItem.removeLegendState(\"hidden\");colorMap[i].legendItemId=legendItem&&legendItem.getId();legendItem.configure(lconfig);legendItem.setStateCosmetics(\"default\",{symbol:{fill:(0,_lib.toRaphaelColor)(fillColor),rawFillColor:colorMap[i].code}})}for(i=len;i<config.legendItemIds.length;i++){legend.disposeItem(config.legendItemIds[i])}config.legendItemIds.splice(len)};_proto.legendInteractivity=function legendInteractivity(legendItem){var colorManager=this,colorObj=colorManager.getFromEnv(\"colorRange\").colorArr[legendItem.config.index];colorManager.fireEvent(\"legendUpdate\",{legendItem:legendItem,colorObj:colorObj,component:\"legend\"})};_proto.getColor=function getColor(value){var colorManager=this;return!Number(colorManager.datasource.chart.mapbycategory)&&Number(colorManager.datasource.colorrange.gradient)?{code:colorManager.getColorByValue(value),label:colorManager.getLabelByValue(value)}:colorManager.getColorObj(value)};_proto.getValueRatio=function getValueRatio(){return this.getFromEnv(\"colorRange\").getValueRatio()};_proto.getCumulativeValueRatio=function getCumulativeValueRatio(){return this.getFromEnv(\"colorRange\").getCumulativeValueRatio()};_proto.getBoxFill=function getBoxFill(isVertical){return this.getFromEnv(\"colorRange\").getBoxFill(isVertical)};_proto.getColorByValue=function getColorByValue(value){return this.getFromEnv(\"colorRange\").getColorByValue(value)};_proto.getColorObj=function getColorObj(value){return this.getFromEnv(\"colorRange\").getColorObj(value)};_proto.getLabelByValue=function getLabelByValue(value){return this.getFromEnv(\"colorRange\").getLabelByValue(value)};return ColorRange}(_componentInterface.ComponentInterface);var _default=ColorRange;exports.default=_default;"]},"metadata":{},"sourceType":"script"}