{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _lib = require(\"../lib\");\n\nvar _componentInterface = require(\"../component-interface\");\n\nvar colorComparator = function colorComparator(ob1, ob2) {\n  return +ob1.minvalue === +ob2.minvalue ? ob1.maxvalue - ob2.maxvalue : ob1.minvalue - ob2.minvalue;\n};\n\nvar getTransitColor = function getTransitColor(colorArr1, colorArr2, transitOffset) {\n  var R1 = colorArr1[0],\n      G1 = colorArr1[1],\n      B1 = colorArr1[2],\n      R = R1 + (colorArr2[0] - R1) * transitOffset,\n      G = G1 + (colorArr2[1] - G1) * transitOffset,\n      B = B1 + (colorArr2[2] - B1) * transitOffset;\n  return {\n    hex: (_lib.COLOR_BLACK + (R << 16 | G << 8 | B).toString(16)).slice(-6),\n    rgb: [R, G, B]\n  };\n},\n    UNDEF;\n\nvar ColorBucket = function (_ComponentInterface) {\n  (0, _inheritsLoose2.default)(ColorBucket, _ComponentInterface);\n\n  function ColorBucket() {\n    var _this;\n\n    _this = _ComponentInterface.call(this) || this;\n    var colorBucket = (0, _assertThisInitialized2.default)(_this);\n    colorBucket.mapByCategory = false;\n    colorBucket.colorArr = [];\n    colorBucket.noValidRange = true;\n    colorBucket.sortLegend = false;\n    return _this;\n  }\n\n  var _proto = ColorBucket.prototype;\n\n  _proto.__setDefaultConfig = function __setDefaultConfig() {\n    _ComponentInterface.prototype.__setDefaultConfig.call(this);\n\n    this.config.defaultObj = {\n      code: \"CCCCCC\",\n      alpha: \"100\"\n    };\n  };\n\n  _proto.getType = function getType() {\n    return \"colorComponent\";\n  };\n\n  _proto.getName = function getName() {\n    return \"colorBucket\";\n  };\n\n  _proto.configure = function configure(options) {\n    if (!options) {\n      return;\n    }\n\n    var colorBucket = this,\n        mapByCategory = colorBucket.mapByCategory,\n        numberFormatter = options.numberFormatter,\n        colorRange = options.colorRange || {},\n        color = (0, _lib.extend2)([], colorRange.color),\n        chart = this.getLinkedParent(),\n        paletteIndex = Math.min(Math.max((0, _lib.pluckNumber)(colorBucket.getFromEnv(\"dataSource\").chart.palette, 0) - 1, 0), 4),\n        defaultPaletteOptions = chart.defaultPaletteOptions && chart.defaultPaletteOptions.paletteColors[paletteIndex],\n        upperLimit = (0, _lib.pluckNumber)(numberFormatter.getCleanValue(colorRange.maxvalue), Infinity),\n        lowerLimit = (0, _lib.pluckNumber)(numberFormatter.getCleanValue(colorRange.minvalue), -Infinity),\n        colorArr = colorBucket.colorArr,\n        colorCount,\n        i,\n        code,\n        alpha,\n        borderalpha,\n        bordercolor,\n        colorObj,\n        tempvalue,\n        maxValue,\n        minValue,\n        colorLabel;\n\n    if (options.mapByCategory !== UNDEF) {\n      mapByCategory = colorBucket.mapByCategory = !!Number(options.mapByCategory);\n    }\n\n    if (!mapByCategory) {\n      color = color.filter(function (obj) {\n        return obj.minvalue || obj.maxvalue;\n      });\n    } else {\n      color = color.filter(function (obj) {\n        return obj.code || obj.color;\n      });\n    }\n\n    color.forEach(function (obj) {\n      if (obj.minvalue && obj.maxvalue && +obj.maxvalue < +obj.minvalue) {\n        tempvalue = obj.maxvalue;\n        obj.maxvalue = obj.minvalue;\n        obj.minvalue = tempvalue;\n      }\n\n      if (!obj.minvalue) {\n        obj.minvalue = minValue = lowerLimit;\n        maxValue = numberFormatter.getCleanValue(obj.maxvalue);\n        obj.rangeLabel = minValue === -Infinity ? \"<\" + numberFormatter.dataLabels(maxValue) : numberFormatter.dataLabels(minValue) + \"-\" + numberFormatter.dataLabels(maxValue);\n      } else if (!obj.maxvalue) {\n        minValue = numberFormatter.getCleanValue(obj.minvalue);\n        obj.maxvalue = maxValue = upperLimit;\n        obj.rangeLabel = maxValue === Infinity ? \">\" + numberFormatter.dataLabels(minValue) : numberFormatter.dataLabels(minValue) + \"-\" + numberFormatter.dataLabels(maxValue);\n      } else {\n        minValue = numberFormatter.getCleanValue(obj.minvalue);\n        maxValue = numberFormatter.getCleanValue(obj.maxvalue);\n        obj.rangeLabel = numberFormatter.dataLabels(minValue) + \"-\" + numberFormatter.dataLabels(maxValue);\n      }\n    });\n    color.sort(colorComparator);\n\n    if (color && (colorCount = color.length)) {\n      colorArr.length = 0;\n\n      for (i = 0; i < colorCount; i += 1) {\n        colorObj = color[i];\n        code = (0, _lib.pluck)(colorObj.color, colorObj.code, defaultPaletteOptions && defaultPaletteOptions[i]);\n        alpha = (0, _lib.pluck)(colorObj.alpha);\n        bordercolor = (0, _lib.pluck)(colorObj.bordercolor);\n        borderalpha = (0, _lib.pluck)(colorObj.borderalpha, 100);\n        maxValue = (0, _lib.pluckNumber)(colorObj.maxvalue);\n        minValue = (0, _lib.pluckNumber)(colorObj.minvalue);\n        colorLabel = (0, _lib.pluck)(colorObj.label, colorObj.displayvalue, colorObj.rangeLabel);\n\n        if (code && maxValue >= minValue || mapByCategory && colorLabel) {\n          colorArr.push({\n            code: code,\n            alpha: alpha || \"100\",\n            oriAlpha: alpha,\n            maxvalue: maxValue,\n            minvalue: minValue,\n            label: (0, _lib.parseUnsafeString)(colorLabel),\n            labelId: colorLabel.toLowerCase(),\n            bordercolor: bordercolor,\n            borderAlpha: borderalpha,\n            name: colorObj.name,\n            tllabelfont: colorObj.tllabelfont,\n            tllabelfontsize: colorObj.tllabelfontsize,\n            tllabelfontcolor: colorObj.tllabelfontcolor,\n            trlabelfont: colorObj.trlabelfont,\n            trlabelfontsize: colorObj.trlabelfontsize,\n            trlabelfontcolor: colorObj.trlabelfontcolor,\n            bllabelfont: colorObj.bllabelfont,\n            bllabelfontsize: colorObj.bllabelfontsize,\n            bllabelfontcolor: colorObj.bllabelfontcolor,\n            brlabelfont: colorObj.brlabelfont,\n            brlabelfontsize: colorObj.brlabelfontsize,\n            brlabelfontcolor: colorObj.brlabelfontcolor\n          });\n        }\n      }\n\n      colorBucket.sortedColorArr = colorBucket.colorArr.slice(0);\n    } else {\n      colorBucket.noValidRange = true;\n      colorBucket.colorArr = [];\n      colorBucket.sortedColorArr = [];\n    }\n  };\n\n  _proto.getColorObj = function getColorObj(_value) {\n    if (_value === UNDEF) {\n      return {\n        outOfRange: true\n      };\n    }\n\n    var colorBucket = this,\n        maxContainingRange,\n        colorArr = colorBucket.sortedColorArr,\n        i = colorBucket.gradient ? 1 : 0,\n        colorObj = colorArr[i],\n        updatedColorObj,\n        transitOffset,\n        value = _value;\n\n    if (colorBucket.mapByCategory) {\n      value = (0, _lib.parseUnsafeString)(value).toLowerCase() || value.toString().toLowerCase();\n\n      while (colorObj) {\n        if (colorObj.labelId === value || colorObj.maxvalue >= value && colorObj.minvalue <= value) {\n          return {\n            code: colorObj.code,\n            alpha: colorObj.alpha || \"100\",\n            oriAlpha: colorObj.oriAlpha,\n            seriesIndex: i,\n            legendItemId: colorObj.legendItemId,\n            tlLabelFont: colorObj.tllabelfont,\n            tlLabelFontSize: colorObj.tllabelfontsize,\n            tlLabelFontColor: colorObj.tllabelfontcolor,\n            trLabelFont: colorObj.trlabelfont,\n            trLabelFontSize: colorObj.trlabelfontsize,\n            trLabelFontColor: colorObj.trlabelfontcolor,\n            blLabelFont: colorObj.bllabelfont,\n            blLabelFontSize: colorObj.bllabelfontsize,\n            blLabelFontColor: colorObj.bllabelfontcolor,\n            brLabelFont: colorObj.brlabelfont,\n            brLabelFontSize: colorObj.brlabelfontsize,\n            brLabelFontColor: colorObj.brlabelfontcolor\n          };\n        }\n\n        i += 1;\n        colorObj = colorArr[i];\n      }\n\n      return {\n        outOfRange: true\n      };\n    } else if (colorBucket.gradient) {\n      if (colorBucket.scaleMin <= value && colorBucket.scaleMax >= value) {\n        while (colorObj && colorObj.maxvalue < value) {\n          i += 1;\n          colorObj = colorArr[i];\n        }\n\n        transitOffset = (value - colorObj.minvalue) / colorObj.range;\n        return {\n          code: getTransitColor(colorArr[i - 1].codeRGB, colorObj.codeRGB, transitOffset).hex\n        };\n      }\n\n      return {\n        outOfRange: true\n      };\n    }\n\n    while (colorObj) {\n      if (value < colorObj.minvalue && !maxContainingRange) {\n        if (i === 0) {\n          updatedColorObj = {\n            code: colorObj.code,\n            alpha: colorObj.alpha || \"100\",\n            oriAlpha: colorObj.oriAlpha,\n            seriesIndex: i,\n            name: colorObj.name,\n            label: colorObj.label,\n            outOfRange: true,\n            bordercolor: colorObj.bordercolor,\n            borderalpha: colorObj.borderAlpha\n          };\n        } else {\n          updatedColorObj = {\n            code: colorArr[i - 1].code,\n            alpha: colorArr[i - 1].alpha || \"100\",\n            oriAlpha: colorArr[i - 1].oriAlpha,\n            seriesIndex: i,\n            name: colorArr[i - 1].name,\n            label: colorArr[i - 1].label,\n            outOfRange: true,\n            bordercolor: colorArr[i - 1].bordercolor,\n            borderalpha: colorArr[i - 1].borderAlpha\n          };\n        }\n      }\n\n      if (value > colorObj.maxvalue && i === colorArr.length - 1) {\n        updatedColorObj = {\n          code: colorObj.code,\n          alpha: colorObj.alpha || \"100\",\n          oriAlpha: colorObj.oriAlpha,\n          seriesIndex: i,\n          name: colorObj.name,\n          label: colorObj.label,\n          outOfRange: true,\n          bordercolor: colorObj.bordercolor,\n          borderalpha: colorObj.borderAlpha\n        };\n      }\n\n      if (colorObj.maxvalue > value && colorObj.minvalue <= value) {\n        updatedColorObj = {\n          code: colorObj.code,\n          alpha: colorObj.alpha || \"100\",\n          oriAlpha: colorObj.oriAlpha,\n          seriesIndex: i,\n          name: colorObj.name,\n          label: colorObj.label,\n          bordercolor: colorObj.bordercolor,\n          borderalpha: colorObj.borderAlpha\n        };\n      } else if (value === colorObj.maxvalue) {\n        maxContainingRange = {\n          code: colorObj.code,\n          alpha: colorObj.alpha || \"100\",\n          oriAlpha: colorObj.oriAlpha,\n          seriesIndex: i,\n          name: colorObj.name,\n          label: colorObj.label,\n          bordercolor: colorObj.bordercolor,\n          borderalpha: colorObj.borderAlpha,\n          tlLabelFont: colorObj.tllabelfont,\n          tlLabelFontSize: colorObj.tllabelfontsize,\n          tlLabelFontColor: colorObj.tllabelfontcolor,\n          trLabelFont: colorObj.trlabelfont,\n          trLabelFontSize: colorObj.trlabelfontsize,\n          trLabelFontColor: colorObj.trlabelfontcolor,\n          blLabelFont: colorObj.bllabelfont,\n          blLabelFontSize: colorObj.bllabelfontsize,\n          blLabelFontColor: colorObj.bllabelfontcolor,\n          brLabelFont: colorObj.brlabelfont,\n          brLabelFontSize: colorObj.brlabelfontsize,\n          brLabelFontColor: colorObj.brlabelfontcolor\n        };\n      }\n\n      if (i === colorArr.length - 1 && maxContainingRange) {\n        return maxContainingRange;\n      }\n\n      if (updatedColorObj) {\n        updatedColorObj.tlLabelFont = colorObj.tllabelfont;\n        updatedColorObj.tlLabelFontSize = colorObj.tllabelfontsize;\n        updatedColorObj.tlLabelFontColor = colorObj.tllabelfontcolor;\n        updatedColorObj.trLabelFont = colorObj.trlabelfont;\n        updatedColorObj.trLabelFontSize = colorObj.trlabelfontsize;\n        updatedColorObj.trLabelFontColor = colorObj.trlabelfontcolor;\n        updatedColorObj.blLabelFont = colorObj.bllabelfont;\n        updatedColorObj.blLabelFontSize = colorObj.bllabelfontsize;\n        updatedColorObj.blLabelFontColor = colorObj.bllabelfontcolor;\n        updatedColorObj.brLabelFont = colorObj.brlabelfont;\n        updatedColorObj.brLabelFontSize = colorObj.brlabelfontsize;\n        updatedColorObj.brLabelFontColor = colorObj.brlabelfontcolor;\n        return updatedColorObj;\n      }\n\n      i += 1;\n      colorObj = colorArr[i];\n    }\n\n    if (!colorArr.length) {\n      return {\n        outOfRange: true\n      };\n    }\n  };\n\n  _proto.getColorRangeArr = function getColorRangeArr(_minValue, _maxValue) {\n    var temp,\n        i,\n        l,\n        minColorObj,\n        lastMaxValue,\n        maxColorObj,\n        returnArr = [],\n        colorObj,\n        lastColorObj,\n        minValue = _minValue,\n        maxValue = _maxValue;\n\n    if (!this.defaultAsigned) {\n      if (minValue > maxValue) {\n        temp = minValue;\n        minValue = maxValue;\n        maxValue = temp;\n      }\n\n      if (minValue < maxValue) {\n        minColorObj = this.getColorObj(minValue);\n        maxColorObj = this.getColorObj(maxValue);\n\n        if (minColorObj && maxColorObj) {\n          lastMaxValue = minValue;\n          i = minColorObj.seriesIndex;\n          l = maxColorObj.seriesIndex;\n\n          for (; i <= l; i += 1) {\n            colorObj = (0, _lib.extend2)({}, this.colorArr[i]);\n\n            if (colorObj.minvalue !== lastMaxValue) {\n              colorObj.minvalue = lastMaxValue;\n            }\n\n            returnArr.push(colorObj);\n            lastColorObj = colorObj;\n            lastMaxValue = colorObj.maxvalue;\n          }\n\n          lastColorObj && (lastColorObj.maxvalue = maxValue);\n        }\n      }\n    }\n\n    return returnArr;\n  };\n\n  return ColorBucket;\n}(_componentInterface.ComponentInterface);\n\nvar _default = ColorBucket;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/core/src/color-utils/color-bucket.js"],"names":["_interopRequireDefault","require","exports","__esModule","default","_assertThisInitialized2","_inheritsLoose2","_lib","_componentInterface","colorComparator","ob1","ob2","minvalue","maxvalue","getTransitColor","colorArr1","colorArr2","transitOffset","R1","G1","B1","R","G","B","hex","COLOR_BLACK","toString","slice","rgb","UNDEF","ColorBucket","_ComponentInterface","_this","call","colorBucket","mapByCategory","colorArr","noValidRange","sortLegend","_proto","prototype","__setDefaultConfig","config","defaultObj","code","alpha","getType","getName","configure","options","numberFormatter","colorRange","color","extend2","chart","getLinkedParent","paletteIndex","Math","min","max","pluckNumber","getFromEnv","palette","defaultPaletteOptions","paletteColors","upperLimit","getCleanValue","Infinity","lowerLimit","colorCount","i","borderalpha","bordercolor","colorObj","tempvalue","maxValue","minValue","colorLabel","Number","filter","obj","forEach","rangeLabel","dataLabels","sort","length","pluck","label","displayvalue","push","oriAlpha","parseUnsafeString","labelId","toLowerCase","borderAlpha","name","tllabelfont","tllabelfontsize","tllabelfontcolor","trlabelfont","trlabelfontsize","trlabelfontcolor","bllabelfont","bllabelfontsize","bllabelfontcolor","brlabelfont","brlabelfontsize","brlabelfontcolor","sortedColorArr","getColorObj","_value","outOfRange","maxContainingRange","gradient","updatedColorObj","value","seriesIndex","legendItemId","tlLabelFont","tlLabelFontSize","tlLabelFontColor","trLabelFont","trLabelFontSize","trLabelFontColor","blLabelFont","blLabelFontSize","blLabelFontColor","brLabelFont","brLabelFontSize","brLabelFontColor","scaleMin","scaleMax","range","codeRGB","getColorRangeArr","_minValue","_maxValue","temp","l","minColorObj","lastMaxValue","maxColorObj","returnArr","lastColorObj","defaultAsigned","ComponentInterface","_default"],"mappings":"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","sourcesContent":["\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=void 0;var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _inheritsLoose2=_interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));var _lib=require(\"../lib\");var _componentInterface=require(\"../component-interface\");var colorComparator=function colorComparator(ob1,ob2){return+ob1.minvalue===+ob2.minvalue?ob1.maxvalue-ob2.maxvalue:ob1.minvalue-ob2.minvalue};var getTransitColor=function getTransitColor(colorArr1,colorArr2,transitOffset){var R1=colorArr1[0],G1=colorArr1[1],B1=colorArr1[2],R=R1+(colorArr2[0]-R1)*transitOffset,G=G1+(colorArr2[1]-G1)*transitOffset,B=B1+(colorArr2[2]-B1)*transitOffset;return{hex:(_lib.COLOR_BLACK+(R<<16|G<<8|B).toString(16)).slice(-6),rgb:[R,G,B]}},UNDEF;var ColorBucket=function(_ComponentInterface){(0,_inheritsLoose2.default)(ColorBucket,_ComponentInterface);function ColorBucket(){var _this;_this=_ComponentInterface.call(this)||this;var colorBucket=(0,_assertThisInitialized2.default)(_this);colorBucket.mapByCategory=false;colorBucket.colorArr=[];colorBucket.noValidRange=true;colorBucket.sortLegend=false;return _this}var _proto=ColorBucket.prototype;_proto.__setDefaultConfig=function __setDefaultConfig(){_ComponentInterface.prototype.__setDefaultConfig.call(this);this.config.defaultObj={code:\"CCCCCC\",alpha:\"100\"}};_proto.getType=function getType(){return\"colorComponent\"};_proto.getName=function getName(){return\"colorBucket\"};_proto.configure=function configure(options){if(!options){return}var colorBucket=this,mapByCategory=colorBucket.mapByCategory,numberFormatter=options.numberFormatter,colorRange=options.colorRange||{},color=(0,_lib.extend2)([],colorRange.color),chart=this.getLinkedParent(),paletteIndex=Math.min(Math.max((0,_lib.pluckNumber)(colorBucket.getFromEnv(\"dataSource\").chart.palette,0)-1,0),4),defaultPaletteOptions=chart.defaultPaletteOptions&&chart.defaultPaletteOptions.paletteColors[paletteIndex],upperLimit=(0,_lib.pluckNumber)(numberFormatter.getCleanValue(colorRange.maxvalue),Infinity),lowerLimit=(0,_lib.pluckNumber)(numberFormatter.getCleanValue(colorRange.minvalue),-Infinity),colorArr=colorBucket.colorArr,colorCount,i,code,alpha,borderalpha,bordercolor,colorObj,tempvalue,maxValue,minValue,colorLabel;if(options.mapByCategory!==UNDEF){mapByCategory=colorBucket.mapByCategory=!!Number(options.mapByCategory)}if(!mapByCategory){color=color.filter((function(obj){return obj.minvalue||obj.maxvalue}))}else{color=color.filter((function(obj){return obj.code||obj.color}))}color.forEach((function(obj){if(obj.minvalue&&obj.maxvalue&&+obj.maxvalue<+obj.minvalue){tempvalue=obj.maxvalue;obj.maxvalue=obj.minvalue;obj.minvalue=tempvalue}if(!obj.minvalue){obj.minvalue=minValue=lowerLimit;maxValue=numberFormatter.getCleanValue(obj.maxvalue);obj.rangeLabel=minValue===-Infinity?\"<\"+numberFormatter.dataLabels(maxValue):numberFormatter.dataLabels(minValue)+\"-\"+numberFormatter.dataLabels(maxValue)}else if(!obj.maxvalue){minValue=numberFormatter.getCleanValue(obj.minvalue);obj.maxvalue=maxValue=upperLimit;obj.rangeLabel=maxValue===Infinity?\">\"+numberFormatter.dataLabels(minValue):numberFormatter.dataLabels(minValue)+\"-\"+numberFormatter.dataLabels(maxValue)}else{minValue=numberFormatter.getCleanValue(obj.minvalue);maxValue=numberFormatter.getCleanValue(obj.maxvalue);obj.rangeLabel=numberFormatter.dataLabels(minValue)+\"-\"+numberFormatter.dataLabels(maxValue)}}));color.sort(colorComparator);if(color&&(colorCount=color.length)){colorArr.length=0;for(i=0;i<colorCount;i+=1){colorObj=color[i];code=(0,_lib.pluck)(colorObj.color,colorObj.code,defaultPaletteOptions&&defaultPaletteOptions[i]);alpha=(0,_lib.pluck)(colorObj.alpha);bordercolor=(0,_lib.pluck)(colorObj.bordercolor);borderalpha=(0,_lib.pluck)(colorObj.borderalpha,100);maxValue=(0,_lib.pluckNumber)(colorObj.maxvalue);minValue=(0,_lib.pluckNumber)(colorObj.minvalue);colorLabel=(0,_lib.pluck)(colorObj.label,colorObj.displayvalue,colorObj.rangeLabel);if(code&&maxValue>=minValue||mapByCategory&&colorLabel){colorArr.push({code:code,alpha:alpha||\"100\",oriAlpha:alpha,maxvalue:maxValue,minvalue:minValue,label:(0,_lib.parseUnsafeString)(colorLabel),labelId:colorLabel.toLowerCase(),bordercolor:bordercolor,borderAlpha:borderalpha,name:colorObj.name,tllabelfont:colorObj.tllabelfont,tllabelfontsize:colorObj.tllabelfontsize,tllabelfontcolor:colorObj.tllabelfontcolor,trlabelfont:colorObj.trlabelfont,trlabelfontsize:colorObj.trlabelfontsize,trlabelfontcolor:colorObj.trlabelfontcolor,bllabelfont:colorObj.bllabelfont,bllabelfontsize:colorObj.bllabelfontsize,bllabelfontcolor:colorObj.bllabelfontcolor,brlabelfont:colorObj.brlabelfont,brlabelfontsize:colorObj.brlabelfontsize,brlabelfontcolor:colorObj.brlabelfontcolor})}}colorBucket.sortedColorArr=colorBucket.colorArr.slice(0)}else{colorBucket.noValidRange=true;colorBucket.colorArr=[];colorBucket.sortedColorArr=[]}};_proto.getColorObj=function getColorObj(_value){if(_value===UNDEF){return{outOfRange:true}}var colorBucket=this,maxContainingRange,colorArr=colorBucket.sortedColorArr,i=colorBucket.gradient?1:0,colorObj=colorArr[i],updatedColorObj,transitOffset,value=_value;if(colorBucket.mapByCategory){value=(0,_lib.parseUnsafeString)(value).toLowerCase()||value.toString().toLowerCase();while(colorObj){if(colorObj.labelId===value||colorObj.maxvalue>=value&&colorObj.minvalue<=value){return{code:colorObj.code,alpha:colorObj.alpha||\"100\",oriAlpha:colorObj.oriAlpha,seriesIndex:i,legendItemId:colorObj.legendItemId,tlLabelFont:colorObj.tllabelfont,tlLabelFontSize:colorObj.tllabelfontsize,tlLabelFontColor:colorObj.tllabelfontcolor,trLabelFont:colorObj.trlabelfont,trLabelFontSize:colorObj.trlabelfontsize,trLabelFontColor:colorObj.trlabelfontcolor,blLabelFont:colorObj.bllabelfont,blLabelFontSize:colorObj.bllabelfontsize,blLabelFontColor:colorObj.bllabelfontcolor,brLabelFont:colorObj.brlabelfont,brLabelFontSize:colorObj.brlabelfontsize,brLabelFontColor:colorObj.brlabelfontcolor}}i+=1;colorObj=colorArr[i]}return{outOfRange:true}}else if(colorBucket.gradient){if(colorBucket.scaleMin<=value&&colorBucket.scaleMax>=value){while(colorObj&&colorObj.maxvalue<value){i+=1;colorObj=colorArr[i]}transitOffset=(value-colorObj.minvalue)/colorObj.range;return{code:getTransitColor(colorArr[i-1].codeRGB,colorObj.codeRGB,transitOffset).hex}}return{outOfRange:true}}while(colorObj){if(value<colorObj.minvalue&&!maxContainingRange){if(i===0){updatedColorObj={code:colorObj.code,alpha:colorObj.alpha||\"100\",oriAlpha:colorObj.oriAlpha,seriesIndex:i,name:colorObj.name,label:colorObj.label,outOfRange:true,bordercolor:colorObj.bordercolor,borderalpha:colorObj.borderAlpha}}else{updatedColorObj={code:colorArr[i-1].code,alpha:colorArr[i-1].alpha||\"100\",oriAlpha:colorArr[i-1].oriAlpha,seriesIndex:i,name:colorArr[i-1].name,label:colorArr[i-1].label,outOfRange:true,bordercolor:colorArr[i-1].bordercolor,borderalpha:colorArr[i-1].borderAlpha}}}if(value>colorObj.maxvalue&&i===colorArr.length-1){updatedColorObj={code:colorObj.code,alpha:colorObj.alpha||\"100\",oriAlpha:colorObj.oriAlpha,seriesIndex:i,name:colorObj.name,label:colorObj.label,outOfRange:true,bordercolor:colorObj.bordercolor,borderalpha:colorObj.borderAlpha}}if(colorObj.maxvalue>value&&colorObj.minvalue<=value){updatedColorObj={code:colorObj.code,alpha:colorObj.alpha||\"100\",oriAlpha:colorObj.oriAlpha,seriesIndex:i,name:colorObj.name,label:colorObj.label,bordercolor:colorObj.bordercolor,borderalpha:colorObj.borderAlpha}}else if(value===colorObj.maxvalue){maxContainingRange={code:colorObj.code,alpha:colorObj.alpha||\"100\",oriAlpha:colorObj.oriAlpha,seriesIndex:i,name:colorObj.name,label:colorObj.label,bordercolor:colorObj.bordercolor,borderalpha:colorObj.borderAlpha,tlLabelFont:colorObj.tllabelfont,tlLabelFontSize:colorObj.tllabelfontsize,tlLabelFontColor:colorObj.tllabelfontcolor,trLabelFont:colorObj.trlabelfont,trLabelFontSize:colorObj.trlabelfontsize,trLabelFontColor:colorObj.trlabelfontcolor,blLabelFont:colorObj.bllabelfont,blLabelFontSize:colorObj.bllabelfontsize,blLabelFontColor:colorObj.bllabelfontcolor,brLabelFont:colorObj.brlabelfont,brLabelFontSize:colorObj.brlabelfontsize,brLabelFontColor:colorObj.brlabelfontcolor}}if(i===colorArr.length-1&&maxContainingRange){return maxContainingRange}if(updatedColorObj){updatedColorObj.tlLabelFont=colorObj.tllabelfont;updatedColorObj.tlLabelFontSize=colorObj.tllabelfontsize;updatedColorObj.tlLabelFontColor=colorObj.tllabelfontcolor;updatedColorObj.trLabelFont=colorObj.trlabelfont;updatedColorObj.trLabelFontSize=colorObj.trlabelfontsize;updatedColorObj.trLabelFontColor=colorObj.trlabelfontcolor;updatedColorObj.blLabelFont=colorObj.bllabelfont;updatedColorObj.blLabelFontSize=colorObj.bllabelfontsize;updatedColorObj.blLabelFontColor=colorObj.bllabelfontcolor;updatedColorObj.brLabelFont=colorObj.brlabelfont;updatedColorObj.brLabelFontSize=colorObj.brlabelfontsize;updatedColorObj.brLabelFontColor=colorObj.brlabelfontcolor;return updatedColorObj}i+=1;colorObj=colorArr[i]}if(!colorArr.length){return{outOfRange:true}}};_proto.getColorRangeArr=function getColorRangeArr(_minValue,_maxValue){var temp,i,l,minColorObj,lastMaxValue,maxColorObj,returnArr=[],colorObj,lastColorObj,minValue=_minValue,maxValue=_maxValue;if(!this.defaultAsigned){if(minValue>maxValue){temp=minValue;minValue=maxValue;maxValue=temp}if(minValue<maxValue){minColorObj=this.getColorObj(minValue);maxColorObj=this.getColorObj(maxValue);if(minColorObj&&maxColorObj){lastMaxValue=minValue;i=minColorObj.seriesIndex;l=maxColorObj.seriesIndex;for(;i<=l;i+=1){colorObj=(0,_lib.extend2)({},this.colorArr[i]);if(colorObj.minvalue!==lastMaxValue){colorObj.minvalue=lastMaxValue}returnArr.push(colorObj);lastColorObj=colorObj;lastMaxValue=colorObj.maxvalue}lastColorObj&&(lastColorObj.maxvalue=maxValue)}}}return returnArr};return ColorBucket}(_componentInterface.ComponentInterface);var _default=ColorBucket;exports.default=_default;"]},"metadata":{},"sourceType":"script"}