{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _extAnnotation = _interopRequireDefault(require(\"./ext-annotation\"));\n\nvar _pickBy = _interopRequireDefault(require(\"ramda/src/pickBy\"));\n\nvar isChartAPI = function isChartAPI(component) {\n  return component.getType() === \"chartAPI\";\n},\n    isRootAttr = function isRootAttr(value, key) {\n  return key !== \"groups\" && key !== \"items\";\n},\n    onFCInstantiated = function onFCInstantiated(event) {\n  var component = event.sender;\n\n  if (isChartAPI(component)) {\n    component.registerFactory(\"annotation\", function (chartComponent) {\n      var annotationData = chartComponent.getFromEnv(\"dataSource\").annotations,\n          chartAnnotations = chartComponent.getChildren().annotation,\n          ext = chartAnnotations && chartAnnotations[0];\n      delete chartComponent.getFromEnv(\"chartInstance\").annotations;\n\n      if (annotationData) {\n        if (!ext) {\n          ext = new _extAnnotation.default((0, _pickBy.default)(isRootAttr, annotationData));\n          chartComponent.attachChild(ext, \"annotation\");\n          ext.config.drawn = false;\n        }\n\n        ext._JSONData = annotationData;\n        ext.configure(annotationData);\n        chartComponent.getFromEnv(\"chartInstance\").annotations = ext;\n      }\n    });\n  }\n};\n\nfunction FCWrapper(FusionCharts) {\n  FusionCharts.addEventListener(\"instantiated\", onFCInstantiated);\n}\n\nvar _default = {\n  extension: FCWrapper,\n  name: \"Annotation\",\n  type: \"extension\",\n  requiresFusionCharts: true\n};\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/features/src/annotation/index.js"],"names":["_interopRequireDefault","require","exports","__esModule","default","_extAnnotation","_pickBy","isChartAPI","component","getType","isRootAttr","value","key","onFCInstantiated","event","sender","registerFactory","chartComponent","annotationData","getFromEnv","annotations","chartAnnotations","getChildren","annotation","ext","attachChild","config","drawn","_JSONData","configure","FCWrapper","FusionCharts","addEventListener","_default","extension","name","type","requiresFusionCharts"],"mappings":"AAAA;;AAAa,IAAIA,sBAAsB,GAACC,OAAO,CAAC,8CAAD,CAAlC;;AAAmFC,OAAO,CAACC,UAAR,GAAmB,IAAnB;AAAwBD,OAAO,CAACE,OAAR,GAAgB,KAAK,CAArB;;AAAuB,IAAIC,cAAc,GAACL,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAAzC;;AAAuE,IAAIK,OAAO,GAACN,sBAAsB,CAACC,OAAO,CAAC,kBAAD,CAAR,CAAlC;;AAAgE,IAAIM,UAAU,GAAC,SAASA,UAAT,CAAoBC,SAApB,EAA8B;AAAC,SAAOA,SAAS,CAACC,OAAV,OAAsB,UAA7B;AAAwC,CAAtF;AAAA,IAAuFC,UAAU,GAAC,SAASA,UAAT,CAAoBC,KAApB,EAA0BC,GAA1B,EAA8B;AAAC,SAAOA,GAAG,KAAG,QAAN,IAAgBA,GAAG,KAAG,OAA7B;AAAqC,CAAtK;AAAA,IAAuKC,gBAAgB,GAAC,SAASA,gBAAT,CAA0BC,KAA1B,EAAgC;AAAC,MAAIN,SAAS,GAACM,KAAK,CAACC,MAApB;;AAA2B,MAAGR,UAAU,CAACC,SAAD,CAAb,EAAyB;AAACA,IAAAA,SAAS,CAACQ,eAAV,CAA0B,YAA1B,EAAwC,UAASC,cAAT,EAAwB;AAAC,UAAIC,cAAc,GAACD,cAAc,CAACE,UAAf,CAA0B,YAA1B,EAAwCC,WAA3D;AAAA,UAAuEC,gBAAgB,GAACJ,cAAc,CAACK,WAAf,GAA6BC,UAArH;AAAA,UAAgIC,GAAG,GAACH,gBAAgB,IAAEA,gBAAgB,CAAC,CAAD,CAAtK;AAA0K,aAAOJ,cAAc,CAACE,UAAf,CAA0B,eAA1B,EAA2CC,WAAlD;;AAA8D,UAAGF,cAAH,EAAkB;AAAC,YAAG,CAACM,GAAJ,EAAQ;AAACA,UAAAA,GAAG,GAAC,IAAInB,cAAc,CAACD,OAAnB,CAA2B,CAAC,GAAEE,OAAO,CAACF,OAAX,EAAoBM,UAApB,EAA+BQ,cAA/B,CAA3B,CAAJ;AAA+ED,UAAAA,cAAc,CAACQ,WAAf,CAA2BD,GAA3B,EAA+B,YAA/B;AAA6CA,UAAAA,GAAG,CAACE,MAAJ,CAAWC,KAAX,GAAiB,KAAjB;AAAuB;;AAAAH,QAAAA,GAAG,CAACI,SAAJ,GAAcV,cAAd;AAA6BM,QAAAA,GAAG,CAACK,SAAJ,CAAcX,cAAd;AAA8BD,QAAAA,cAAc,CAACE,UAAf,CAA0B,eAA1B,EAA2CC,WAA3C,GAAuDI,GAAvD;AAA2D;AAAC,KAA/kB;AAAklB;AAAC,CAAj2B;;AAAk2B,SAASM,SAAT,CAAmBC,YAAnB,EAAgC;AAACA,EAAAA,YAAY,CAACC,gBAAb,CAA8B,cAA9B,EAA6CnB,gBAA7C;AAA+D;;AAAA,IAAIoB,QAAQ,GAAC;AAACC,EAAAA,SAAS,EAACJ,SAAX;AAAqBK,EAAAA,IAAI,EAAC,YAA1B;AAAuCC,EAAAA,IAAI,EAAC,WAA5C;AAAwDC,EAAAA,oBAAoB,EAAC;AAA7E,CAAb;AAAgGnC,OAAO,CAACE,OAAR,GAAgB6B,QAAhB","sourcesContent":["\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=void 0;var _extAnnotation=_interopRequireDefault(require(\"./ext-annotation\"));var _pickBy=_interopRequireDefault(require(\"ramda/src/pickBy\"));var isChartAPI=function isChartAPI(component){return component.getType()===\"chartAPI\"},isRootAttr=function isRootAttr(value,key){return key!==\"groups\"&&key!==\"items\"},onFCInstantiated=function onFCInstantiated(event){var component=event.sender;if(isChartAPI(component)){component.registerFactory(\"annotation\",(function(chartComponent){var annotationData=chartComponent.getFromEnv(\"dataSource\").annotations,chartAnnotations=chartComponent.getChildren().annotation,ext=chartAnnotations&&chartAnnotations[0];delete chartComponent.getFromEnv(\"chartInstance\").annotations;if(annotationData){if(!ext){ext=new _extAnnotation.default((0,_pickBy.default)(isRootAttr,annotationData));chartComponent.attachChild(ext,\"annotation\");ext.config.drawn=false}ext._JSONData=annotationData;ext.configure(annotationData);chartComponent.getFromEnv(\"chartInstance\").annotations=ext}}))}};function FCWrapper(FusionCharts){FusionCharts.addEventListener(\"instantiated\",onFCInstantiated)}var _default={extension:FCWrapper,name:\"Annotation\",type:\"extension\",requiresFusionCharts:true};exports.default=_default;"]},"metadata":{},"sourceType":"script"}