{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _assertThisInitialized2 = _interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _lib = require(\"@fusioncharts/core/src/lib\");\n\nvar _componentInterface = require(\"@fusioncharts/core/src/component-interface\");\n\nvar UNDEF,\n    compositionKeys = {},\n    TRACKER_FILL = \"rgba(192,192,192,\" + (_lib.isIE ? .002 : 1e-6) + \")\",\n    legendManager,\n    FORMER_SLIDER_INDEX = false,\n    LATER_SLIDER_INDEX = true,\n    PERCENT_STR = \"%\",\n    COMMA_STR = \",\",\n    DEF_COLOR = \"#000000\",\n    CANVAS_WIDTH = \"canvasWidth\",\n    CANVAS_LEFT = \"canvasLeft\",\n    CANVAS_HEIGHT = \"canvasHeight\",\n    CANVAS_TOP = \"canvasTop\",\n    VERTICAL = \"vertical\",\n    ABSOLUTE = \"absolute\",\n    TOP = \"top\",\n    BOTTOM = \"bottom\",\n    LEFT = \"left\",\n    RIGHT = \"right\",\n    GL_CARPET = \"GL_CARPET\",\n    GL_CAPTION = \"GL_CAPTION\",\n    GL_BODY = \"GL_BODY\",\n    GL_LABELS = \"GL_LABELS\",\n    FL_AXIS = \"FL_AXIS\",\n    GL_SG1 = \"GL_SG1\",\n    GL_VALUES = \"GL_VALUES\",\n    FC_GRADIENT_LEGEND = \"fc-gradient-legend\",\n    hasOwnProp = {}.hasOwnProperty,\n    M = \"M\",\n    L = \"L\",\n    gLegendRef;\n\nfunction merge(src, snk) {\n  (function rec(source, sink) {\n    var sourceVal, prop;\n\n    for (prop in source) {\n      if (!hasOwnProp.call(source, prop)) {\n        continue;\n      }\n\n      sourceVal = source[prop];\n\n      if (sink[prop] === UNDEF) {\n        sink[prop] = sourceVal;\n      } else if (typeof sourceVal === \"object\" && sourceVal !== null) {\n        rec(sourceVal, sink[prop]);\n      }\n    }\n  })(src, snk);\n\n  return snk;\n}\n\nfunction getValidHexColor(code) {\n  var color = code || DEF_COLOR;\n  return (0, _lib.getValidColor)(color) || DEF_COLOR;\n}\n\nfunction getOppositeColor(code) {\n  return (0, _lib.getLightColor)(code, 1);\n}\n\nfunction normalizeFontSizeAppend(obj) {\n  var fontSize = obj.fontSize + \"\",\n      normalizeFontSize;\n\n  if (!fontSize) {\n    return obj;\n  }\n\n  normalizeFontSize = fontSize.replace(/(\\d+)(px)*/, \"$1px\");\n  obj.fontSize = normalizeFontSize;\n  return obj;\n}\n\nfunction isInvalid(arg) {\n  if (arg === UNDEF || typeof arg === \"undefined\" || arg === null || isNaN(arg)) {\n    return true;\n  }\n\n  return false;\n}\n\ncompositionKeys.CAPTION = \"CAPTION\";\ncompositionKeys.LEGEND_BODY = \"LEGEND_BODY\";\ncompositionKeys.AXIS_LABEL = \"LEGEND_LABEL\";\ncompositionKeys.LEGEND_AXIS = \"LEGEND_AXIS\";\ncompositionKeys.RANGE = \"RANGE\";\ncompositionKeys.AXIS_VALUE = \"AXIS_VALUE\";\n\nlegendManager = function () {\n  var chart,\n      defaultConf = {};\n  defaultConf.legendCarpetConf = {\n    spreadFactor: .85,\n    allowDrag: false,\n    captionAlignment: \"center\",\n    padding: {\n      v: 3,\n      h: 3\n    },\n    style: {\n      fill: \"#e4d9c1\",\n      stroke: \"#c4b89d\"\n    }\n  };\n  defaultConf.legendCaptionConf = {\n    spreadFactor: .2,\n    padding: {\n      v: 2,\n      h: 2\n    },\n    style: {\n      fill: \"#786B50\",\n      fontFamily: \"sans-serif\",\n      fontSize: \"12px\",\n      fontWeight: \"bold\",\n      fontStyle: \"normal\"\n    },\n    bound: {\n      style: {\n        stroke: \"none\"\n      }\n    }\n  };\n  defaultConf.legendBodyConf = {\n    spreadFactor: .8,\n    padding: {\n      v: 2,\n      h: 2\n    },\n    bound: {\n      style: {\n        stroke: \"none\"\n      }\n    }\n  };\n  defaultConf.legendAxisConf = {\n    legendAxisHeight: 11,\n    spreadFactor: .4,\n    padding: {\n      v: 1,\n      h: 1\n    },\n    style: {\n      stroke: \"none\",\n      \"stroke-opacity\": 0,\n      \"stroke-width\": 1\n    },\n    line: {\n      grooveLength: 3,\n      offset: 8,\n      style: {\n        stroke: \"rgba(255, 255, 255, 0.65)\",\n        \"stroke-width\": 1.5\n      }\n    },\n    shadow: {\n      style: {\n        stroke: \"none\",\n        fill: (0, _lib.toRaphaelColor)({\n          FCcolor: {\n            alpha: \"25,0,0\",\n            angle: 360,\n            color: \"000000,FFFFFF,FFFFFF\",\n            ratio: \"0,30,40\"\n          }\n        })\n      }\n    },\n    bound: {\n      style: {\n        stroke: \"none\"\n      }\n    }\n  };\n  defaultConf.sliderGroupConf = {\n    showTooltip: 1,\n    outerCircle: {\n      rFactor: 1.4,\n      style: {\n        fill: TRACKER_FILL,\n        stroke: \"#757575\",\n        \"stroke-width\": 3\n      }\n    },\n    innerCircle: {\n      rFactor: .65,\n      style: {\n        fill: TRACKER_FILL,\n        stroke: \"#FFFFFF\"\n      }\n    }\n  };\n  defaultConf.axisTextItemConf = {\n    spreadFactor: .3,\n    padding: {\n      v: 1,\n      h: 1\n    },\n    style: {\n      fill: \"#786B50\",\n      fontFamily: \"sans-serif\",\n      fontSize: \"12px\",\n      fontWeight: \"normal\",\n      fontStyle: \"normal\"\n    }\n  };\n\n  function normalizePreprocessedData(confArr) {\n    var numberFormatter = chart.getFromEnv(\"number-formatter\"),\n        index,\n        length,\n        rawVal;\n\n    for (index = 0, length = confArr.length; index < length; index++) {\n      rawVal = confArr[index].maxvalue;\n\n      if (!rawVal) {\n        continue;\n      }\n\n      confArr[index].maxvalue = numberFormatter.getCleanValue(rawVal);\n    }\n  }\n\n  return {\n    init: function init(options) {\n      chart = options.chart;\n    },\n    legacyDataParser: function legacyDataParser(data, extremes) {\n      var colormanagerConf = {},\n          numberFormatter = chart.getFromEnv(\"number-formatter\"),\n          colorConfArr,\n          colorConf,\n          startColor,\n          endColor,\n          index,\n          validColor,\n          length,\n          colorRange,\n          value,\n          dispValue,\n          mapByPercent,\n          isMaxValPresent;\n\n      if (!data) {\n        return false;\n      }\n\n      colormanagerConf.mapByPercent = mapByPercent = !!(0, _lib.pluckNumber)(data.mapbypercent, 0);\n      colorConfArr = data.color || [];\n\n      if (data.minvalue === UNDEF) {\n        data.minvalue = extremes.min !== UNDEF ? mapByPercent ? 0 : extremes.min : 0;\n      }\n\n      if (data.maxvalue === UNDEF) {\n        data.maxvalue = extremes.max !== UNDEF ? mapByPercent ? 100 : extremes.max : 100;\n      }\n\n      isMaxValPresent = false;\n\n      for (index = 0, length = colorConfArr.length; index < length; index++) {\n        if (colorConfArr[index].maxvalue) {\n          isMaxValPresent = true;\n          break;\n        }\n      }\n\n      if (!isMaxValPresent) {\n        colorConfArr = [];\n      }\n\n      startColor = data.code;\n      colorRange = colormanagerConf.colorRange = [];\n      colormanagerConf.gradient = !!(0, _lib.pluckNumber)(data.gradient, 1);\n\n      if (!colorConfArr.length) {\n        if (startColor) {\n          endColor = getValidHexColor(startColor);\n          startColor = getValidHexColor();\n        } else {\n          startColor = getValidHexColor();\n          endColor = getOppositeColor(startColor);\n        }\n\n        colorConfArr.push({\n          code: endColor,\n          maxvalue: data.maxvalue,\n          label: UNDEF\n        });\n      } else {\n        startColor = getValidHexColor(startColor);\n      }\n\n      normalizePreprocessedData(colorConfArr);\n      colorConfArr = colorConfArr.sort(function (m, n) {\n        return m.maxvalue - n.maxvalue;\n      });\n      value = dispValue = data.minvalue && numberFormatter.getCleanValue(data.minvalue);\n      dispValue = (value !== UNDEF || value !== null) && (mapByPercent ? value + PERCENT_STR : numberFormatter.legendValue(value));\n      colorRange.push({\n        code: (0, _lib.dehashify)(startColor),\n        value: value,\n        displayValue: dispValue,\n        label: data.startlabel\n      });\n\n      for (index = 0, length = colorConfArr.length; index < length; index++) {\n        colorConf = colorConfArr[index];\n        validColor = getValidHexColor(colorConf.code || colorConf.color);\n        value = dispValue = colorConf.maxvalue;\n\n        if (isNaN(parseInt(value, 10))) {\n          continue;\n        }\n\n        dispValue = (value !== UNDEF || value !== null) && (mapByPercent ? value + PERCENT_STR : numberFormatter.legendValue(value));\n        colorRange.push({\n          code: (0, _lib.dehashify)(validColor),\n          value: value,\n          displayValue: dispValue,\n          label: (0, _lib.parseUnsafeString)(colorConf.label || colorConf.displayvalue)\n        });\n      }\n\n      colorRange[colorRange.length - 1].label = (0, _lib.parseUnsafeString)(data.endlabel || colorConf.label);\n      return colormanagerConf;\n    },\n    getDefaultConf: function getDefaultConf(key) {\n      return defaultConf[key];\n    }\n  };\n}();\n\nvar GLegend = function (_ComponentInterface) {\n  (0, _inheritsLoose2.default)(GLegend, _ComponentInterface);\n  var _proto = GLegend.prototype;\n\n  _proto.getType = function getType() {\n    return \"gradientLegend\";\n  };\n\n  _proto.getName = function getName() {\n    return \"gLegend\";\n  };\n\n  function GLegend() {\n    var _this;\n\n    _this = _ComponentInterface.call(this) || this;\n    gLegendRef = (0, _assertThisInitialized2.default)(_this);\n    _this.enabled = false;\n    _this.drawOptions = {};\n    _this.components = {};\n    return _this;\n  }\n\n  _proto.setColorRange = function setColorRange(colorRange) {\n    var cr = this.drawOptions.colorRange = colorRange;\n    cr && cr._preparationGoneWrong && (this._dontPlot = true);\n  };\n\n  _proto.configureAttributes = function configureAttributes() {\n    var componentAPI = this,\n        chart = componentAPI.getFromEnv(\"chart\"),\n        chartAttrs = componentAPI.getFromEnv(\"dataSource\").chart,\n        conf = componentAPI.conf = {},\n        outCanvasBaseFont = chartAttrs.outcnvbasefont,\n        outCanvasBaseFontSize = this.computeFontSize(chartAttrs.outcnvbasefontsize),\n        outCanvasBaseFontColor = chartAttrs.outcnvbasefontcolor,\n        labelStyle = chart.config.dataLabelStyle,\n        fColor,\n        fFamily,\n        fSize,\n        fSizeWithUnit,\n        fWeight,\n        cfColor,\n        cfFamily,\n        cfSize,\n        cfSizeWithUnit,\n        cfWeight,\n        axisBorderColor,\n        axisBorderAlpha;\n    legendManager.init({\n      chart: chart\n    });\n    componentAPI.data = componentAPI.getFromEnv(\"dataSource\").colorrange;\n\n    if (componentAPI._dontPlot) {\n      return;\n    }\n\n    componentAPI.drawOptions = {\n      smartLabel: componentAPI.getFromEnv(\"smartLabel\"),\n      gLegend: componentAPI\n    };\n    componentAPI._dontPlot = false;\n    componentAPI._recalculateLogicalSpace = true;\n    conf.caption = (0, _lib.parseUnsafeString)((0, _lib.pluck)(chartAttrs.legendcaption));\n    conf.legendPosition = (0, _lib.pluck)(chartAttrs.legendposition, \"bottom\").toLowerCase();\n    conf.legendXPosition = (0, _lib.pluckNumber)(chartAttrs.legendxposition, 0);\n    conf.legendYPosition = (0, _lib.pluckNumber)(chartAttrs.legendyposition, 0);\n    conf.legendMaxHeight = (0, _lib.pluckNumber)(chartAttrs.legendmaxheight, 0);\n    conf.legendMaxWidth = (0, _lib.pluckNumber)(chartAttrs.legendmaxwidth, 0);\n    conf.legendVertical = typeof chartAttrs.legendorientation === \"string\" && chartAttrs.legendorientation.toLowerCase() === VERTICAL;\n    conf.showLegend = (0, _lib.pluckNumber)(chartAttrs.showlegend, 1);\n    conf.interactiveLegend = (0, _lib.pluckNumber)(chartAttrs.interactivelegend, 1);\n    conf.showLegendLabels = (0, _lib.pluckNumber)(chartAttrs.showlegendlabels, 1);\n    fColor = chartAttrs.legenditemfontcolor || outCanvasBaseFontColor;\n    fFamily = chartAttrs.legenditemfont || outCanvasBaseFont;\n    fSize = chartAttrs.legenditemfontsize || outCanvasBaseFontSize;\n    fSizeWithUnit = (0, _lib.pluckFontSizeMaintainUnit)(chartAttrs.legenditemfontsize, chartAttrs.outcnvbasefontsize);\n    fWeight = (0, _lib.pluckNumber)(chartAttrs.legenditemfontbold, 0);\n    cfColor = chartAttrs.legendcaptionfontcolor || outCanvasBaseFontColor;\n    cfFamily = chartAttrs.legendcaptionfont || outCanvasBaseFont;\n    cfSize = chartAttrs.legendcaptionfontsize || outCanvasBaseFontSize;\n    cfSizeWithUnit = (0, _lib.pluckFontSizeMaintainUnit)(chartAttrs.legendcaptionfontsize, chartAttrs.outcnvbasefontsize);\n    cfWeight = (0, _lib.pluckNumber)(chartAttrs.legendcaptionfontbold, 1);\n    axisBorderColor = chartAttrs.legendaxisbordercolor ? (0, _lib.hashify)((0, _lib.dehashify)(chartAttrs.legendaxisbordercolor)) : UNDEF;\n    axisBorderAlpha = axisBorderColor ? (0, _lib.pluckNumber)(chartAttrs.legendaxisborderalpha, 100) / 100 : UNDEF;\n    conf.axisTextItemConf = {\n      style: {\n        fill: fColor ? (0, _lib.convertColor)((0, _lib.pluck)(fColor)) : labelStyle.color,\n        fontFamily: fFamily ? (0, _lib.pluck)(fFamily) : labelStyle.fontFamily,\n        fontSize: fSize ? (0, _lib.pluckNumber)(fSize) : labelStyle.fontSize.match(/\\d+/)[0],\n        fontSizeWithUnit: (0, _lib.pluckFontSizeMaintainUnit)(fSizeWithUnit, labelStyle.fontSize.match(/\\d+/)[0]),\n        fontWeight: fWeight ? \"bold\" : labelStyle.fontWeight\n      }\n    };\n    conf.legendCaptionConf = {\n      style: {\n        fill: cfColor ? (0, _lib.convertColor)((0, _lib.pluck)(cfColor)) : labelStyle.color,\n        fontFamily: cfFamily ? (0, _lib.pluck)(cfFamily) : labelStyle.fontFamily,\n        fontSize: cfSize ? (0, _lib.pluckNumber)(cfSize) : labelStyle.fontSize.match(/\\d+/)[0],\n        fontSizeWithUnit: (0, _lib.pluckFontSizeMaintainUnit)(cfSizeWithUnit, labelStyle.fontSize.match(/\\d+/)[0]),\n        fontWeight: cfWeight ? \"bold\" : labelStyle.fontWeight,\n        fontStyle: \"normal\"\n      }\n    };\n    conf.legendAxisConf = {\n      legendAxisHeight: 11,\n      style: {\n        stroke: axisBorderColor,\n        \"stroke-opacity\": axisBorderAlpha\n      },\n      line: {\n        style: {\n          stroke: (0, _lib.convertColor)((0, _lib.pluck)(chartAttrs.legendscalelinecolor, \"FFF8E9\"), (0, _lib.pluckNumber)(chartAttrs.legendscalelinealpha, 100)),\n          \"stroke-width\": (0, _lib.pluckNumber)(chartAttrs.legendscalelinethickness)\n        }\n      }\n    };\n    conf.sliderGroupConf = {\n      showTooltip: (0, _lib.pluckNumber)(chartAttrs.showtooltip, 1),\n      outerCircle: {\n        rFactor: (0, _lib.pluckNumber)(chartAttrs.sliderdiameterfactor),\n        style: {\n          stroke: (0, _lib.convertColor)((0, _lib.pluck)(chartAttrs.legendpointerbordercolor, \"757575\"), (0, _lib.pluckNumber)(chartAttrs.legendpointerborderalpha, 100))\n        }\n      },\n      innerCircle: {\n        rFactor: (0, _lib.pluckNumber)(chartAttrs.sliderholediameterfactor),\n        style: {\n          stroke: (0, _lib.convertColor)((0, _lib.pluck)(chartAttrs.legendpointercolor, \"FFFFFF\"), (0, _lib.pluckNumber)(chartAttrs.legendpointeralpha, 100))\n        }\n      }\n    };\n    conf.legendCarpetConf = {\n      spreadFactor: (0, _lib.pluckNumber)(chartAttrs.legendspreadfactor),\n      allowDrag: !!(0, _lib.pluckNumber)(chartAttrs.legendallowdrag, 0),\n      captionAlignment: (0, _lib.pluck)(chartAttrs.legendcaptionalignment, \"center\"),\n      style: {\n        fill: (0, _lib.convertColor)((0, _lib.pluck)(chartAttrs.legendbgcolor, \"e4d9c1\"), (0, _lib.pluckNumber)(chartAttrs.legendbgalpha, 100)),\n        stroke: (0, _lib.convertColor)((0, _lib.pluck)(chartAttrs.legendbordercolor, \"c4b89d\"), (0, _lib.pluckNumber)(chartAttrs.legendborderalpha, 100)),\n        \"stroke-width\": (0, _lib.pluckNumber)(chartAttrs.legendborderthickness, 1)\n      }\n    };\n  };\n\n  _proto.postConfigureInit = function postConfigureInit() {\n    var componentAPI = this,\n        conf = componentAPI.conf,\n        caption,\n        carpet,\n        axis,\n        sGroup,\n        ovrdConf,\n        ovrdTextConf,\n        body,\n        labels,\n        values,\n        captionConfig,\n        axisConfig,\n        legendPosition = conf.legendPosition ? conf.legendPosition.split(\"-\") : [],\n        bodyConfig;\n    componentAPI.elem = {};\n\n    if (conf.interactiveLegend) {\n      ovrdConf = merge(legendManager.getDefaultConf(\"sliderGroupConf\"), conf.sliderGroupConf);\n\n      if (this.sGroup) {\n        sGroup = componentAPI.elem.sGroup = this.sGroup;\n        sGroup.configure(ovrdConf);\n        componentAPI.elem.sGroup.gLegend = componentAPI;\n      } else {\n        this.sGroup = componentAPI.elem.sGroup = sGroup = new SliderGroup(ovrdConf);\n        sGroup.configure(ovrdConf);\n        componentAPI.elem.sGroup.gLegend = componentAPI;\n      }\n    } else {\n      this.sGroup && this.sGroup.dispose();\n      this.sGroup && delete this.sGroup;\n    }\n\n    ovrdConf = merge(legendManager.getDefaultConf(\"legendCarpetConf\"), conf.legendCarpetConf);\n    ovrdConf.legendPosition = legendPosition[0] === ABSOLUTE && !conf.legendVertical || legendPosition[0] === TOP || legendPosition[0] === BOTTOM ? BOTTOM : RIGHT;\n    bodyConfig = legendManager.getDefaultConf(\"legendBodyConf\");\n\n    if (legendPosition[0] === ABSOLUTE && !conf.legendVertical || legendPosition[0] === TOP || legendPosition[0] === BOTTOM) {\n      componentAPI.drawOptions.refSideKey = CANVAS_WIDTH;\n      componentAPI.drawOptions.refOffsetKey = CANVAS_LEFT;\n      ovrdTextConf = merge(legendManager.getDefaultConf(\"axisTextItemConf\"), conf.axisTextItemConf);\n      bodyConfig.legendPosition = BOTTOM;\n      axisConfig = merge(legendManager.getDefaultConf(\"legendAxisConf\"), conf.legendAxisConf);\n      axisConfig.legendPosition = BOTTOM;\n      ovrdTextConf.legendPosition = BOTTOM;\n    } else {\n      componentAPI.drawOptions.refSideKey = CANVAS_HEIGHT;\n      componentAPI.drawOptions.refOffsetKey = CANVAS_TOP;\n      ovrdTextConf = merge(legendManager.getDefaultConf(\"axisTextItemConf\"), conf.axisTextItemConf);\n      bodyConfig.legendPosition = RIGHT;\n      axisConfig = merge(legendManager.getDefaultConf(\"legendAxisConf\"), conf.legendAxisConf);\n      axisConfig.legendPosition = RIGHT;\n      ovrdTextConf.legendPosition = RIGHT;\n    }\n\n    if (!Object.keys(this.components).length) {\n      this.components.LegendCarpet = new LegendCarpet();\n      this.components.LegendBody = new LegendBody();\n      this.components.LegendAxis = new LegendAxis();\n      this.components.LegendValues = new LegendValues();\n      conf.showLegendLabels && (this.components.LegendLabels = new LegendLabels());\n    }\n\n    axis = this.components.LegendAxis;\n    values = this.components.LegendValues;\n    carpet = this.components.LegendCarpet;\n    body = this.components.LegendBody;\n    conf.showLegendLabels && (labels = this.components.LegendLabels);\n    this.components.LegendCarpet.configure(ovrdConf);\n    this.components.LegendValues.configure(ovrdTextConf);\n    this.components.LegendAxis.configure(axisConfig);\n    this.components.LegendBody.configure(componentAPI.drawOptions.colorRange, bodyConfig, ovrdTextConf);\n    conf.showLegendLabels && labels.configure(ovrdTextConf);\n\n    if (conf.caption) {\n      captionConfig = merge(legendManager.getDefaultConf(\"legendCaptionConf\"), conf.legendCaptionConf);\n\n      if (this.componentCaption && Object.keys(this.componentCaption).length) {\n        this.componentCaption.configure(conf.caption, captionConfig);\n      } else {\n        caption = this.componentCaption = new LegendCaption();\n        caption.configure(conf.caption, captionConfig);\n      }\n\n      carpet.addCompositions(this.componentCaption, compositionKeys.CAPTION);\n    } else {\n      carpet.removeCompositions(compositionKeys.CAPTION);\n      this.componentCaption && this.componentCaption.dispose();\n      delete this.componentCaption;\n    }\n\n    sGroup && axis.addCompositions(sGroup, compositionKeys.RANGE);\n    labels && body.addCompositions(labels, compositionKeys.AXIS_LABEL);\n    body.addCompositions(axis, compositionKeys.LEGEND_AXIS);\n    body.addCompositions(values, compositionKeys.AXIS_VALUE);\n    carpet.addCompositions(body, compositionKeys.LEGEND_BODY);\n    componentAPI.elem.gl = new LegendBase(carpet);\n  };\n\n  _proto.getValueRange = function getValueRange() {\n    var componentAPI = this,\n        rGroup = componentAPI.elem && componentAPI.elem.sGroup,\n        sliders = rGroup.sliders,\n        extremes = rGroup.extremes,\n        minVal,\n        maxVal;\n    minVal = sliders[\"false\"].currPos;\n    maxVal = extremes[1] - extremes[0] + sliders[\"true\"].currPos;\n    return [{\n      min: rGroup.getValueFormPixel(minVal),\n      max: rGroup.getValueFormPixel(maxVal)\n    }];\n  };\n\n  _proto._dispose = function _dispose() {\n    var componentAPI = this;\n    componentAPI.elem && componentAPI.elem.gl && componentAPI.elem.gl.dispose();\n    componentAPI.elem = {};\n\n    _ComponentInterface.prototype._dispose.call(this);\n  };\n\n  _proto.getCalculatedLogicalSpace = function getCalculatedLogicalSpace() {\n    return this._logicalArea;\n  };\n\n  _proto.setCalculatedLogicalSpace = function setCalculatedLogicalSpace(area) {\n    this._logicalArea = area;\n  };\n\n  _proto.getLogicalSpace = function getLogicalSpace(maxOtherSide) {\n    var componentAPI = this,\n        conf = componentAPI.conf,\n        zeroArea = {\n      height: 0,\n      width: 0\n    },\n        logicalSpace,\n        drawOptions = componentAPI.drawOptions,\n        refSideKey,\n        chartConfig = componentAPI.getFromEnv(\"chartConfig\"),\n        refOffsetKey,\n        isAbsolute = conf.legendPosition.split(\"-\")[0] === ABSOLUTE,\n        maxHeight,\n        maxWidth;\n\n    if (!componentAPI._recalculateLogicalSpace) {\n      refSideKey = drawOptions.refSideKey;\n      refOffsetKey = drawOptions.refOffsetKey;\n      componentAPI.drawOptions.refSide = chartConfig[refSideKey];\n\n      if (isAbsolute) {\n        if (conf.legendMaxHeight <= 0) {\n          maxHeight = chartConfig.height * .8;\n        } else if (conf.legendMaxHeight <= chartConfig.height) {\n          maxHeight = conf.legendMaxHeight;\n        } else {\n          maxHeight = chartConfig.height;\n        }\n\n        if (conf.legendMaxWidth <= 0) {\n          maxWidth = chartConfig.width * .8;\n        } else if (conf.legendMaxWidth <= chartConfig.width) {\n          maxWidth = conf.legendMaxWidth;\n        } else {\n          maxWidth = chartConfig.width;\n        }\n\n        if (conf.legendVertical) {\n          componentAPI.drawOptions.refSide = maxHeight;\n          componentAPI.drawOptions.maxOtherSide = maxWidth;\n        } else {\n          componentAPI.drawOptions.refSide = maxWidth;\n          componentAPI.drawOptions.maxOtherSide = maxHeight;\n        }\n      } else {\n        componentAPI.drawOptions.refOffset = chartConfig[refOffsetKey];\n        componentAPI.drawOptions.maxOtherSide = maxOtherSide || componentAPI.drawOptions.maxOtherSide;\n      }\n\n      logicalSpace = componentAPI.elem.gl.getLogicalSpace(componentAPI.drawOptions, true);\n      componentAPI.setCalculatedLogicalSpace(logicalSpace);\n      return componentAPI.getCalculatedLogicalSpace() || zeroArea;\n    }\n\n    if (componentAPI._dontPlot) {\n      return zeroArea;\n    }\n\n    componentAPI._recalculateLogicalSpace = false;\n    componentAPI.postConfigureInit();\n\n    if (!conf.showLegend) {\n      return zeroArea;\n    }\n\n    refSideKey = drawOptions.refSideKey;\n    refOffsetKey = drawOptions.refOffsetKey;\n    componentAPI.drawOptions.refSide = chartConfig[refSideKey];\n    componentAPI.drawOptions.refOffset = chartConfig[refOffsetKey];\n    componentAPI.drawOptions.maxOtherSide = maxOtherSide || componentAPI.drawOptions.maxOtherSide;\n\n    if (componentAPI.elem.gl) {\n      logicalSpace = componentAPI.elem.gl.getLogicalSpace(componentAPI.drawOptions, true);\n      componentAPI.elem.gl && componentAPI.setCalculatedLogicalSpace(logicalSpace);\n    }\n\n    return componentAPI.getCalculatedLogicalSpace();\n  };\n\n  _proto.resetLegend = function resetLegend() {\n    var componentAPI = this,\n        rGroup;\n    rGroup = componentAPI.elem && componentAPI.elem.sGroup;\n\n    if (rGroup) {\n      rGroup.reset();\n    }\n  };\n\n  _proto._calculateTopPosition = function _calculateTopPosition(y) {\n    var legend = this,\n        chart = legend.getFromEnv(\"chart\"),\n        chartConfig = chart.config,\n        yPos = y,\n        caption = chart.getChildren(\"caption\") && chart.getChildren(\"caption\")[0],\n        subCaption = chart.getChildren(\"subCaption\") && chart.getChildren(\"subCaption\")[0],\n        toolbar = chart.getChildren(\"chartMenuBar\") && chart.getChildren(\"chartMenuBar\")[0],\n        oriCanvasTop = chartConfig.oriTopSpace;\n\n    if (!chartConfig.toolbarY && toolbar && toolbar.props && toolbar.props.height) {\n      if (!(oriCanvasTop > toolbar.props.height + toolbar.props.y)) {\n        yPos = toolbar.props.y + toolbar.props.height;\n      }\n    }\n\n    if (caption && caption.config && caption.config.text && caption.config.text !== _lib.BLANKSTRING && caption.config.height && caption.config.isOnTop === 1) {\n      yPos = caption.config.height + caption.config.y + caption.config.captionPadding;\n    }\n\n    if (subCaption && subCaption.config && subCaption.config.height && subCaption.config.isOnTop === 1) {\n      yPos = subCaption.config.y + subCaption.config.height + (caption && caption.config && caption.config.captionPadding || 0);\n    }\n\n    return yPos > y ? yPos : y;\n  };\n\n  _proto.allocatePosition = function allocatePosition() {\n    var iapi = this.getFromEnv(\"chart\"),\n        config = iapi.config,\n        gradientLegend = this,\n        conf = gradientLegend.conf || {},\n        legendPosition = conf.legendPosition.split(\"-\"),\n        canvasLeft = config.canvasLeft,\n        canvasTop = config.canvasTop,\n        canvasWidth = config.canvasWidth,\n        canvasHeight = config.canvasHeight,\n        marginTop = config.marginTop,\n        marginBottom = config.marginBottom,\n        marginRight = config.marginRight,\n        marginLeft = config.marginLeft,\n        spaceTakenByGradientLegend,\n        spaceLeft,\n        width,\n        height,\n        xPos,\n        yPos,\n        xLim,\n        yLim;\n    conf.axisTextItemConf.style.fontSize = this.computeFontSize(conf.axisTextItemConf.style.fontSizeWithUnit);\n    conf.legendCaptionConf.style.fontSize = this.computeFontSize(conf.legendCaptionConf.style.fontSizeWithUnit);\n\n    if (!iapi.config.gLegendEnabled) {\n      return;\n    }\n\n    spaceTakenByGradientLegend = this.getCalculatedLogicalSpace();\n    width = conf.width = spaceTakenByGradientLegend.width;\n    height = conf.height = spaceTakenByGradientLegend.height;\n\n    if (legendPosition[0] === ABSOLUTE) {\n      xLim = config.width - width;\n      yLim = config.height - height;\n      xPos = conf.legendXPosition < 0 ? 0 : conf.legendXPosition > xLim ? xLim : conf.legendXPosition;\n      yPos = conf.legendYPosition < 0 ? 0 : conf.legendYPosition > yLim ? yLim : conf.legendYPosition;\n    } else if (legendPosition[0] === TOP || legendPosition[0] === BOTTOM) {\n      spaceLeft = canvasWidth - width;\n\n      if (legendPosition[1] === LEFT) {\n        xPos = canvasLeft;\n      } else if (legendPosition[1] === RIGHT) {\n        xPos = canvasLeft + (spaceLeft > 0 ? spaceLeft : 0);\n      } else {\n        xPos = canvasLeft + (spaceLeft < 0 ? 0 : spaceLeft / 2);\n      }\n\n      if (legendPosition[0] === TOP) {\n        yPos = this._calculateTopPosition(marginTop);\n      } else {\n        yPos = config.height - spaceTakenByGradientLegend.height - marginBottom - (config.actionBarHeight || 0);\n      }\n    } else {\n      spaceLeft = canvasHeight - height;\n\n      if (legendPosition[1] === TOP) {\n        yPos = canvasTop;\n      } else if (legendPosition[1] === BOTTOM) {\n        yPos = canvasTop + spaceLeft;\n      } else {\n        yPos = canvasTop + (spaceLeft < 0 ? 0 : spaceLeft / 2);\n      }\n\n      if (legendPosition[0] === LEFT) {\n        xPos = marginLeft;\n      } else {\n        xPos = config.width - spaceTakenByGradientLegend.width - marginRight;\n      }\n    }\n\n    conf.xPos = xPos;\n    conf.yPos = yPos;\n  };\n\n  _proto.draw = function draw() {\n    var iapi = this.getFromEnv(\"chart\"),\n        colorRangeObj = iapi.getFromEnv(\"dataSource\").colorrange,\n        gradientLegend = this,\n        conf = gradientLegend.conf || {},\n        hasGradientLegend = iapi.hasGradientLegend;\n\n    if (!iapi.config.gLegendEnabled) {\n      return;\n    }\n\n    colorRangeObj && hasGradientLegend && gradientLegend.drawLegendComponent(conf.xPos, conf.yPos, {\n      parentGroup: iapi.getContainer(\"parentgroup\"),\n      animationManager: iapi.getFromEnv(\"animationManager\")\n    });\n  };\n\n  _proto.drawLegendComponent = function drawLegendComponent(x, y, options) {\n    var componentAPI = this,\n        conf = componentAPI.conf,\n        measurement,\n        node;\n\n    if (componentAPI._dontPlot) {\n      return;\n    }\n\n    if (!conf.showLegend) {\n      componentAPI.enabled = false;\n      return;\n    }\n\n    componentAPI.drawOptions.animationManager = options.animationManager;\n    componentAPI.drawOptions.parentGroup = options.parentGroup;\n    componentAPI.drawOptions.x = x;\n    componentAPI.drawOptions.y = y;\n    componentAPI.drawOptions.maxOtherSide = componentAPI.drawOptions.maxOtherSide || options.maxOtherSide;\n    node = componentAPI.elem.gl.draw(componentAPI.drawOptions);\n    measurement = node.getBBox();\n    conf.xPos = measurement.x;\n    conf.yPos = measurement.y;\n    conf.height = measurement.height;\n    conf.width = measurement.width;\n    componentAPI.enabled = true;\n  };\n\n  return GLegend;\n}(_componentInterface.ComponentInterface);\n\nvar LegendBase = function () {\n  function LegendBase(carpet) {\n    this.carpet = carpet;\n  }\n\n  var _proto2 = LegendBase.prototype;\n\n  _proto2.draw = function draw(options) {\n    return this.carpet.draw(options);\n  };\n\n  _proto2.getLogicalSpace = function getLogicalSpace(options, recalculate) {\n    return this.carpet.getLogicalSpace(options, recalculate);\n  };\n\n  _proto2.dispose = function dispose() {\n    this.carpet && this.carpet.group && this.carpet.group.remove();\n  };\n\n  return LegendBase;\n}();\n\nvar LegendCarpet = function () {\n  function LegendCarpet(conf) {\n    this.conf = conf;\n    this._id = GL_CARPET;\n    this.compositionsByCategory = {};\n    this.node = UNDEF;\n    this.group = UNDEF;\n    this._lSpace = UNDEF;\n    this.autoRecalculate = false;\n    this.groupName = FC_GRADIENT_LEGEND;\n    this.moveInstructions = {};\n  }\n\n  var _proto3 = LegendCarpet.prototype;\n\n  _proto3.configure = function configure(conf) {\n    this.conf = conf;\n  };\n\n  _proto3.getName = function getName() {\n    return \"LegendCarpet\";\n  };\n\n  _proto3.getType = function getType() {\n    return \"legend\";\n  };\n\n  _proto3.addCompositions = function addCompositions(instance, category) {\n    this.compositionsByCategory[category] = instance;\n  };\n\n  _proto3.removeCompositions = function removeCompositions(category) {\n    delete this.compositionsByCategory[category];\n  };\n\n  _proto3.getBoundingBox = function getBoundingBox(options) {\n    var conf = this.conf,\n        spreadFactor = conf.spreadFactor,\n        refSide = options.refSide,\n        alignment = options.alignment,\n        refOffset = options.refOffset,\n        x = options.x,\n        y = options.y,\n        lWidth,\n        lHeight;\n\n    if (this.conf.legendPosition === \"bottom\") {\n      lWidth = conf.width = refSide * spreadFactor;\n      lHeight = options.maxOtherSide;\n\n      if (alignment && (x === UNDEF || x === null)) {\n        x = (refOffset + refSide) / 2 - lWidth / 2;\n      }\n    } else {\n      lHeight = conf.height = refSide * spreadFactor;\n      lWidth = options.maxOtherSide;\n\n      if (alignment && (y === UNDEF || y === null)) {\n        y = (refOffset + refSide) / 2 - lHeight / 2;\n      }\n    }\n\n    return {\n      width: lWidth,\n      height: lHeight,\n      x: x,\n      y: y\n    };\n  };\n\n  _proto3.getPostCalcDecisionsH = function getPostCalcDecisionsH(bBox, componentsArea) {\n    var conf = this.conf,\n        padding = conf.padding,\n        cat,\n        totalHeightTaken = 0;\n    this.moveInstructions = {};\n\n    for (cat in componentsArea) {\n      totalHeightTaken += componentsArea[cat].height || 0;\n    }\n\n    bBox.height = totalHeightTaken + 2 * padding.v;\n  };\n\n  _proto3.getLogicalSpace = function getLogicalSpace(options, recalculate) {\n    var lSpace = this._lSpace,\n        categoryMap = [\"CAPTION\", \"LEGEND_BODY\"],\n        conf = this.conf,\n        padding = conf.padding,\n        compositionsByCategory = this.compositionsByCategory,\n        composition,\n        bBox,\n        effectivePlotArea,\n        compositionLSPace,\n        compositionHeight = 0,\n        componentsArea = {},\n        compositionPlotArea,\n        heightNotUsed = 0;\n\n    if (lSpace && !recalculate) {\n      lSpace.isImpure = true;\n      return lSpace;\n    }\n\n    lSpace = this._lSpace = bBox = this.getBoundingBox(options);\n\n    if (isInvalid(lSpace.x) || isInvalid(lSpace.y) || isInvalid(lSpace.height) || isInvalid(lSpace.width)) {\n      this.autoRecalculate = true;\n    }\n\n    effectivePlotArea = merge(bBox, {});\n    effectivePlotArea.height -= 2 * padding.v;\n    effectivePlotArea.width -= 2 * padding.h;\n    effectivePlotArea.x += padding.h;\n    effectivePlotArea.y += padding.v;\n\n    for (var i = 0; i < categoryMap.length; i++) {\n      composition = compositionsByCategory[categoryMap[i]];\n\n      if (composition) {\n        compositionPlotArea = merge(effectivePlotArea, {});\n        compositionPlotArea.y += compositionHeight;\n        compositionHeight = effectivePlotArea.height * composition.conf.spreadFactor;\n        compositionPlotArea.height = compositionHeight + heightNotUsed;\n        compositionLSPace = composition.getLogicalSpace(merge(compositionPlotArea, {}), options, recalculate);\n        heightNotUsed = compositionPlotArea.height - compositionLSPace.height;\n        componentsArea[categoryMap[i]] = compositionLSPace;\n        compositionHeight = compositionLSPace.height;\n      }\n    }\n\n    this.getPostCalcDecisions(bBox, componentsArea);\n    this._lSpace = bBox;\n    return bBox;\n  };\n\n  _proto3.setupDragging = function setupDragging() {\n    var group = this.group,\n        dx = 0,\n        dy = 0,\n        idx = 0,\n        idy = 0;\n    group.css({\n      cursor: \"move\"\n    });\n    group.drag(function (_dx, _dy) {\n      dx = _dx;\n      dy = _dy;\n      group.attr({\n        transform: \"t\" + (idx + dx) + \",\" + (idy + dy)\n      });\n    }, function () {\n      idx += dx;\n      idy += dy;\n    }, _lib.stubFN);\n  };\n\n  _proto3.draw = function draw(options) {\n    var conf = this.conf,\n        ref = this,\n        categoryMap = [\"CAPTION\", \"LEGEND_BODY\"],\n        compositionsByCategory = this.compositionsByCategory,\n        animationManager = options.animationManager,\n        parentGroup = options.parentGroup,\n        group,\n        category,\n        composition,\n        lSpace;\n    this.getLogicalSpace(options, this.autoRecalculate);\n    lSpace = this._lSpace;\n    this.group = group = animationManager.setAnimation({\n      el: this.group || \"group\",\n      attr: {\n        name: ref.groupName\n      },\n      component: gLegendRef,\n      container: parentGroup,\n      label: \"carpetGroup\"\n    });\n    this.node = animationManager.setAnimation({\n      el: this.node || \"rect\",\n      attr: lSpace,\n      css: conf.style,\n      component: gLegendRef,\n      container: group,\n      label: \"rect\"\n    });\n\n    for (var i = 0; i < categoryMap.length; i++) {\n      composition = compositionsByCategory[categoryMap[i]];\n\n      if (composition) {\n        composition.draw(conf.captionAlignment, lSpace, {\n          animationManager: animationManager,\n          colorRange: options.colorRange,\n          numberFormatter: options.numberFormatter,\n          parentLayer: group,\n          smartLabel: options.smartLabel,\n          moveInstructions: this.moveInstructions[category],\n          gLegend: options.gLegend\n        });\n      }\n    }\n\n    conf.allowDrag && this.setupDragging();\n    return this.node;\n  };\n\n  _proto3.getPostCalcDecisions = function getPostCalcDecisions(bBox, componentsArea) {\n    return this.conf.legendPosition === \"bottom\" ? this.getPostCalcDecisionsH(bBox, componentsArea) : this.getPostCalcDecisionsV(bBox, componentsArea);\n  };\n\n  _proto3.getPostCalcDecisionsV = function getPostCalcDecisionsV(bBox, componentsArea) {\n    var conf = this.conf,\n        padding = conf.padding,\n        maxWidth = Number.NEGATIVE_INFINITY,\n        width,\n        cat,\n        move = this.moveInstructions,\n        diff;\n    this.getPostCalcDecisionsH(bBox, componentsArea);\n\n    for (cat in componentsArea) {\n      width = componentsArea[cat].width;\n      maxWidth = maxWidth < width ? width : maxWidth;\n    }\n\n    bBox.width = maxWidth + 2 * padding.h;\n\n    for (cat in componentsArea) {\n      width = componentsArea[cat].width;\n      diff = maxWidth - width;\n\n      if (diff) {\n        move[cat] = \"t\" + diff / 2 + \",0\";\n      }\n    }\n  };\n\n  return LegendCarpet;\n}();\n\nvar LegendCaption = function () {\n  function LegendCaption(text, conf) {\n    this.rawText = text;\n    this.conf = conf;\n    this._id = GL_CAPTION;\n    this.node = UNDEF;\n    this.bound = UNDEF;\n    this._lSpace = UNDEF;\n    this.LegendCaption = {};\n    this.LegendCaption.LEFT = {\n      x: function x(smartText, boundingBox) {\n        return boundingBox.x + smartText.width / 2 + 2;\n      }\n    };\n    this.LegendCaption.RIGHT = {\n      x: function x(smartText, boundingBox) {\n        return boundingBox.x + boundingBox.width - smartText.width / 2 - 2;\n      }\n    };\n    this.LegendCaption.CENTER = {\n      x: function x() {\n        var boundingBox = arguments[1];\n        return boundingBox.x + boundingBox.width / 2;\n      }\n    };\n  }\n\n  var _proto4 = LegendCaption.prototype;\n\n  _proto4.configure = function configure(text, conf) {\n    this.rawText = text;\n    this.conf = conf;\n  };\n\n  _proto4.getName = function getName() {\n    return \"LegendCaption\";\n  };\n\n  _proto4.getType = function getType() {\n    return \"caption\";\n  };\n\n  _proto4.getLogicalSpace = function getLogicalSpace(bBox, options, recalculate) {\n    var conf = this.conf,\n        padding = conf.padding,\n        lSpace = this._lSpace,\n        text = this.rawText,\n        chartConfig = options.gLegend.getFromEnv(\"chartConfig\"),\n        smartLabel,\n        effectivePlotArea,\n        smartText,\n        copyOfStyle;\n\n    if (lSpace && !recalculate) {\n      lSpace.isImpure = true;\n      return lSpace;\n    }\n\n    lSpace = this._lSpace = {\n      bound: {\n        height: 0,\n        width: 0\n      },\n      node: {\n        logicArea: UNDEF,\n        smartText: UNDEF\n      }\n    };\n    smartLabel = options.smartLabel;\n\n    if (!text) {\n      return lSpace.bound;\n    }\n\n    effectivePlotArea = merge(bBox, {});\n    effectivePlotArea.height -= 2 * padding.v;\n    effectivePlotArea.width -= 2 * padding.h;\n    effectivePlotArea.x += padding.h;\n    effectivePlotArea.y += padding.v;\n    smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n    copyOfStyle = merge(this.conf.style, {});\n    normalizeFontSizeAppend(copyOfStyle);\n    smartLabel.setStyle(this._metaStyle = copyOfStyle);\n    smartText = smartLabel.getSmartText(text, effectivePlotArea.width, effectivePlotArea.height);\n    effectivePlotArea.height = smartText.height;\n    effectivePlotArea.width = smartText.width;\n    bBox.height = smartText.height + 2 * padding.v;\n    bBox.width = smartText.width + 2 * padding.h;\n    lSpace.node.smartText = smartText;\n    lSpace.node.logicArea = effectivePlotArea;\n    lSpace.bound = bBox;\n    return bBox;\n  };\n\n  _proto4.draw = function draw() {\n    var conf = this.conf,\n        layer,\n        boundAttr = conf.bound || {},\n        group,\n        bound,\n        boundingArea,\n        lSpace,\n        normalizedX,\n        x,\n        bBox,\n        options,\n        node,\n        animationManager;\n\n    if (arguments.length >= 3) {\n      x = arguments[0];\n      bBox = arguments[1];\n      options = arguments[2];\n    } else if (arguments.length >= 2) {\n      x = arguments[0];\n      options = arguments[1];\n    }\n\n    layer = options.parentLayer;\n    animationManager = options.animationManager;\n    this.group = group = animationManager.setAnimation({\n      el: this.group || \"group\",\n      attr: {\n        name: \"legend-caption\"\n      },\n      css: conf.style,\n      component: gLegendRef,\n      container: layer\n    });\n    this.getLogicalSpace(bBox, options);\n    lSpace = this._lSpace;\n    node = lSpace.node;\n    boundingArea = lSpace.bound;\n    this.bound = bound = animationManager.setAnimation({\n      el: this.bound || \"rect\",\n      attr: boundingArea,\n      css: boundAttr.style,\n      container: group,\n      component: gLegendRef\n    });\n    normalizedX = typeof x === \"string\" ? this.LegendCaption[x.toUpperCase()].x(node.smartText, bBox || node.logicArea) : x;\n    this.node = animationManager.setAnimation({\n      el: this.node || \"text\",\n      attr: {\n        text: node.smartText.text,\n        x: normalizedX,\n        y: node.logicArea.y + node.smartText.height / 2,\n        lineHeight: this._metaStyle.lineHeight,\n        fill: conf.style.fill\n      },\n      container: group,\n      component: gLegendRef\n    });\n    return {\n      group: group,\n      bound: bound,\n      node: this.node\n    };\n  };\n\n  _proto4.dispose = function dispose() {\n    this.group.remove();\n    this.bound.remove();\n    this.node.remove();\n  };\n\n  return LegendCaption;\n}();\n\nvar LegendBody = function () {\n  function LegendBody(colorRange, conf, childTextConf) {\n    this.colorRange = colorRange;\n    this.conf = conf;\n    this.childTextConf = childTextConf;\n    this._id = GL_BODY;\n    this.bound = UNDEF;\n    this.group = UNDEF;\n    this.compositionsByCategory = {};\n    this._lSpace = UNDEF;\n    this.SC_STACK = [compositionKeys.AXIS_LABEL, compositionKeys.LEGEND_AXIS, compositionKeys.AXIS_VALUE];\n    this.DARW_STACK = [compositionKeys.AXIS_VALUE, compositionKeys.LEGEND_AXIS, compositionKeys.AXIS_LABEL];\n  }\n\n  var _proto5 = LegendBody.prototype;\n\n  _proto5.configure = function configure(colorRange, conf, childTextConf) {\n    this.colorRange = colorRange;\n    this.conf = conf;\n    this.childTextConf = childTextConf;\n    this.compositionsByCategory = {};\n  };\n\n  _proto5.getName = function getName() {\n    return \"LegendBody\";\n  };\n\n  _proto5.getType = function getType() {\n    return \"legend\";\n  };\n\n  _proto5.addCompositions = function addCompositions(instance, category) {\n    this.compositionsByCategory[category] = instance;\n  };\n\n  _proto5.getSpaceTaken = function getSpaceTaken(spaceObj) {\n    return this.conf.legendPosition === \"bottom\" ? spaceObj.height : spaceObj.width;\n  };\n\n  _proto5.getLogicalSpace = function getLogicalSpace(bBox, options, recalculate) {\n    var lSpace = this._lSpace,\n        conf = this.conf,\n        padding = conf.padding,\n        compositionsByCategory = this.compositionsByCategory,\n        composition,\n        compositionPlotArea,\n        compositionAreaOffset,\n        effectivePlotArea,\n        getCompositionPlotArea,\n        spaceTaken = 0,\n        index,\n        length;\n\n    if (lSpace && !recalculate) {\n      lSpace.isImpure = true;\n      return lSpace;\n    }\n\n    lSpace = this._lSpace = {\n      bound: {\n        height: 0,\n        width: 0\n      },\n      node: {\n        logicArea: UNDEF\n      }\n    };\n    effectivePlotArea = merge(bBox, {});\n    effectivePlotArea.height -= 2 * padding.v;\n    effectivePlotArea.width -= 2 * padding.h;\n    effectivePlotArea.x += padding.h;\n    effectivePlotArea.y += padding.v;\n    getCompositionPlotArea = this.getCompositionPlotAreaFor(effectivePlotArea);\n    options.colorRange = this.colorRange;\n\n    for (index = 0, length = this.SC_STACK.length; index < length; index++) {\n      if (!(composition = compositionsByCategory[this.SC_STACK[index]])) {\n        continue;\n      }\n\n      compositionPlotArea = getCompositionPlotArea(compositionAreaOffset, composition.conf.spreadFactor);\n      compositionAreaOffset = composition.getLogicalSpace(merge(compositionPlotArea, {}), options, recalculate);\n      spaceTaken += this.getSpaceTaken(compositionAreaOffset);\n    }\n\n    this.updateEffectivePlotArea(bBox, effectivePlotArea, spaceTaken);\n    lSpace.node.logicArea = effectivePlotArea;\n    lSpace.bound = bBox;\n    return bBox;\n  };\n\n  _proto5.draw = function draw() {\n    var childTextConf = this.childTextConf,\n        conf = this.conf,\n        boundStyle = conf.bound.style || {},\n        compositionsByCategory = this.compositionsByCategory,\n        animationManager,\n        layer,\n        bound,\n        composition,\n        legendBodyGroup,\n        bBox,\n        lSpace,\n        options,\n        index,\n        length;\n\n    if (arguments.length >= 3) {\n      bBox = arguments[1];\n      options = arguments[2];\n    } else if (arguments.length >= 2) {\n      options = arguments[1];\n    }\n\n    layer = options.parentLayer;\n    animationManager = options.animationManager;\n    this.getLogicalSpace(bBox, options);\n    lSpace = this._lSpace;\n    this.group = legendBodyGroup = animationManager.setAnimation({\n      el: this.group || \"group\",\n      attr: {\n        name: \"legend-body\",\n        transform: \"t0,0\"\n      },\n      css: childTextConf.style,\n      container: layer,\n      component: gLegendRef\n    });\n    this.bound = bound = animationManager.setAnimation({\n      el: this.bound || \"rect\",\n      attr: lSpace.bound,\n      css: boundStyle,\n      container: legendBodyGroup,\n      component: gLegendRef\n    });\n    options.colorRange = this.colorRange;\n    options.parentLayer = legendBodyGroup;\n\n    for (index = 0, length = this.DARW_STACK.length; index < length; index++) {\n      if (!(composition = compositionsByCategory[this.DARW_STACK[index]])) {\n        continue;\n      }\n\n      composition.draw(options);\n    }\n\n    if (options.moveInstructions) {\n      legendBodyGroup.attr({\n        transform: options.moveInstructions\n      });\n    }\n\n    return {\n      bound: bound,\n      group: legendBodyGroup\n    };\n  };\n\n  _proto5.getCompositionPlotAreaFor = function getCompositionPlotAreaFor(effectivePlotArea) {\n    var plotArea,\n        isLPosBottom = this.conf.legendPosition === \"bottom\";\n    plotArea = merge(effectivePlotArea, {});\n    return function (compAreaOffset, sf) {\n      var compositionAreaOffset = compAreaOffset;\n      compositionAreaOffset = compositionAreaOffset || {};\n\n      if (isLPosBottom) {\n        plotArea.y += compositionAreaOffset.height || 0;\n        plotArea.height = effectivePlotArea.height * sf;\n      } else {\n        plotArea.x += compositionAreaOffset.width || 0;\n        plotArea.width = effectivePlotArea.width * sf;\n      }\n\n      return plotArea;\n    };\n  };\n\n  _proto5.updateEffectivePlotArea = function updateEffectivePlotArea(bBox, effectivePlotArea, val) {\n    var conf = this.conf,\n        padding = conf.padding;\n\n    if (this.conf.legendPosition === \"bottom\") {\n      effectivePlotArea.height = val;\n      bBox.height = val + 2 * padding.v;\n    } else {\n      effectivePlotArea.width = val;\n      bBox.width = val + 2 * padding.h;\n    }\n  };\n\n  return LegendBody;\n}();\n\nvar LegendLabels = function () {\n  function LegendLabels(conf) {\n    this.conf = conf;\n    this.node = [];\n    this._id = GL_LABELS;\n  }\n\n  var _proto6 = LegendLabels.prototype;\n\n  _proto6.configure = function configure(conf) {\n    this.conf = conf;\n  };\n\n  _proto6.getType = function getType() {\n    return \"label\";\n  };\n\n  _proto6.getName = function getName() {\n    return \"LegendLabel\";\n  };\n\n  _proto6.getEffectivePlotArea = function getEffectivePlotArea(area) {\n    var conf = this.conf,\n        padding = conf.padding;\n    area.height -= 2 * padding.v;\n    area.width -= 2 * padding.h;\n    area.x += padding.h;\n    area.y += padding.v;\n    return area;\n  };\n\n  _proto6.getLogicalSpace = function getLogicalSpace(bBox, options, recalculate) {\n    var isLegendPosBottom = this.conf.legendPosition === \"bottom\",\n        lSpace = this._lSpace,\n        conf = this.conf,\n        padding = conf.padding,\n        cRange,\n        smartLabel,\n        crDataObj,\n        index,\n        length,\n        labelHeights = [],\n        leftBound,\n        rightBound,\n        plotArea,\n        label,\n        valueRatio,\n        stop,\n        zerothStop,\n        lsTexts,\n        maxHeight,\n        effectivePlotArea,\n        testSmartLabel,\n        nextRefPoint,\n        currPoint,\n        leftStop,\n        smartText,\n        ni,\n        copyOfStyle,\n        chartConfig = options.gLegend.getFromEnv(\"chartConfig\"),\n        normalizedDataArr = [],\n        effectivePlotAreaWH;\n\n    if (lSpace && !recalculate) {\n      lSpace.isImpure = true;\n      return lSpace;\n    }\n\n    cRange = options.colorRange;\n    smartLabel = options.smartLabel;\n    valueRatio = cRange.getCumulativeValueRatio();\n    crDataObj = cRange.colorRange;\n    lSpace = this._lSpace = {\n      bound: {\n        height: 0,\n        width: 0\n      },\n      node: {\n        logicArea: UNDEF,\n        smartTexts: []\n      }\n    };\n    lsTexts = lSpace.node.smartTexts;\n    plotArea = merge(bBox, {});\n    effectivePlotArea = this.getEffectivePlotArea(plotArea);\n    effectivePlotAreaWH = isLegendPosBottom ? effectivePlotArea.width : effectivePlotArea.height;\n    smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n    copyOfStyle = merge(conf.style, {});\n    normalizeFontSizeAppend(this._metaStyle = copyOfStyle);\n    smartLabel.setStyle(copyOfStyle);\n    testSmartLabel = smartLabel.getSmartText(\"W\");\n\n    for (index = 0, length = crDataObj.length; index < length; index++) {\n      label = (0, _lib.parseUnsafeString)(crDataObj[index].label);\n\n      if (!label) {\n        lsTexts[index] = UNDEF;\n        continue;\n      }\n\n      normalizedDataArr.push({\n        oriIndex: index,\n        label: label\n      });\n    }\n\n    length = normalizedDataArr.length;\n\n    if (length === 0) {\n      return {\n        height: 0,\n        width: 0\n      };\n    }\n\n    if (length > 1) {\n      stop = (valueRatio[normalizedDataArr[length - 1].oriIndex] - valueRatio[normalizedDataArr[0].oriIndex]) / 2 * effectivePlotAreaWH / 100;\n    } else {\n      stop = Math.max(valueRatio[normalizedDataArr[0].oriIndex], 100 - valueRatio[normalizedDataArr[0].oriIndex]) / 2 * effectivePlotAreaWH / 100;\n    }\n\n    zerothStop = stop;\n\n    if (isLegendPosBottom) {\n      smartText = smartLabel.getSmartText(normalizedDataArr[0].label, zerothStop, effectivePlotArea.height);\n      smartText.x = valueRatio[normalizedDataArr[0].oriIndex] * effectivePlotArea.width / 100;\n      leftBound = smartText.x + smartText.width;\n    } else {\n      smartText = smartLabel.getSmartText(normalizedDataArr[0].label, zerothStop, effectivePlotArea.width);\n      smartText.y = valueRatio[normalizedDataArr[0].oriIndex] * effectivePlotArea.height / 100;\n      leftBound = smartText.y + smartText.width;\n    }\n\n    labelHeights.push(smartText.height);\n    lsTexts[normalizedDataArr[0].oriIndex] = smartText;\n\n    if (isLegendPosBottom) {\n      smartText = smartLabel.getSmartText(normalizedDataArr[length - 1].label, zerothStop, effectivePlotArea.height);\n      smartText.x = valueRatio[normalizedDataArr[length - 1].oriIndex] * effectivePlotArea.width / 100;\n      rightBound = smartText.x - smartText.width;\n    } else {\n      smartText = smartLabel.getSmartText(normalizedDataArr[length - 1].label, zerothStop, effectivePlotArea.width);\n      smartText.y = valueRatio[normalizedDataArr[length - 1].oriIndex] * effectivePlotArea.height / 100;\n      rightBound = smartText.y - smartText.width;\n    }\n\n    labelHeights.push(smartText.height);\n    lsTexts[normalizedDataArr[length - 1].oriIndex] = smartText;\n    leftStop = leftBound;\n\n    for (index = 1; index < length - 1; index++) {\n      label = normalizedDataArr[index].label;\n      ni = normalizedDataArr[index].oriIndex;\n      smartText = UNDEF;\n      nextRefPoint = index + 1 === length - 1 ? rightBound : valueRatio[normalizedDataArr[index + 1].oriIndex] * effectivePlotAreaWH / 100;\n      currPoint = valueRatio[normalizedDataArr[index].oriIndex] * effectivePlotAreaWH / 100;\n      stop = Math.min(currPoint - leftStop, nextRefPoint - currPoint);\n\n      if (stop > 2 * testSmartLabel.width) {\n        if (isLegendPosBottom) {\n          smartText = smartLabel.getSmartText(label, stop, effectivePlotArea.height);\n          smartText.x = valueRatio[ni] * effectivePlotArea.width / 100;\n        } else {\n          smartText = smartLabel.getSmartText(label, stop, effectivePlotArea.width);\n          smartText.y = valueRatio[ni] * effectivePlotArea.height / 100;\n        }\n\n        leftStop = stop;\n        labelHeights.push(smartText.height);\n      }\n\n      lsTexts[normalizedDataArr[index].oriIndex] = smartText;\n    }\n\n    maxHeight = Math.max.apply(Math, labelHeights);\n\n    if (isLegendPosBottom) {\n      effectivePlotArea.height = maxHeight;\n      bBox.height = maxHeight + 2 * padding.v;\n    } else {\n      effectivePlotArea.width = maxHeight;\n      bBox.width = maxHeight + 2 * padding.v;\n    }\n\n    lSpace.node.logicArea = effectivePlotArea;\n    lSpace.bound = bBox;\n    return bBox;\n  };\n\n  _proto6.draw = function draw() {\n    var isLegendPosBottom = this.conf.legendPosition === \"bottom\",\n        layer,\n        bound,\n        conf = this.conf,\n        boundStyle = conf.bound && conf.bound.style || {\n      stroke: \"none\"\n    },\n        legendLabelsGroup,\n        bBox,\n        smartText,\n        lSpace,\n        options,\n        index,\n        logicArea,\n        lsTexts,\n        length,\n        pos = {},\n        animationManager;\n\n    if (arguments.length >= 2 && arguments[1]) {\n      bBox = arguments[0];\n      options = arguments[1];\n    } else if (arguments.length >= 1) {\n      options = arguments[0];\n    }\n\n    animationManager = options.animationManager;\n    layer = options.parentLayer;\n    this.getLogicalSpace(bBox, options);\n    lSpace = this._lSpace;\n    logicArea = lSpace.node.logicArea;\n    lsTexts = lSpace.node.smartTexts;\n    this.group = legendLabelsGroup = animationManager.setAnimation({\n      el: this.group || \"group\",\n      attr: {\n        name: \"legend-labels\"\n      },\n      container: layer,\n      component: gLegendRef\n    });\n    this.bound = bound = animationManager.setAnimation({\n      el: this.bound || \"rect\",\n      attr: lSpace.bound,\n      css: boundStyle,\n      container: legendLabelsGroup,\n      component: gLegendRef\n    });\n\n    for (var i = 0; i < this.node.length; i++) {\n      this.node[i].remove();\n    }\n\n    this.node = [];\n\n    for (index = 0, length = lsTexts.length; index < length; index++) {\n      smartText = lsTexts[index];\n\n      if (!smartText) {\n        continue;\n      }\n\n      if (isLegendPosBottom) {\n        pos.y = logicArea.y + smartText.height / 2;\n\n        if (index === length - 1) {\n          pos.x = logicArea.x + smartText.x - smartText.width / 2;\n        } else if (index) {\n          pos.x = logicArea.x + smartText.x;\n        } else {\n          pos.x = logicArea.x + smartText.x + smartText.width / 2;\n        }\n      } else {\n        pos.x = logicArea.x + smartText.height / 2;\n\n        if (index === length - 1) {\n          pos.y = logicArea.y + smartText.y - smartText.width / 2;\n        } else if (index) {\n          pos.y = logicArea.y + smartText.y;\n        } else {\n          pos.y = logicArea.y + smartText.y + smartText.width / 2;\n        }\n      }\n\n      this.node.push(animationManager.setAnimation({\n        el: \"text\",\n        attr: {\n          text: smartText.text,\n          x: pos.x,\n          y: pos.y,\n          lineHeight: this._metaStyle.lineHeight,\n          fill: conf.style.fill,\n          transform: isLegendPosBottom ? \"R0\" : \"R270,\" + pos.x + \",\" + pos.y\n        },\n        container: legendLabelsGroup,\n        component: gLegendRef\n      }));\n    }\n\n    return {\n      group: legendLabelsGroup,\n      bound: bound,\n      node: this.node\n    };\n  };\n\n  return LegendLabels;\n}();\n\nvar LegendAxis = function () {\n  function LegendAxis(conf) {\n    this.conf = conf;\n    this._id = FL_AXIS;\n    this.node = UNDEF;\n    this.group = UNDEF;\n    this.shadow = UNDEF;\n    this.markerLine = UNDEF;\n    this.compositionsByCategory = {};\n  }\n\n  var _proto7 = LegendAxis.prototype;\n\n  _proto7.configure = function configure(conf) {\n    this.conf = conf;\n  };\n\n  _proto7.getName = function getName() {\n    return \"LegendAxis\";\n  };\n\n  _proto7.getType = function getType() {\n    return \"axis\";\n  };\n\n  _proto7.addCompositions = function addCompositions(instance, category) {\n    this.compositionsByCategory[category] = instance;\n  };\n\n  _proto7.getLogicalSpace = function getLogicalSpace() {\n    var isLegendPosBottom = this.conf.legendPosition === \"bottom\",\n        bBox = arguments[0],\n        recalculate = arguments[2],\n        lSpace = this._lSpace,\n        conf = this.conf,\n        padding = conf.padding,\n        spaceTakenLower,\n        spaceTakenUpper,\n        spaceTaken,\n        axisThickness = conf.legendAxisHeight,\n        compositionsByCategory = this.compositionsByCategory,\n        sliderG,\n        effectivePlotArea,\n        slider,\n        sliderSpace,\n        sliderExtraDiam = 0;\n\n    if (lSpace && !recalculate) {\n      lSpace.isImpure = true;\n      return lSpace;\n    }\n\n    lSpace = this._lSpace = {\n      bound: {\n        height: 0,\n        width: 0\n      },\n      node: {\n        logicArea: UNDEF\n      }\n    };\n    effectivePlotArea = merge(bBox, {});\n    effectivePlotArea.height -= 2 * padding.v;\n    effectivePlotArea.width -= 2 * padding.h;\n    effectivePlotArea.x += padding.h;\n    effectivePlotArea.y += padding.v;\n    spaceTakenLower = axisThickness / 2 + conf.line.offset;\n    spaceTakenUpper = axisThickness / 2;\n    sliderG = compositionsByCategory[compositionKeys.RANGE];\n\n    if (sliderG) {\n      slider = sliderG.sliders[\"false\"];\n      sliderSpace = slider.conf.outerCircle.rFactor * axisThickness;\n      spaceTakenUpper += sliderExtraDiam = Math.max(sliderSpace / 2 - axisThickness / 2, 0);\n    }\n\n    if (isLegendPosBottom) {\n      effectivePlotArea.y += sliderExtraDiam;\n      effectivePlotArea.height = spaceTaken = spaceTakenUpper + spaceTakenLower + sliderExtraDiam;\n      bBox.height = spaceTaken + 2 * padding.v;\n    } else {\n      effectivePlotArea.x += sliderExtraDiam;\n      effectivePlotArea.width = spaceTaken = spaceTakenUpper + spaceTakenLower + sliderExtraDiam;\n      bBox.width = spaceTaken + 2 * padding.v;\n    }\n\n    lSpace.node.logicArea = effectivePlotArea;\n    lSpace.bound = bBox;\n    return bBox;\n  };\n\n  _proto7.getDrawableAxisArea = function getDrawableAxisArea(parentBoundingRect) {\n    var conf = this.conf,\n        isLegendPosBottom = this.conf.legendPosition === \"bottom\",\n        x = parentBoundingRect.x,\n        y = parentBoundingRect.y,\n        width = isLegendPosBottom ? parentBoundingRect.width : conf.legendAxisHeight,\n        height = isLegendPosBottom ? conf.legendAxisHeight : parentBoundingRect.height,\n        r = conf.legendAxisHeight / 2;\n    return {\n      x: x,\n      y: y,\n      width: width,\n      height: height,\n      r: r\n    };\n  };\n\n  _proto7.preDrawingRangeParamV = function preDrawingRangeParamV(drawableArea) {\n    var x = drawableArea.x + drawableArea.width / 2,\n        calculationBase = drawableArea.width;\n    return {\n      x: x,\n      calculationBase: calculationBase,\n      rangeStart: drawableArea.y,\n      rangeEnd: drawableArea.y + drawableArea.height,\n      prop: \"x\"\n    };\n  };\n\n  _proto7.preDrawingRangeParamH = function preDrawingRangeParamH(drawableArea) {\n    var y = drawableArea.y + drawableArea.height / 2,\n        calculationBase = drawableArea.height;\n    return {\n      y: y,\n      calculationBase: calculationBase,\n      rangeStart: drawableArea.x,\n      rangeEnd: drawableArea.x + drawableArea.width,\n      prop: \"y\"\n    };\n  };\n\n  _proto7.preDrawingRangeParam = function preDrawingRangeParam(drawableArea) {\n    return this.conf.legendPosition === \"bottom\" ? this.preDrawingRangeParamH(drawableArea) : this.preDrawingRangeParamV(drawableArea);\n  };\n\n  _proto7.getScaleMarkerPathStrH = function getScaleMarkerPathStrH(oriAxisRect, valueRatio) {\n    var axisRect = merge(oriAxisRect, {}),\n        conf = this.conf,\n        lineAttr = conf.line,\n        index,\n        length,\n        ratio,\n        covered,\n        markerStartY,\n        tickStr = _lib.BLANKSTRING,\n        lineStr = _lib.BLANKSTRING;\n    axisRect.x += axisRect.r;\n    axisRect.width -= 2 * axisRect.r;\n    markerStartY = axisRect.y + axisRect.height;\n\n    for (index = 0, length = valueRatio.length; index < length; index++) {\n      ratio = valueRatio[index];\n      covered = axisRect.x + ratio * axisRect.width / 100;\n      tickStr += M + covered + COMMA_STR + (markerStartY - lineAttr.grooveLength) + L + covered + COMMA_STR + (markerStartY + lineAttr.offset);\n    }\n\n    lineStr += M + axisRect.x + COMMA_STR + (markerStartY + lineAttr.offset) + L + (axisRect.x + axisRect.width) + COMMA_STR + (markerStartY + lineAttr.offset);\n    return tickStr + lineStr;\n  };\n\n  _proto7.getColorGradientH = function getColorGradientH(colorRange) {\n    return {\n      axis: colorRange.getBoxFill(),\n      shadow: (0, _lib.toRaphaelColor)({\n        FCcolor: {\n          alpha: \"25,0,0\",\n          angle: 90,\n          color: \"000000,FFFFFF,FFFFFF\",\n          ratio: \"0,30,40\"\n        }\n      })\n    };\n  };\n\n  _proto7.draw = function draw() {\n    var layer,\n        conf = this.conf,\n        boundAttr = conf.bound || {},\n        lineAttr = conf.line,\n        boundStyle = boundAttr.style || {},\n        bBox,\n        category,\n        compositionsByCategory = this.compositionsByCategory,\n        cRange,\n        valueRatio,\n        composition,\n        legendAxisGroup,\n        rangeParams,\n        grad,\n        oriAxisRect,\n        lSpace,\n        options,\n        animationManager,\n        scaleLine;\n\n    if (arguments.length >= 2) {\n      bBox = arguments[0];\n      options = arguments[1];\n    } else if (arguments.length >= 1) {\n      options = arguments[0];\n    }\n\n    animationManager = options.animationManager;\n    layer = options.parentLayer;\n    cRange = options.colorRange;\n    valueRatio = cRange.getCumulativeValueRatio();\n    this.getLogicalSpace(bBox, options);\n    lSpace = this._lSpace;\n    this.group = legendAxisGroup = animationManager.setAnimation({\n      el: this.group || \"group\",\n      attr: {\n        name: \"legend-axis\"\n      },\n      container: layer,\n      component: gLegendRef\n    });\n    this.bound = animationManager.setAnimation({\n      el: this.bound || \"rect\",\n      attr: lSpace.bound,\n      css: boundStyle,\n      component: gLegendRef,\n      container: legendAxisGroup\n    });\n    oriAxisRect = this.getDrawableAxisArea(lSpace.node.logicArea);\n    grad = this.getColorGradient(cRange);\n    conf.style.fill = grad.axis;\n    conf.shadow.style.fill = grad.shadow;\n    this.node = animationManager.setAnimation({\n      el: this.node || \"rect\",\n      attr: oriAxisRect,\n      css: conf.style,\n      container: legendAxisGroup,\n      component: gLegendRef\n    });\n    this.shadow = animationManager.setAnimation({\n      el: this.shadow || \"rect\",\n      attr: oriAxisRect,\n      css: conf.shadow.style,\n      container: legendAxisGroup,\n      component: gLegendRef\n    });\n    scaleLine = this.getScaleMarkerPathStr(oriAxisRect, valueRatio);\n    this.path = animationManager.setAnimation({\n      el: this.path || \"path\",\n      attr: {\n        path: scaleLine\n      },\n      css: lineAttr.style,\n      container: legendAxisGroup,\n      component: gLegendRef\n    });\n\n    for (category in compositionsByCategory) {\n      composition = compositionsByCategory[category];\n\n      switch (category) {\n        case compositionKeys.RANGE:\n          rangeParams = this.preDrawingRangeParam(oriAxisRect);\n          options[rangeParams.prop] = rangeParams[rangeParams.prop];\n          options.key = rangeParams.prop;\n          options.rCalcBase = rangeParams.calculationBase;\n          options.parentLayer = legendAxisGroup;\n          composition.draw(rangeParams.rangeStart, rangeParams.rangeEnd, options);\n      }\n    }\n  };\n\n  _proto7.getScaleMarkerPathStr = function getScaleMarkerPathStr(oriAxisRect, valueRatio) {\n    return this.conf.legendPosition === \"bottom\" ? this.getScaleMarkerPathStrH(oriAxisRect, valueRatio) : this.getScaleMarkerPathStrV(oriAxisRect, valueRatio);\n  };\n\n  _proto7.getColorGradient = function getColorGradient(colorRange) {\n    return this.conf.legendPosition === \"bottom\" ? this.getColorGradientH(colorRange) : this.getColorGradientV(colorRange);\n  };\n\n  _proto7.getScaleMarkerPathStrV = function getScaleMarkerPathStrV(oriAxisRect, valueRatio) {\n    var axisRect = merge(oriAxisRect, {}),\n        conf = this.conf,\n        lineAttr = conf.line,\n        index,\n        ratio,\n        length,\n        markerStartX,\n        covered,\n        tickStr = _lib.BLANKSTRING,\n        lineStr = _lib.BLANKSTRING;\n    axisRect.y += axisRect.r;\n    axisRect.height -= 2 * axisRect.r;\n    markerStartX = axisRect.x + axisRect.width;\n\n    for (index = 0, length = valueRatio.length; index < length; index++) {\n      ratio = valueRatio[index];\n      covered = axisRect.y + ratio * axisRect.height / 100;\n      tickStr += M + (markerStartX - lineAttr.grooveLength) + COMMA_STR + covered + L + (markerStartX + lineAttr.offset) + COMMA_STR + covered;\n    }\n\n    lineStr += M + (markerStartX + lineAttr.offset) + COMMA_STR + axisRect.y + L + (markerStartX + lineAttr.offset) + COMMA_STR + (axisRect.y + axisRect.height);\n    return tickStr + lineStr;\n  };\n\n  _proto7.getColorGradientV = function getColorGradientV(colorRange) {\n    return {\n      axis: colorRange.getBoxFill(true),\n      shadow: (0, _lib.toRaphaelColor)({\n        FCcolor: {\n          alpha: \"25,0,0\",\n          angle: 360,\n          color: \"000000,FFFFFF,FFFFFF\",\n          ratio: \"0,30,40\"\n        }\n      })\n    };\n  };\n\n  return LegendAxis;\n}();\n\nvar Slider = function () {\n  function Slider(sliderIndex, options, id) {\n    this.conf = options.conf;\n    this.sliderIndex = sliderIndex;\n    this.rangeGroup = options.sliderGroup;\n    this._id = id;\n    this.node = UNDEF;\n    this.tracker = UNDEF;\n    this.currPos = 0;\n    this.swing = [];\n  }\n\n  var _proto8 = Slider.prototype;\n\n  _proto8.configure = function configure(sliderIndex, options, id) {\n    this.conf = options.conf;\n    this.sliderIndex = sliderIndex;\n    this.rangeGroup = options.sliderGroup;\n    this._id = id;\n    this.currPos = 0;\n    this.swing = [];\n  };\n\n  _proto8.getType = function getType() {\n    return \"slider\";\n  };\n\n  _proto8.getName = function getName() {\n    return \"Slider\";\n  };\n\n  _proto8.updateSwingRange = function updateSwingRange(index, value) {\n    this.swing[+index] = value;\n  };\n\n  _proto8.draw = function draw(rangeStart, scaleVal, position, options) {\n    var layer = options.parentLayer,\n        self = this,\n        animationManager = options.animationManager,\n        conf = this.conf,\n        ocConf = conf.outerCircle,\n        icConf = conf.innerCircle,\n        tooltext,\n        chartConfig = animationManager.getFromEnv(\"chart\").config,\n        ocRadius = Math.ceil(ocConf.rFactor * options.rCalcBase / 2),\n        icRadius = Math.ceil(icConf.rFactor * options.rCalcBase / 2),\n        icThickness = ocRadius - icRadius,\n        group,\n        toolTipController = options.gLegend.getFromEnv(\"toolTipController\"),\n        sliderIndex = this.sliderIndex,\n        dragAPI,\n        strokeWidthOffset,\n        x,\n        y,\n        tracker;\n    conf.outerRadius = ocRadius;\n    conf.innerRadius = icRadius;\n    this._scaleVal = scaleVal;\n    icConf.style[\"stroke-width\"] = icThickness;\n    strokeWidthOffset = Math.ceil(ocConf.style[\"stroke-width\"] / 2);\n    icRadius += strokeWidthOffset;\n    group = this.node = animationManager.setAnimation({\n      el: this.node || \"group\",\n      attr: {\n        name: \"fc-gl-slider\",\n        cursor: \"pointer\",\n        transform: \"t0,0\"\n      },\n      container: layer,\n      component: gLegendRef\n    });\n\n    if (options.key === \"x\") {\n      x = position;\n      y = rangeStart;\n      y += sliderIndex ? -icRadius : +icRadius;\n    } else {\n      x = rangeStart;\n      y = position;\n      x += sliderIndex ? -icRadius : +icRadius;\n    }\n\n    this.oCircle = animationManager.setAnimation({\n      el: this.oCircle || \"circle\",\n      attr: {\n        cx: x,\n        cy: y,\n        r: ocRadius\n      },\n      css: ocConf.style,\n      container: group,\n      component: gLegendRef\n    });\n    this.iCircle = animationManager.setAnimation({\n      el: this.iCircle || \"circle\",\n      attr: {\n        cx: x,\n        cy: y,\n        r: icRadius\n      },\n      css: icConf.style,\n      container: group,\n      component: gLegendRef\n    });\n    tracker = this.tracker = animationManager.setAnimation({\n      el: this.tracker || \"circle\",\n      attr: {\n        cx: x,\n        cy: y,\n        r: ocRadius + 5,\n        fill: TRACKER_FILL,\n        stroke: TRACKER_FILL,\n        cursor: \"pointer\"\n      },\n      container: group,\n      component: gLegendRef\n    });\n    group.attr({\n      transform: options.key === \"x\" ? \"t0,\" + self.currPos : \"t\" + self.currPos + \",\" + 0\n    });\n    tooltext = chartConfig.showToolTip ? scaleVal : \"\";\n    toolTipController.enableToolTip(tracker, tooltext);\n    this._dragAPI = dragAPI = this.getDragAPI(options.key === \"x\");\n    tracker.undrag();\n    tracker.drag(dragAPI.dragging, dragAPI.dragStart, dragAPI.dragEnd);\n    return {\n      translateAscending: ocRadius + strokeWidthOffset\n    };\n  };\n\n  _proto8.getDragAPI = function getDragAPI(verticalDragging) {\n    var self = this,\n        node = self.node,\n        index = self.sliderIndex,\n        range = self.rangeGroup,\n        swing,\n        lastDisplacement,\n        timeoutId,\n        innerRadius = self.conf.innerRadius,\n        spaceSaved = innerRadius,\n        isDragged;\n    return {\n      dragging: function dragging(event) {\n        var left, right, d, updatedText, posAfterDisplacement;\n        event.stopPropagation();\n\n        if (verticalDragging) {\n          d = event.data[1];\n        } else {\n          d = event.data[0];\n        }\n\n        if (index) {\n          left = swing[0] - swing[1] + spaceSaved;\n          right = 0;\n        } else {\n          left = 0;\n          right = swing[1] - swing[0] - spaceSaved;\n        }\n\n        posAfterDisplacement = self.currPos + d;\n\n        if (posAfterDisplacement < left) {\n          d += left - posAfterDisplacement;\n        } else if (posAfterDisplacement > right) {\n          d -= posAfterDisplacement - right;\n        }\n\n        node.attr({\n          transform: verticalDragging ? \"t0,\" + (self.currPos + d) : \"t\" + (self.currPos + d) + \",\" + 0\n        });\n        lastDisplacement = d;\n        timeoutId && clearTimeout(timeoutId);\n        timeoutId = setTimeout(function () {\n          range.updateWhenInRest(self, self.currPos + d);\n        }, 100);\n        updatedText = range.updateWhenInMove(self, self.currPos + d);\n        self.conf.showTooltip && self.tracker.data(\"__FC_tooltipText\", updatedText);\n        isDragged = true;\n        return true;\n      },\n      dragStart: function dragStart(event) {\n        event.stopPropagation();\n        swing = self.swing;\n        isDragged = false;\n        range.dragStarted(self);\n      },\n      dragEnd: function dragEnd() {\n        var newPos;\n        range.dragCompleted(self, isDragged, self.currPos + lastDisplacement);\n\n        if (!isDragged) {\n          return;\n        }\n\n        timeoutId && clearTimeout(timeoutId);\n        timeoutId = setTimeout(function () {\n          range.updateWhenInRest(self, self.currPos);\n        }, 100);\n        self.currPos += lastDisplacement;\n        newPos = swing[+index] + self.currPos;\n        range.updateRange(self, newPos);\n      }\n    };\n  };\n\n  _proto8.dispose = function dispose() {\n    this.node.remove();\n    this.oCircle.remove();\n    this.iCircle.remove();\n    this.tracker.remove();\n    delete this;\n  };\n\n  return Slider;\n}();\n\nvar SliderGroup = function () {\n  function SliderGroup(conf) {\n    var sliderConf = conf,\n        options = {};\n    this._id = GL_SG1;\n    this.conf = conf;\n    options.conf = sliderConf;\n    this.extremes = [];\n    this.sliders = {};\n    this.min = UNDEF;\n    this.max = UNDEF;\n    options.sliderGroup = this;\n    this.valueRange = [];\n    this.callbacks = [];\n    this.sliders[FORMER_SLIDER_INDEX] = new Slider(FORMER_SLIDER_INDEX, options, this._id + \"_\" + +FORMER_SLIDER_INDEX);\n    this.sliders[LATER_SLIDER_INDEX] = new Slider(LATER_SLIDER_INDEX, options, this._id + \"_\" + +LATER_SLIDER_INDEX);\n  }\n\n  var _proto9 = SliderGroup.prototype;\n\n  _proto9.configure = function configure(conf) {\n    var sliderConf = conf,\n        options = {};\n    this.min = UNDEF;\n    this.max = UNDEF;\n    this.conf = conf;\n    options.conf = sliderConf;\n    options.sliderGroup = this;\n    this.sliders[FORMER_SLIDER_INDEX].configure(FORMER_SLIDER_INDEX, options, this._id + \"_\" + +FORMER_SLIDER_INDEX);\n    this.sliders[LATER_SLIDER_INDEX].configure(LATER_SLIDER_INDEX, options, this._id + \"_\" + +LATER_SLIDER_INDEX);\n  };\n\n  _proto9.getType = function getType() {\n    return \"slider\";\n  };\n\n  _proto9.getName = function getName() {\n    return \"SliderGroup\";\n  };\n\n  _proto9.initRange = function initRange(slider, updatedRange) {\n    var sliderIndex = slider.sliderIndex;\n    this.extremes[+sliderIndex] = updatedRange;\n  };\n\n  _proto9.updateRange = function updateRange(slider, updatedRange) {\n    var sliderIndex = slider.sliderIndex,\n        sliders = this.sliders,\n        s = sliders[!sliderIndex];\n    s.updateSwingRange(sliderIndex, updatedRange);\n  };\n\n  _proto9.reset = function reset() {\n    var options = {};\n    options.conf = this.conf;\n    options.sliderGroup = this;\n    this.min = UNDEF;\n    this.max = UNDEF;\n    this.sliders[FORMER_SLIDER_INDEX].configure(FORMER_SLIDER_INDEX, options, this._id + \"_\" + +FORMER_SLIDER_INDEX);\n    this.sliders[LATER_SLIDER_INDEX].configure(LATER_SLIDER_INDEX, options, this._id + \"_\" + +LATER_SLIDER_INDEX);\n    this.draw.apply(this, this._drawParams);\n  };\n\n  _proto9.draw = function draw(rangeStart, rangeEnd, options) {\n    var sliders = this.sliders,\n        lSlider = sliders[FORMER_SLIDER_INDEX],\n        rSlider = sliders[LATER_SLIDER_INDEX],\n        cRange = options.colorRange,\n        colorRange = cRange.colorRange,\n        oneSliderMes,\n        icConf,\n        ocConf,\n        icRadius,\n        extremesRange,\n        mapbypercent = cRange.data.mapByPercent,\n        numberFormatter = options.gLegend.getFromEnv(\"number-formatter\"),\n        totalRange;\n    this._fcChart = options.gLegend.getFromEnv(\"chart\");\n\n    this.getValueFormPixel = function (valueStart, valueEnd, pixelStart, pixelEnd) {\n      var unit = (valueEnd - valueStart) / (pixelEnd - pixelStart);\n\n      this.getValueFormPixel = function (pixel) {\n        return valueStart + unit * pixel;\n      };\n    };\n\n    this.updateWhenInMove = function (numberformatter, mapbypercentage) {\n      this.updateWhenInMove = function (slider, val) {\n        var extremes = this.extremes,\n            sliderIndex = slider.sliderIndex,\n            nVal,\n            value;\n\n        if (sliderIndex) {\n          nVal = extremes[1] - extremes[0] + val;\n        } else {\n          nVal = val;\n        }\n\n        value = this.getValueFormPixel(nVal);\n\n        if (!mapbypercentage) {\n          value = numberformatter.legendValue(value);\n        } else {\n          value = parseFloat(value).toFixed(2) + PERCENT_STR;\n        }\n\n        return value;\n      };\n    };\n\n    this._drawParams = [rangeStart, rangeEnd, options];\n    this.updateWhenInMove(numberFormatter, mapbypercent);\n    ocConf = lSlider.conf.outerCircle;\n    icConf = lSlider.conf.innerCircle;\n    icRadius = Math.ceil(icConf.rFactor * options.rCalcBase / 2);\n    icRadius += Math.ceil(ocConf.style[\"stroke-width\"] / 2);\n    this.extremes[0] = rangeStart + icRadius;\n    this.extremes[1] = rangeEnd - icRadius;\n    extremesRange = this.extremes[1] - this.extremes[0];\n    this.min = this.min ? this.min : colorRange[0].value;\n    this.max = this.max ? this.max : colorRange[colorRange.length - 1].value;\n    totalRange = colorRange[colorRange.length - 1].value - colorRange[0].value;\n    lSlider.currPos = extremesRange * (this.min - colorRange[0].value) / totalRange;\n    rSlider.currPos = extremesRange * (this.max - colorRange[0].value) / totalRange - extremesRange;\n    oneSliderMes = lSlider.draw(rangeStart, mapbypercent ? numberFormatter.legendPercentValue(this.min) : numberFormatter.legendValue(this.min), options[options.key], options);\n    oneSliderMes = rSlider.draw(rangeEnd, mapbypercent ? numberFormatter.legendPercentValue(this.max) : numberFormatter.legendValue(this.max), options[options.key], options);\n    lSlider.swing = this.extremes.slice(0);\n    rSlider.swing = this.extremes.slice(0);\n    lSlider.swing[1] += rSlider.currPos;\n    rSlider.swing[0] += lSlider.currPos;\n    this.getValueFormPixel(colorRange[0].value, colorRange[colorRange.length - 1].value, this.extremes[0], this.extremes[1]);\n    return oneSliderMes;\n  };\n\n  _proto9.updateWhenInRest = function updateWhenInRest(slider, val) {\n    var sliders = this.sliders,\n        extremes = this.extremes,\n        sliderIndex = slider.sliderIndex,\n        lValue,\n        rValue;\n\n    if (sliderIndex) {\n      lValue = sliders[!sliderIndex].currPos;\n      rValue = extremes[1] - extremes[0] + val;\n    } else {\n      lValue = val;\n      rValue = extremes[1] - extremes[0] + sliders[!sliderIndex].currPos;\n    }\n\n    this.min = Number(this.getValueFormPixel(lValue).toFixed(2));\n    this.max = Number(this.getValueFormPixel(rValue).toFixed(2));\n    this.gLegend.fireEvent(\"rangeUpdated\", [{\n      min: this.min,\n      max: this.max\n    }]);\n  };\n\n  _proto9.dragStarted = function dragStarted(self) {\n    var sliders = this.sliders,\n        extremes = this.extremes,\n        conf = self.conf,\n        chart = this._fcChart;\n    chart.fireChartInstanceEvent(\"legendpointerdragstart\", {\n      pointerIndex: +self.sliderIndex,\n      pointers: [{\n        value: this.getValueFormPixel(sliders[\"false\"].currPos)\n      }, {\n        value: this.getValueFormPixel(extremes[1] - extremes[0] + sliders[\"true\"].currPos)\n      }],\n      legendPointerHeight: conf.outerRadius,\n      legendPointerWidth: conf.innerRadius,\n      outerRadius: conf.outerRadius,\n      innerRadius: conf.innerRadius\n    }, [chart.id]);\n  };\n\n  _proto9.dragCompleted = function dragCompleted(self, isDragged, newVal) {\n    var sliders = this.sliders,\n        extremes = this.extremes,\n        conf = self.conf,\n        minValue = this.getValueFormPixel(sliders[\"false\"].currPos),\n        maxValue = this.getValueFormPixel(extremes[1] - extremes[0] + sliders[\"true\"].currPos),\n        chart = this._fcChart,\n        newMinValue,\n        newMaxValue;\n\n    if (!self.sliderIndex) {\n      newMinValue = this.getValueFormPixel(newVal);\n      newMaxValue = maxValue;\n    } else {\n      newMinValue = minValue;\n      newMaxValue = this.getValueFormPixel(extremes[1] - extremes[0] + newVal);\n    }\n\n    if (isDragged) {\n      chart.fireChartInstanceEvent(\"legendrangeupdated\", {\n        previousMinValue: minValue,\n        previousMaxValue: maxValue,\n        minValue: newMinValue,\n        maxValue: newMaxValue\n      }, [chart.id]);\n    }\n\n    chart.fireChartInstanceEvent(\"legendpointerdragstop\", {\n      pointerIndex: +self.sliderIndex,\n      pointers: [{\n        value: newMinValue\n      }, {\n        value: newMaxValue\n      }],\n      legendPointerHeight: conf.outerRadius,\n      legendPointerWidth: conf.innerRadius,\n      outerRadius: conf.outerRadius,\n      innerRadius: conf.innerRadius\n    }, [chart.id]);\n  };\n\n  _proto9.dispose = function dispose() {\n    this.sliders[FORMER_SLIDER_INDEX].dispose();\n    this.sliders[LATER_SLIDER_INDEX].dispose();\n  };\n\n  return SliderGroup;\n}();\n\nvar LegendValues = function (_LegendLabels) {\n  (0, _inheritsLoose2.default)(LegendValues, _LegendLabels);\n\n  function LegendValues() {\n    var _this2;\n\n    _this2 = _LegendLabels.call(this, arguments[0]) || this;\n    _this2._id = GL_VALUES;\n    _this2.node = [];\n    return _this2;\n  }\n\n  var _proto10 = LegendValues.prototype;\n\n  _proto10.configure = function configure(conf) {\n    this.conf = conf;\n  };\n\n  _proto10.getName = function getName() {\n    return \"LegendValues\";\n  };\n\n  _proto10.getType = function getType() {\n    return \"legend\";\n  };\n\n  _proto10.getLogicalSpace = function getLogicalSpace(bBox, options, recalculate) {\n    var isLegendPosBottom = this.conf.legendPosition === \"bottom\",\n        lSpace = this._lSpace,\n        conf = this.conf,\n        padding = conf.padding,\n        chartConfig = options.gLegend.getFromEnv(\"chartConfig\"),\n        cRange,\n        smartLabel,\n        crDataObj,\n        smartText,\n        index,\n        length,\n        valueRatio,\n        stop,\n        nextRefPoint,\n        currPoint,\n        zerothStop,\n        labelHeights = [],\n        leftBound,\n        leftStop,\n        rightBound,\n        labelWidths = [],\n        topBound,\n        topStop,\n        bottomBound,\n        maxHeight,\n        maxWidth,\n        effectivePlotArea,\n        val,\n        dispValue,\n        testSmartLabel,\n        copyOfStyle,\n        lsTexts;\n\n    if (lSpace && !recalculate) {\n      lSpace.isImpure = true;\n      return lSpace;\n    }\n\n    cRange = options.colorRange;\n    smartLabel = options.smartLabel;\n    crDataObj = cRange.colorRange;\n    valueRatio = cRange.getCumulativeValueRatio();\n    lSpace = this._lSpace = {\n      bound: {\n        height: 0,\n        width: 0\n      },\n      node: {\n        logicArea: UNDEF,\n        smartTexts: []\n      }\n    };\n    lsTexts = lSpace.node.smartTexts;\n    effectivePlotArea = merge(bBox, {});\n    effectivePlotArea.height -= 2 * padding.v;\n    effectivePlotArea.width -= 2 * padding.h;\n    effectivePlotArea.x += padding.h;\n    effectivePlotArea.y += padding.v;\n    smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n    copyOfStyle = merge(conf.style, {});\n    normalizeFontSizeAppend(this._metaStyle = copyOfStyle);\n    smartLabel.setStyle(copyOfStyle);\n    testSmartLabel = smartLabel.getSmartText(\"W\");\n    length = crDataObj.length;\n\n    if (isLegendPosBottom) {\n      zerothStop = stop = (valueRatio[length - 1] - valueRatio[0]) / 2 * effectivePlotArea.width / 100;\n      dispValue = crDataObj[0].displayValue;\n      smartText = smartLabel.getSmartText(typeof dispValue !== \"string\" && dispValue !== UNDEF && dispValue.toString() || dispValue, zerothStop, effectivePlotArea.height);\n      smartText.x = valueRatio[0] * effectivePlotArea.width / 100;\n      leftBound = smartText.x + smartText.width;\n      labelHeights.push(smartText.height);\n    } else {\n      zerothStop = stop = (valueRatio[length - 1] - valueRatio[0]) / 2 * effectivePlotArea.height / 100;\n      smartText = smartLabel.getSmartText(crDataObj[0].displayValue, effectivePlotArea.width, zerothStop);\n      smartText.y = valueRatio[0] * effectivePlotArea.height / 100;\n      topBound = smartText.y + smartText.width;\n      labelWidths.push(smartText.width);\n    }\n\n    lsTexts[0] = smartText;\n\n    if (isLegendPosBottom) {\n      smartText = smartLabel.getSmartText(crDataObj[length - 1].displayValue, zerothStop, effectivePlotArea.height);\n      smartText.x = valueRatio[length - 1] * effectivePlotArea.width / 100;\n      rightBound = smartText.x - smartText.width;\n      labelHeights.push(smartText.height);\n      leftStop = leftBound;\n    } else {\n      smartText = smartLabel.getSmartText(crDataObj[length - 1].displayValue, effectivePlotArea.width, zerothStop);\n      smartText.y = valueRatio[length - 1] * effectivePlotArea.height / 100;\n      bottomBound = smartText.y - smartText.height;\n      labelWidths.push(smartText.width);\n      topStop = topBound;\n    }\n\n    lsTexts[length - 1] = smartText;\n\n    for (index = 1; index < length - 1; index++) {\n      smartText = UNDEF;\n      val = crDataObj[index].displayValue;\n\n      if (isLegendPosBottom) {\n        nextRefPoint = index + 1 === length - 1 ? rightBound : valueRatio[index + 1] * effectivePlotArea.width / 100;\n        currPoint = valueRatio[index] * effectivePlotArea.width / 100;\n        stop = Math.min(currPoint - leftStop, nextRefPoint - currPoint);\n\n        if (stop > 1.5 * testSmartLabel.width) {\n          smartText = smartLabel.getSmartText(val, 2 * stop, effectivePlotArea.height);\n          smartText.x = valueRatio[index] * effectivePlotArea.width / 100;\n          leftStop = stop;\n          labelHeights.push(smartText.height);\n        }\n      } else {\n        nextRefPoint = index + 1 === length - 1 ? bottomBound : valueRatio[index + 1] * effectivePlotArea.height / 100;\n        currPoint = valueRatio[index] * effectivePlotArea.height / 100;\n        stop = Math.min(currPoint - topStop, nextRefPoint - currPoint);\n\n        if (stop > 2 * testSmartLabel.height) {\n          smartText = smartLabel.getSmartText(val, effectivePlotArea.width, 2 * stop);\n          smartText.y = valueRatio[index] * effectivePlotArea.height / 100;\n          topStop = stop;\n          labelWidths.push(smartText.width);\n        }\n      }\n\n      lsTexts[index] = smartText;\n    }\n\n    if (isLegendPosBottom) {\n      maxHeight = Math.max.apply(Math, labelHeights);\n      effectivePlotArea.height = maxHeight;\n      bBox.height = maxHeight + 2 * padding.v;\n    } else {\n      maxWidth = Math.max.apply(Math, labelWidths);\n      effectivePlotArea.width = maxWidth;\n      bBox.width = maxWidth + 2 * padding.h;\n    }\n\n    lSpace.node.logicArea = effectivePlotArea;\n    lSpace.bound = bBox;\n    return bBox;\n  };\n\n  _proto10.draw = function draw() {\n    var conf = this.conf,\n        isLegendPosBottom = conf.legendPosition === \"bottom\",\n        boundStyle = conf.bound && conf.bound.style || {\n      stroke: \"none\"\n    },\n        pos = {},\n        layer,\n        bound,\n        legendValuesGroup,\n        bBox,\n        lSpace,\n        logicArea,\n        options,\n        cRange,\n        valueRatio,\n        index,\n        length,\n        smartTexts,\n        smartText,\n        animationManager;\n\n    if (arguments.length >= 2 && arguments[1]) {\n      bBox = arguments[0];\n      options = arguments[1];\n    } else if (arguments.length >= 1) {\n      options = arguments[0];\n    }\n\n    animationManager = options.animationManager;\n    layer = options.parentLayer;\n    cRange = options.colorRange;\n    valueRatio = cRange.getCumulativeValueRatio();\n    this.getLogicalSpace(bBox, options);\n    lSpace = this._lSpace;\n    logicArea = lSpace.node.logicArea;\n    smartTexts = lSpace.node.smartTexts;\n    this.group = legendValuesGroup = animationManager.setAnimation({\n      el: this.group || \"group\",\n      attr: {\n        name: \"legend-values\"\n      },\n      container: layer,\n      component: gLegendRef\n    });\n    this.bound = bound = animationManager.setAnimation({\n      el: this.bound || \"rect\",\n      attr: lSpace.bound,\n      css: boundStyle,\n      container: legendValuesGroup,\n      component: gLegendRef\n    });\n\n    for (var i = 0; i < this.node.length; i++) {\n      this.node[i].remove();\n    }\n\n    this.node = [];\n\n    for (index = 0, length = valueRatio.length; index < length; index++) {\n      smartText = smartTexts[index];\n\n      if (!smartText) {\n        continue;\n      }\n\n      if (isLegendPosBottom) {\n        pos.y = logicArea.y + smartText.height / 2;\n\n        if (index === length - 1) {\n          pos.x = logicArea.x + smartText.x - smartText.width / 2;\n        } else if (index) {\n          pos.x = logicArea.x + smartText.x;\n        } else {\n          pos.x = logicArea.x + smartText.x + smartText.width / 2;\n        }\n      } else {\n        pos.x = logicArea.x + smartText.width / 2;\n\n        if (index === length - 1) {\n          pos.y = logicArea.y + smartText.y - smartText.height / 2;\n        } else if (index) {\n          pos.y = logicArea.y + smartText.y;\n        } else {\n          pos.y = logicArea.y + smartText.y + smartText.height / 2;\n        }\n      }\n\n      this.node.push(animationManager.setAnimation({\n        el: \"text\",\n        attr: {\n          text: smartText.text,\n          x: pos.x,\n          y: pos.y,\n          lineHeight: this._metaStyle.lineHeight,\n          fill: conf.style.fill\n        },\n        container: legendValuesGroup,\n        component: gLegendRef\n      }));\n    }\n\n    return {\n      group: legendValuesGroup,\n      bound: bound\n    };\n  };\n\n  return LegendValues;\n}(LegendLabels);\n\nvar _default = GLegend;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/charts/src/_internal/components/legend/gradient/index.js"],"names":["_interopRequireDefault","require","exports","__esModule","default","_assertThisInitialized2","_inheritsLoose2","_lib","_componentInterface","UNDEF","compositionKeys","TRACKER_FILL","isIE","legendManager","FORMER_SLIDER_INDEX","LATER_SLIDER_INDEX","PERCENT_STR","COMMA_STR","DEF_COLOR","CANVAS_WIDTH","CANVAS_LEFT","CANVAS_HEIGHT","CANVAS_TOP","VERTICAL","ABSOLUTE","TOP","BOTTOM","LEFT","RIGHT","GL_CARPET","GL_CAPTION","GL_BODY","GL_LABELS","FL_AXIS","GL_SG1","GL_VALUES","FC_GRADIENT_LEGEND","hasOwnProp","hasOwnProperty","M","L","gLegendRef","merge","src","snk","rec","source","sink","sourceVal","prop","call","getValidHexColor","code","color","getValidColor","getOppositeColor","getLightColor","normalizeFontSizeAppend","obj","fontSize","normalizeFontSize","replace","isInvalid","arg","isNaN","CAPTION","LEGEND_BODY","AXIS_LABEL","LEGEND_AXIS","RANGE","AXIS_VALUE","chart","defaultConf","legendCarpetConf","spreadFactor","allowDrag","captionAlignment","padding","v","h","style","fill","stroke","legendCaptionConf","fontFamily","fontWeight","fontStyle","bound","legendBodyConf","legendAxisConf","legendAxisHeight","line","grooveLength","offset","shadow","toRaphaelColor","FCcolor","alpha","angle","ratio","sliderGroupConf","showTooltip","outerCircle","rFactor","innerCircle","axisTextItemConf","normalizePreprocessedData","confArr","numberFormatter","getFromEnv","index","length","rawVal","maxvalue","getCleanValue","init","options","legacyDataParser","data","extremes","colormanagerConf","colorConfArr","colorConf","startColor","endColor","validColor","colorRange","value","dispValue","mapByPercent","isMaxValPresent","pluckNumber","mapbypercent","minvalue","min","max","gradient","push","label","sort","m","n","legendValue","dehashify","displayValue","startlabel","parseInt","parseUnsafeString","displayvalue","endlabel","getDefaultConf","key","GLegend","_ComponentInterface","_proto","prototype","getType","getName","_this","enabled","drawOptions","components","setColorRange","cr","_preparationGoneWrong","_dontPlot","configureAttributes","componentAPI","chartAttrs","conf","outCanvasBaseFont","outcnvbasefont","outCanvasBaseFontSize","computeFontSize","outcnvbasefontsize","outCanvasBaseFontColor","outcnvbasefontcolor","labelStyle","config","dataLabelStyle","fColor","fFamily","fSize","fSizeWithUnit","fWeight","cfColor","cfFamily","cfSize","cfSizeWithUnit","cfWeight","axisBorderColor","axisBorderAlpha","colorrange","smartLabel","gLegend","_recalculateLogicalSpace","caption","pluck","legendcaption","legendPosition","legendposition","toLowerCase","legendXPosition","legendxposition","legendYPosition","legendyposition","legendMaxHeight","legendmaxheight","legendMaxWidth","legendmaxwidth","legendVertical","legendorientation","showLegend","showlegend","interactiveLegend","interactivelegend","showLegendLabels","showlegendlabels","legenditemfontcolor","legenditemfont","legenditemfontsize","pluckFontSizeMaintainUnit","legenditemfontbold","legendcaptionfontcolor","legendcaptionfont","legendcaptionfontsize","legendcaptionfontbold","legendaxisbordercolor","hashify","legendaxisborderalpha","convertColor","match","fontSizeWithUnit","legendscalelinecolor","legendscalelinealpha","legendscalelinethickness","showtooltip","sliderdiameterfactor","legendpointerbordercolor","legendpointerborderalpha","sliderholediameterfactor","legendpointercolor","legendpointeralpha","legendspreadfactor","legendallowdrag","legendcaptionalignment","legendbgcolor","legendbgalpha","legendbordercolor","legendborderalpha","legendborderthickness","postConfigureInit","carpet","axis","sGroup","ovrdConf","ovrdTextConf","body","labels","values","captionConfig","axisConfig","split","bodyConfig","elem","configure","SliderGroup","dispose","refSideKey","refOffsetKey","Object","keys","LegendCarpet","LegendBody","LegendAxis","LegendValues","LegendLabels","componentCaption","LegendCaption","addCompositions","removeCompositions","gl","LegendBase","getValueRange","rGroup","sliders","minVal","maxVal","currPos","getValueFormPixel","_dispose","getCalculatedLogicalSpace","_logicalArea","setCalculatedLogicalSpace","area","getLogicalSpace","maxOtherSide","zeroArea","height","width","logicalSpace","chartConfig","isAbsolute","maxHeight","maxWidth","refSide","refOffset","resetLegend","reset","_calculateTopPosition","y","legend","yPos","getChildren","subCaption","toolbar","oriCanvasTop","oriTopSpace","toolbarY","props","text","BLANKSTRING","isOnTop","captionPadding","allocatePosition","iapi","gradientLegend","canvasLeft","canvasTop","canvasWidth","canvasHeight","marginTop","marginBottom","marginRight","marginLeft","spaceTakenByGradientLegend","spaceLeft","xPos","xLim","yLim","gLegendEnabled","actionBarHeight","draw","colorRangeObj","hasGradientLegend","drawLegendComponent","parentGroup","getContainer","animationManager","x","measurement","node","getBBox","ComponentInterface","_proto2","recalculate","group","remove","_id","compositionsByCategory","_lSpace","autoRecalculate","groupName","moveInstructions","_proto3","instance","category","getBoundingBox","alignment","lWidth","lHeight","getPostCalcDecisionsH","bBox","componentsArea","cat","totalHeightTaken","lSpace","categoryMap","composition","effectivePlotArea","compositionLSPace","compositionHeight","compositionPlotArea","heightNotUsed","isImpure","i","getPostCalcDecisions","setupDragging","dx","dy","idx","idy","css","cursor","drag","_dx","_dy","attr","transform","stubFN","ref","setAnimation","el","name","component","container","parentLayer","getPostCalcDecisionsV","Number","NEGATIVE_INFINITY","move","diff","rawText","smartText","boundingBox","CENTER","arguments","_proto4","copyOfStyle","logicArea","useEllipsesOnOverflow","useEllipsesWhenOverflow","setStyle","_metaStyle","getSmartText","layer","boundAttr","boundingArea","normalizedX","toUpperCase","lineHeight","childTextConf","SC_STACK","DARW_STACK","_proto5","getSpaceTaken","spaceObj","compositionAreaOffset","getCompositionPlotArea","spaceTaken","getCompositionPlotAreaFor","updateEffectivePlotArea","boundStyle","legendBodyGroup","plotArea","isLPosBottom","compAreaOffset","sf","val","_proto6","getEffectivePlotArea","isLegendPosBottom","cRange","crDataObj","labelHeights","leftBound","rightBound","valueRatio","stop","zerothStop","lsTexts","testSmartLabel","nextRefPoint","currPoint","leftStop","ni","normalizedDataArr","effectivePlotAreaWH","getCumulativeValueRatio","smartTexts","oriIndex","Math","apply","legendLabelsGroup","pos","markerLine","_proto7","spaceTakenLower","spaceTakenUpper","axisThickness","sliderG","slider","sliderSpace","sliderExtraDiam","getDrawableAxisArea","parentBoundingRect","r","preDrawingRangeParamV","drawableArea","calculationBase","rangeStart","rangeEnd","preDrawingRangeParamH","preDrawingRangeParam","getScaleMarkerPathStrH","oriAxisRect","axisRect","lineAttr","covered","markerStartY","tickStr","lineStr","getColorGradientH","getBoxFill","legendAxisGroup","rangeParams","grad","scaleLine","getColorGradient","getScaleMarkerPathStr","path","rCalcBase","getScaleMarkerPathStrV","getColorGradientV","markerStartX","Slider","sliderIndex","id","rangeGroup","sliderGroup","tracker","swing","_proto8","updateSwingRange","scaleVal","position","self","ocConf","icConf","tooltext","ocRadius","ceil","icRadius","icThickness","toolTipController","dragAPI","strokeWidthOffset","outerRadius","innerRadius","_scaleVal","oCircle","cx","cy","iCircle","showToolTip","enableToolTip","_dragAPI","getDragAPI","undrag","dragging","dragStart","dragEnd","translateAscending","verticalDragging","range","lastDisplacement","timeoutId","spaceSaved","isDragged","event","left","right","d","updatedText","posAfterDisplacement","stopPropagation","clearTimeout","setTimeout","updateWhenInRest","updateWhenInMove","dragStarted","newPos","dragCompleted","updateRange","sliderConf","valueRange","callbacks","_proto9","initRange","updatedRange","s","_drawParams","lSlider","rSlider","oneSliderMes","extremesRange","totalRange","_fcChart","valueStart","valueEnd","pixelStart","pixelEnd","unit","pixel","numberformatter","mapbypercentage","nVal","parseFloat","toFixed","legendPercentValue","slice","lValue","rValue","fireEvent","fireChartInstanceEvent","pointerIndex","pointers","legendPointerHeight","legendPointerWidth","newVal","minValue","maxValue","newMinValue","newMaxValue","previousMinValue","previousMaxValue","_LegendLabels","_this2","_proto10","labelWidths","topBound","topStop","bottomBound","toString","legendValuesGroup","_default"],"mappings":"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","sourcesContent":["\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=void 0;var _assertThisInitialized2=_interopRequireDefault(require(\"@babel/runtime/helpers/assertThisInitialized\"));var _inheritsLoose2=_interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));var _lib=require(\"@fusioncharts/core/src/lib\");var _componentInterface=require(\"@fusioncharts/core/src/component-interface\");var UNDEF,compositionKeys={},TRACKER_FILL=\"rgba(192,192,192,\"+(_lib.isIE?.002:1e-6)+\")\",legendManager,FORMER_SLIDER_INDEX=false,LATER_SLIDER_INDEX=true,PERCENT_STR=\"%\",COMMA_STR=\",\",DEF_COLOR=\"#000000\",CANVAS_WIDTH=\"canvasWidth\",CANVAS_LEFT=\"canvasLeft\",CANVAS_HEIGHT=\"canvasHeight\",CANVAS_TOP=\"canvasTop\",VERTICAL=\"vertical\",ABSOLUTE=\"absolute\",TOP=\"top\",BOTTOM=\"bottom\",LEFT=\"left\",RIGHT=\"right\",GL_CARPET=\"GL_CARPET\",GL_CAPTION=\"GL_CAPTION\",GL_BODY=\"GL_BODY\",GL_LABELS=\"GL_LABELS\",FL_AXIS=\"FL_AXIS\",GL_SG1=\"GL_SG1\",GL_VALUES=\"GL_VALUES\",FC_GRADIENT_LEGEND=\"fc-gradient-legend\",hasOwnProp={}.hasOwnProperty,M=\"M\",L=\"L\",gLegendRef;function merge(src,snk){(function rec(source,sink){var sourceVal,prop;for(prop in source){if(!hasOwnProp.call(source,prop)){continue}sourceVal=source[prop];if(sink[prop]===UNDEF){sink[prop]=sourceVal}else if(typeof sourceVal===\"object\"&&sourceVal!==null){rec(sourceVal,sink[prop])}}})(src,snk);return snk}function getValidHexColor(code){var color=code||DEF_COLOR;return(0,_lib.getValidColor)(color)||DEF_COLOR}function getOppositeColor(code){return(0,_lib.getLightColor)(code,1)}function normalizeFontSizeAppend(obj){var fontSize=obj.fontSize+\"\",normalizeFontSize;if(!fontSize){return obj}normalizeFontSize=fontSize.replace(/(\\d+)(px)*/,\"$1px\");obj.fontSize=normalizeFontSize;return obj}function isInvalid(arg){if(arg===UNDEF||typeof arg===\"undefined\"||arg===null||isNaN(arg)){return true}return false}compositionKeys.CAPTION=\"CAPTION\";compositionKeys.LEGEND_BODY=\"LEGEND_BODY\";compositionKeys.AXIS_LABEL=\"LEGEND_LABEL\";compositionKeys.LEGEND_AXIS=\"LEGEND_AXIS\";compositionKeys.RANGE=\"RANGE\";compositionKeys.AXIS_VALUE=\"AXIS_VALUE\";legendManager=function(){var chart,defaultConf={};defaultConf.legendCarpetConf={spreadFactor:.85,allowDrag:false,captionAlignment:\"center\",padding:{v:3,h:3},style:{fill:\"#e4d9c1\",stroke:\"#c4b89d\"}};defaultConf.legendCaptionConf={spreadFactor:.2,padding:{v:2,h:2},style:{fill:\"#786B50\",fontFamily:\"sans-serif\",fontSize:\"12px\",fontWeight:\"bold\",fontStyle:\"normal\"},bound:{style:{stroke:\"none\"}}};defaultConf.legendBodyConf={spreadFactor:.8,padding:{v:2,h:2},bound:{style:{stroke:\"none\"}}};defaultConf.legendAxisConf={legendAxisHeight:11,spreadFactor:.4,padding:{v:1,h:1},style:{stroke:\"none\",\"stroke-opacity\":0,\"stroke-width\":1},line:{grooveLength:3,offset:8,style:{stroke:\"rgba(255, 255, 255, 0.65)\",\"stroke-width\":1.5}},shadow:{style:{stroke:\"none\",fill:(0,_lib.toRaphaelColor)({FCcolor:{alpha:\"25,0,0\",angle:360,color:\"000000,FFFFFF,FFFFFF\",ratio:\"0,30,40\"}})}},bound:{style:{stroke:\"none\"}}};defaultConf.sliderGroupConf={showTooltip:1,outerCircle:{rFactor:1.4,style:{fill:TRACKER_FILL,stroke:\"#757575\",\"stroke-width\":3}},innerCircle:{rFactor:.65,style:{fill:TRACKER_FILL,stroke:\"#FFFFFF\"}}};defaultConf.axisTextItemConf={spreadFactor:.3,padding:{v:1,h:1},style:{fill:\"#786B50\",fontFamily:\"sans-serif\",fontSize:\"12px\",fontWeight:\"normal\",fontStyle:\"normal\"}};function normalizePreprocessedData(confArr){var numberFormatter=chart.getFromEnv(\"number-formatter\"),index,length,rawVal;for(index=0,length=confArr.length;index<length;index++){rawVal=confArr[index].maxvalue;if(!rawVal){continue}confArr[index].maxvalue=numberFormatter.getCleanValue(rawVal)}}return{init:function init(options){chart=options.chart},legacyDataParser:function legacyDataParser(data,extremes){var colormanagerConf={},numberFormatter=chart.getFromEnv(\"number-formatter\"),colorConfArr,colorConf,startColor,endColor,index,validColor,length,colorRange,value,dispValue,mapByPercent,isMaxValPresent;if(!data){return false}colormanagerConf.mapByPercent=mapByPercent=!!(0,_lib.pluckNumber)(data.mapbypercent,0);colorConfArr=data.color||[];if(data.minvalue===UNDEF){data.minvalue=extremes.min!==UNDEF?mapByPercent?0:extremes.min:0}if(data.maxvalue===UNDEF){data.maxvalue=extremes.max!==UNDEF?mapByPercent?100:extremes.max:100}isMaxValPresent=false;for(index=0,length=colorConfArr.length;index<length;index++){if(colorConfArr[index].maxvalue){isMaxValPresent=true;break}}if(!isMaxValPresent){colorConfArr=[]}startColor=data.code;colorRange=colormanagerConf.colorRange=[];colormanagerConf.gradient=!!(0,_lib.pluckNumber)(data.gradient,1);if(!colorConfArr.length){if(startColor){endColor=getValidHexColor(startColor);startColor=getValidHexColor()}else{startColor=getValidHexColor();endColor=getOppositeColor(startColor)}colorConfArr.push({code:endColor,maxvalue:data.maxvalue,label:UNDEF})}else{startColor=getValidHexColor(startColor)}normalizePreprocessedData(colorConfArr);colorConfArr=colorConfArr.sort((function(m,n){return m.maxvalue-n.maxvalue}));value=dispValue=data.minvalue&&numberFormatter.getCleanValue(data.minvalue);dispValue=(value!==UNDEF||value!==null)&&(mapByPercent?value+PERCENT_STR:numberFormatter.legendValue(value));colorRange.push({code:(0,_lib.dehashify)(startColor),value:value,displayValue:dispValue,label:data.startlabel});for(index=0,length=colorConfArr.length;index<length;index++){colorConf=colorConfArr[index];validColor=getValidHexColor(colorConf.code||colorConf.color);value=dispValue=colorConf.maxvalue;if(isNaN(parseInt(value,10))){continue}dispValue=(value!==UNDEF||value!==null)&&(mapByPercent?value+PERCENT_STR:numberFormatter.legendValue(value));colorRange.push({code:(0,_lib.dehashify)(validColor),value:value,displayValue:dispValue,label:(0,_lib.parseUnsafeString)(colorConf.label||colorConf.displayvalue)})}colorRange[colorRange.length-1].label=(0,_lib.parseUnsafeString)(data.endlabel||colorConf.label);return colormanagerConf},getDefaultConf:function getDefaultConf(key){return defaultConf[key]}}}();var GLegend=function(_ComponentInterface){(0,_inheritsLoose2.default)(GLegend,_ComponentInterface);var _proto=GLegend.prototype;_proto.getType=function getType(){return\"gradientLegend\"};_proto.getName=function getName(){return\"gLegend\"};function GLegend(){var _this;_this=_ComponentInterface.call(this)||this;gLegendRef=(0,_assertThisInitialized2.default)(_this);_this.enabled=false;_this.drawOptions={};_this.components={};return _this}_proto.setColorRange=function setColorRange(colorRange){var cr=this.drawOptions.colorRange=colorRange;cr&&cr._preparationGoneWrong&&(this._dontPlot=true)};_proto.configureAttributes=function configureAttributes(){var componentAPI=this,chart=componentAPI.getFromEnv(\"chart\"),chartAttrs=componentAPI.getFromEnv(\"dataSource\").chart,conf=componentAPI.conf={},outCanvasBaseFont=chartAttrs.outcnvbasefont,outCanvasBaseFontSize=this.computeFontSize(chartAttrs.outcnvbasefontsize),outCanvasBaseFontColor=chartAttrs.outcnvbasefontcolor,labelStyle=chart.config.dataLabelStyle,fColor,fFamily,fSize,fSizeWithUnit,fWeight,cfColor,cfFamily,cfSize,cfSizeWithUnit,cfWeight,axisBorderColor,axisBorderAlpha;legendManager.init({chart:chart});componentAPI.data=componentAPI.getFromEnv(\"dataSource\").colorrange;if(componentAPI._dontPlot){return}componentAPI.drawOptions={smartLabel:componentAPI.getFromEnv(\"smartLabel\"),gLegend:componentAPI};componentAPI._dontPlot=false;componentAPI._recalculateLogicalSpace=true;conf.caption=(0,_lib.parseUnsafeString)((0,_lib.pluck)(chartAttrs.legendcaption));conf.legendPosition=(0,_lib.pluck)(chartAttrs.legendposition,\"bottom\").toLowerCase();conf.legendXPosition=(0,_lib.pluckNumber)(chartAttrs.legendxposition,0);conf.legendYPosition=(0,_lib.pluckNumber)(chartAttrs.legendyposition,0);conf.legendMaxHeight=(0,_lib.pluckNumber)(chartAttrs.legendmaxheight,0);conf.legendMaxWidth=(0,_lib.pluckNumber)(chartAttrs.legendmaxwidth,0);conf.legendVertical=typeof chartAttrs.legendorientation===\"string\"&&chartAttrs.legendorientation.toLowerCase()===VERTICAL;conf.showLegend=(0,_lib.pluckNumber)(chartAttrs.showlegend,1);conf.interactiveLegend=(0,_lib.pluckNumber)(chartAttrs.interactivelegend,1);conf.showLegendLabels=(0,_lib.pluckNumber)(chartAttrs.showlegendlabels,1);fColor=chartAttrs.legenditemfontcolor||outCanvasBaseFontColor;fFamily=chartAttrs.legenditemfont||outCanvasBaseFont;fSize=chartAttrs.legenditemfontsize||outCanvasBaseFontSize;fSizeWithUnit=(0,_lib.pluckFontSizeMaintainUnit)(chartAttrs.legenditemfontsize,chartAttrs.outcnvbasefontsize);fWeight=(0,_lib.pluckNumber)(chartAttrs.legenditemfontbold,0);cfColor=chartAttrs.legendcaptionfontcolor||outCanvasBaseFontColor;cfFamily=chartAttrs.legendcaptionfont||outCanvasBaseFont;cfSize=chartAttrs.legendcaptionfontsize||outCanvasBaseFontSize;cfSizeWithUnit=(0,_lib.pluckFontSizeMaintainUnit)(chartAttrs.legendcaptionfontsize,chartAttrs.outcnvbasefontsize);cfWeight=(0,_lib.pluckNumber)(chartAttrs.legendcaptionfontbold,1);axisBorderColor=chartAttrs.legendaxisbordercolor?(0,_lib.hashify)((0,_lib.dehashify)(chartAttrs.legendaxisbordercolor)):UNDEF;axisBorderAlpha=axisBorderColor?(0,_lib.pluckNumber)(chartAttrs.legendaxisborderalpha,100)/100:UNDEF;conf.axisTextItemConf={style:{fill:fColor?(0,_lib.convertColor)((0,_lib.pluck)(fColor)):labelStyle.color,fontFamily:fFamily?(0,_lib.pluck)(fFamily):labelStyle.fontFamily,fontSize:fSize?(0,_lib.pluckNumber)(fSize):labelStyle.fontSize.match(/\\d+/)[0],fontSizeWithUnit:(0,_lib.pluckFontSizeMaintainUnit)(fSizeWithUnit,labelStyle.fontSize.match(/\\d+/)[0]),fontWeight:fWeight?\"bold\":labelStyle.fontWeight}};conf.legendCaptionConf={style:{fill:cfColor?(0,_lib.convertColor)((0,_lib.pluck)(cfColor)):labelStyle.color,fontFamily:cfFamily?(0,_lib.pluck)(cfFamily):labelStyle.fontFamily,fontSize:cfSize?(0,_lib.pluckNumber)(cfSize):labelStyle.fontSize.match(/\\d+/)[0],fontSizeWithUnit:(0,_lib.pluckFontSizeMaintainUnit)(cfSizeWithUnit,labelStyle.fontSize.match(/\\d+/)[0]),fontWeight:cfWeight?\"bold\":labelStyle.fontWeight,fontStyle:\"normal\"}};conf.legendAxisConf={legendAxisHeight:11,style:{stroke:axisBorderColor,\"stroke-opacity\":axisBorderAlpha},line:{style:{stroke:(0,_lib.convertColor)((0,_lib.pluck)(chartAttrs.legendscalelinecolor,\"FFF8E9\"),(0,_lib.pluckNumber)(chartAttrs.legendscalelinealpha,100)),\"stroke-width\":(0,_lib.pluckNumber)(chartAttrs.legendscalelinethickness)}}};conf.sliderGroupConf={showTooltip:(0,_lib.pluckNumber)(chartAttrs.showtooltip,1),outerCircle:{rFactor:(0,_lib.pluckNumber)(chartAttrs.sliderdiameterfactor),style:{stroke:(0,_lib.convertColor)((0,_lib.pluck)(chartAttrs.legendpointerbordercolor,\"757575\"),(0,_lib.pluckNumber)(chartAttrs.legendpointerborderalpha,100))}},innerCircle:{rFactor:(0,_lib.pluckNumber)(chartAttrs.sliderholediameterfactor),style:{stroke:(0,_lib.convertColor)((0,_lib.pluck)(chartAttrs.legendpointercolor,\"FFFFFF\"),(0,_lib.pluckNumber)(chartAttrs.legendpointeralpha,100))}}};conf.legendCarpetConf={spreadFactor:(0,_lib.pluckNumber)(chartAttrs.legendspreadfactor),allowDrag:!!(0,_lib.pluckNumber)(chartAttrs.legendallowdrag,0),captionAlignment:(0,_lib.pluck)(chartAttrs.legendcaptionalignment,\"center\"),style:{fill:(0,_lib.convertColor)((0,_lib.pluck)(chartAttrs.legendbgcolor,\"e4d9c1\"),(0,_lib.pluckNumber)(chartAttrs.legendbgalpha,100)),stroke:(0,_lib.convertColor)((0,_lib.pluck)(chartAttrs.legendbordercolor,\"c4b89d\"),(0,_lib.pluckNumber)(chartAttrs.legendborderalpha,100)),\"stroke-width\":(0,_lib.pluckNumber)(chartAttrs.legendborderthickness,1)}}};_proto.postConfigureInit=function postConfigureInit(){var componentAPI=this,conf=componentAPI.conf,caption,carpet,axis,sGroup,ovrdConf,ovrdTextConf,body,labels,values,captionConfig,axisConfig,legendPosition=conf.legendPosition?conf.legendPosition.split(\"-\"):[],bodyConfig;componentAPI.elem={};if(conf.interactiveLegend){ovrdConf=merge(legendManager.getDefaultConf(\"sliderGroupConf\"),conf.sliderGroupConf);if(this.sGroup){sGroup=componentAPI.elem.sGroup=this.sGroup;sGroup.configure(ovrdConf);componentAPI.elem.sGroup.gLegend=componentAPI}else{this.sGroup=componentAPI.elem.sGroup=sGroup=new SliderGroup(ovrdConf);sGroup.configure(ovrdConf);componentAPI.elem.sGroup.gLegend=componentAPI}}else{this.sGroup&&this.sGroup.dispose();this.sGroup&&delete this.sGroup}ovrdConf=merge(legendManager.getDefaultConf(\"legendCarpetConf\"),conf.legendCarpetConf);ovrdConf.legendPosition=legendPosition[0]===ABSOLUTE&&!conf.legendVertical||legendPosition[0]===TOP||legendPosition[0]===BOTTOM?BOTTOM:RIGHT;bodyConfig=legendManager.getDefaultConf(\"legendBodyConf\");if(legendPosition[0]===ABSOLUTE&&!conf.legendVertical||legendPosition[0]===TOP||legendPosition[0]===BOTTOM){componentAPI.drawOptions.refSideKey=CANVAS_WIDTH;componentAPI.drawOptions.refOffsetKey=CANVAS_LEFT;ovrdTextConf=merge(legendManager.getDefaultConf(\"axisTextItemConf\"),conf.axisTextItemConf);bodyConfig.legendPosition=BOTTOM;axisConfig=merge(legendManager.getDefaultConf(\"legendAxisConf\"),conf.legendAxisConf);axisConfig.legendPosition=BOTTOM;ovrdTextConf.legendPosition=BOTTOM}else{componentAPI.drawOptions.refSideKey=CANVAS_HEIGHT;componentAPI.drawOptions.refOffsetKey=CANVAS_TOP;ovrdTextConf=merge(legendManager.getDefaultConf(\"axisTextItemConf\"),conf.axisTextItemConf);bodyConfig.legendPosition=RIGHT;axisConfig=merge(legendManager.getDefaultConf(\"legendAxisConf\"),conf.legendAxisConf);axisConfig.legendPosition=RIGHT;ovrdTextConf.legendPosition=RIGHT}if(!Object.keys(this.components).length){this.components.LegendCarpet=new LegendCarpet;this.components.LegendBody=new LegendBody;this.components.LegendAxis=new LegendAxis;this.components.LegendValues=new LegendValues;conf.showLegendLabels&&(this.components.LegendLabels=new LegendLabels)}axis=this.components.LegendAxis;values=this.components.LegendValues;carpet=this.components.LegendCarpet;body=this.components.LegendBody;conf.showLegendLabels&&(labels=this.components.LegendLabels);this.components.LegendCarpet.configure(ovrdConf);this.components.LegendValues.configure(ovrdTextConf);this.components.LegendAxis.configure(axisConfig);this.components.LegendBody.configure(componentAPI.drawOptions.colorRange,bodyConfig,ovrdTextConf);conf.showLegendLabels&&labels.configure(ovrdTextConf);if(conf.caption){captionConfig=merge(legendManager.getDefaultConf(\"legendCaptionConf\"),conf.legendCaptionConf);if(this.componentCaption&&Object.keys(this.componentCaption).length){this.componentCaption.configure(conf.caption,captionConfig)}else{caption=this.componentCaption=new LegendCaption;caption.configure(conf.caption,captionConfig)}carpet.addCompositions(this.componentCaption,compositionKeys.CAPTION)}else{carpet.removeCompositions(compositionKeys.CAPTION);this.componentCaption&&this.componentCaption.dispose();delete this.componentCaption}sGroup&&axis.addCompositions(sGroup,compositionKeys.RANGE);labels&&body.addCompositions(labels,compositionKeys.AXIS_LABEL);body.addCompositions(axis,compositionKeys.LEGEND_AXIS);body.addCompositions(values,compositionKeys.AXIS_VALUE);carpet.addCompositions(body,compositionKeys.LEGEND_BODY);componentAPI.elem.gl=new LegendBase(carpet)};_proto.getValueRange=function getValueRange(){var componentAPI=this,rGroup=componentAPI.elem&&componentAPI.elem.sGroup,sliders=rGroup.sliders,extremes=rGroup.extremes,minVal,maxVal;minVal=sliders[\"false\"].currPos;maxVal=extremes[1]-extremes[0]+sliders[\"true\"].currPos;return[{min:rGroup.getValueFormPixel(minVal),max:rGroup.getValueFormPixel(maxVal)}]};_proto._dispose=function _dispose(){var componentAPI=this;componentAPI.elem&&componentAPI.elem.gl&&componentAPI.elem.gl.dispose();componentAPI.elem={};_ComponentInterface.prototype._dispose.call(this)};_proto.getCalculatedLogicalSpace=function getCalculatedLogicalSpace(){return this._logicalArea};_proto.setCalculatedLogicalSpace=function setCalculatedLogicalSpace(area){this._logicalArea=area};_proto.getLogicalSpace=function getLogicalSpace(maxOtherSide){var componentAPI=this,conf=componentAPI.conf,zeroArea={height:0,width:0},logicalSpace,drawOptions=componentAPI.drawOptions,refSideKey,chartConfig=componentAPI.getFromEnv(\"chartConfig\"),refOffsetKey,isAbsolute=conf.legendPosition.split(\"-\")[0]===ABSOLUTE,maxHeight,maxWidth;if(!componentAPI._recalculateLogicalSpace){refSideKey=drawOptions.refSideKey;refOffsetKey=drawOptions.refOffsetKey;componentAPI.drawOptions.refSide=chartConfig[refSideKey];if(isAbsolute){if(conf.legendMaxHeight<=0){maxHeight=chartConfig.height*.8}else if(conf.legendMaxHeight<=chartConfig.height){maxHeight=conf.legendMaxHeight}else{maxHeight=chartConfig.height}if(conf.legendMaxWidth<=0){maxWidth=chartConfig.width*.8}else if(conf.legendMaxWidth<=chartConfig.width){maxWidth=conf.legendMaxWidth}else{maxWidth=chartConfig.width}if(conf.legendVertical){componentAPI.drawOptions.refSide=maxHeight;componentAPI.drawOptions.maxOtherSide=maxWidth}else{componentAPI.drawOptions.refSide=maxWidth;componentAPI.drawOptions.maxOtherSide=maxHeight}}else{componentAPI.drawOptions.refOffset=chartConfig[refOffsetKey];componentAPI.drawOptions.maxOtherSide=maxOtherSide||componentAPI.drawOptions.maxOtherSide}logicalSpace=componentAPI.elem.gl.getLogicalSpace(componentAPI.drawOptions,true);componentAPI.setCalculatedLogicalSpace(logicalSpace);return componentAPI.getCalculatedLogicalSpace()||zeroArea}if(componentAPI._dontPlot){return zeroArea}componentAPI._recalculateLogicalSpace=false;componentAPI.postConfigureInit();if(!conf.showLegend){return zeroArea}refSideKey=drawOptions.refSideKey;refOffsetKey=drawOptions.refOffsetKey;componentAPI.drawOptions.refSide=chartConfig[refSideKey];componentAPI.drawOptions.refOffset=chartConfig[refOffsetKey];componentAPI.drawOptions.maxOtherSide=maxOtherSide||componentAPI.drawOptions.maxOtherSide;if(componentAPI.elem.gl){logicalSpace=componentAPI.elem.gl.getLogicalSpace(componentAPI.drawOptions,true);componentAPI.elem.gl&&componentAPI.setCalculatedLogicalSpace(logicalSpace)}return componentAPI.getCalculatedLogicalSpace()};_proto.resetLegend=function resetLegend(){var componentAPI=this,rGroup;rGroup=componentAPI.elem&&componentAPI.elem.sGroup;if(rGroup){rGroup.reset()}};_proto._calculateTopPosition=function _calculateTopPosition(y){var legend=this,chart=legend.getFromEnv(\"chart\"),chartConfig=chart.config,yPos=y,caption=chart.getChildren(\"caption\")&&chart.getChildren(\"caption\")[0],subCaption=chart.getChildren(\"subCaption\")&&chart.getChildren(\"subCaption\")[0],toolbar=chart.getChildren(\"chartMenuBar\")&&chart.getChildren(\"chartMenuBar\")[0],oriCanvasTop=chartConfig.oriTopSpace;if(!chartConfig.toolbarY&&toolbar&&toolbar.props&&toolbar.props.height){if(!(oriCanvasTop>toolbar.props.height+toolbar.props.y)){yPos=toolbar.props.y+toolbar.props.height}}if(caption&&caption.config&&caption.config.text&&caption.config.text!==_lib.BLANKSTRING&&caption.config.height&&caption.config.isOnTop===1){yPos=caption.config.height+caption.config.y+caption.config.captionPadding}if(subCaption&&subCaption.config&&subCaption.config.height&&subCaption.config.isOnTop===1){yPos=subCaption.config.y+subCaption.config.height+(caption&&caption.config&&caption.config.captionPadding||0)}return yPos>y?yPos:y};_proto.allocatePosition=function allocatePosition(){var iapi=this.getFromEnv(\"chart\"),config=iapi.config,gradientLegend=this,conf=gradientLegend.conf||{},legendPosition=conf.legendPosition.split(\"-\"),canvasLeft=config.canvasLeft,canvasTop=config.canvasTop,canvasWidth=config.canvasWidth,canvasHeight=config.canvasHeight,marginTop=config.marginTop,marginBottom=config.marginBottom,marginRight=config.marginRight,marginLeft=config.marginLeft,spaceTakenByGradientLegend,spaceLeft,width,height,xPos,yPos,xLim,yLim;conf.axisTextItemConf.style.fontSize=this.computeFontSize(conf.axisTextItemConf.style.fontSizeWithUnit);conf.legendCaptionConf.style.fontSize=this.computeFontSize(conf.legendCaptionConf.style.fontSizeWithUnit);if(!iapi.config.gLegendEnabled){return}spaceTakenByGradientLegend=this.getCalculatedLogicalSpace();width=conf.width=spaceTakenByGradientLegend.width;height=conf.height=spaceTakenByGradientLegend.height;if(legendPosition[0]===ABSOLUTE){xLim=config.width-width;yLim=config.height-height;xPos=conf.legendXPosition<0?0:conf.legendXPosition>xLim?xLim:conf.legendXPosition;yPos=conf.legendYPosition<0?0:conf.legendYPosition>yLim?yLim:conf.legendYPosition}else if(legendPosition[0]===TOP||legendPosition[0]===BOTTOM){spaceLeft=canvasWidth-width;if(legendPosition[1]===LEFT){xPos=canvasLeft}else if(legendPosition[1]===RIGHT){xPos=canvasLeft+(spaceLeft>0?spaceLeft:0)}else{xPos=canvasLeft+(spaceLeft<0?0:spaceLeft/2)}if(legendPosition[0]===TOP){yPos=this._calculateTopPosition(marginTop)}else{yPos=config.height-spaceTakenByGradientLegend.height-marginBottom-(config.actionBarHeight||0)}}else{spaceLeft=canvasHeight-height;if(legendPosition[1]===TOP){yPos=canvasTop}else if(legendPosition[1]===BOTTOM){yPos=canvasTop+spaceLeft}else{yPos=canvasTop+(spaceLeft<0?0:spaceLeft/2)}if(legendPosition[0]===LEFT){xPos=marginLeft}else{xPos=config.width-spaceTakenByGradientLegend.width-marginRight}}conf.xPos=xPos;conf.yPos=yPos};_proto.draw=function draw(){var iapi=this.getFromEnv(\"chart\"),colorRangeObj=iapi.getFromEnv(\"dataSource\").colorrange,gradientLegend=this,conf=gradientLegend.conf||{},hasGradientLegend=iapi.hasGradientLegend;if(!iapi.config.gLegendEnabled){return}colorRangeObj&&hasGradientLegend&&gradientLegend.drawLegendComponent(conf.xPos,conf.yPos,{parentGroup:iapi.getContainer(\"parentgroup\"),animationManager:iapi.getFromEnv(\"animationManager\")})};_proto.drawLegendComponent=function drawLegendComponent(x,y,options){var componentAPI=this,conf=componentAPI.conf,measurement,node;if(componentAPI._dontPlot){return}if(!conf.showLegend){componentAPI.enabled=false;return}componentAPI.drawOptions.animationManager=options.animationManager;componentAPI.drawOptions.parentGroup=options.parentGroup;componentAPI.drawOptions.x=x;componentAPI.drawOptions.y=y;componentAPI.drawOptions.maxOtherSide=componentAPI.drawOptions.maxOtherSide||options.maxOtherSide;node=componentAPI.elem.gl.draw(componentAPI.drawOptions);measurement=node.getBBox();conf.xPos=measurement.x;conf.yPos=measurement.y;conf.height=measurement.height;conf.width=measurement.width;componentAPI.enabled=true};return GLegend}(_componentInterface.ComponentInterface);var LegendBase=function(){function LegendBase(carpet){this.carpet=carpet}var _proto2=LegendBase.prototype;_proto2.draw=function draw(options){return this.carpet.draw(options)};_proto2.getLogicalSpace=function getLogicalSpace(options,recalculate){return this.carpet.getLogicalSpace(options,recalculate)};_proto2.dispose=function dispose(){this.carpet&&this.carpet.group&&this.carpet.group.remove()};return LegendBase}();var LegendCarpet=function(){function LegendCarpet(conf){this.conf=conf;this._id=GL_CARPET;this.compositionsByCategory={};this.node=UNDEF;this.group=UNDEF;this._lSpace=UNDEF;this.autoRecalculate=false;this.groupName=FC_GRADIENT_LEGEND;this.moveInstructions={}}var _proto3=LegendCarpet.prototype;_proto3.configure=function configure(conf){this.conf=conf};_proto3.getName=function getName(){return\"LegendCarpet\"};_proto3.getType=function getType(){return\"legend\"};_proto3.addCompositions=function addCompositions(instance,category){this.compositionsByCategory[category]=instance};_proto3.removeCompositions=function removeCompositions(category){delete this.compositionsByCategory[category]};_proto3.getBoundingBox=function getBoundingBox(options){var conf=this.conf,spreadFactor=conf.spreadFactor,refSide=options.refSide,alignment=options.alignment,refOffset=options.refOffset,x=options.x,y=options.y,lWidth,lHeight;if(this.conf.legendPosition===\"bottom\"){lWidth=conf.width=refSide*spreadFactor;lHeight=options.maxOtherSide;if(alignment&&(x===UNDEF||x===null)){x=(refOffset+refSide)/2-lWidth/2}}else{lHeight=conf.height=refSide*spreadFactor;lWidth=options.maxOtherSide;if(alignment&&(y===UNDEF||y===null)){y=(refOffset+refSide)/2-lHeight/2}}return{width:lWidth,height:lHeight,x:x,y:y}};_proto3.getPostCalcDecisionsH=function getPostCalcDecisionsH(bBox,componentsArea){var conf=this.conf,padding=conf.padding,cat,totalHeightTaken=0;this.moveInstructions={};for(cat in componentsArea){totalHeightTaken+=componentsArea[cat].height||0}bBox.height=totalHeightTaken+2*padding.v};_proto3.getLogicalSpace=function getLogicalSpace(options,recalculate){var lSpace=this._lSpace,categoryMap=[\"CAPTION\",\"LEGEND_BODY\"],conf=this.conf,padding=conf.padding,compositionsByCategory=this.compositionsByCategory,composition,bBox,effectivePlotArea,compositionLSPace,compositionHeight=0,componentsArea={},compositionPlotArea,heightNotUsed=0;if(lSpace&&!recalculate){lSpace.isImpure=true;return lSpace}lSpace=this._lSpace=bBox=this.getBoundingBox(options);if(isInvalid(lSpace.x)||isInvalid(lSpace.y)||isInvalid(lSpace.height)||isInvalid(lSpace.width)){this.autoRecalculate=true}effectivePlotArea=merge(bBox,{});effectivePlotArea.height-=2*padding.v;effectivePlotArea.width-=2*padding.h;effectivePlotArea.x+=padding.h;effectivePlotArea.y+=padding.v;for(var i=0;i<categoryMap.length;i++){composition=compositionsByCategory[categoryMap[i]];if(composition){compositionPlotArea=merge(effectivePlotArea,{});compositionPlotArea.y+=compositionHeight;compositionHeight=effectivePlotArea.height*composition.conf.spreadFactor;compositionPlotArea.height=compositionHeight+heightNotUsed;compositionLSPace=composition.getLogicalSpace(merge(compositionPlotArea,{}),options,recalculate);heightNotUsed=compositionPlotArea.height-compositionLSPace.height;componentsArea[categoryMap[i]]=compositionLSPace;compositionHeight=compositionLSPace.height}}this.getPostCalcDecisions(bBox,componentsArea);this._lSpace=bBox;return bBox};_proto3.setupDragging=function setupDragging(){var group=this.group,dx=0,dy=0,idx=0,idy=0;group.css({cursor:\"move\"});group.drag((function(_dx,_dy){dx=_dx;dy=_dy;group.attr({transform:\"t\"+(idx+dx)+\",\"+(idy+dy)})}),(function(){idx+=dx;idy+=dy}),_lib.stubFN)};_proto3.draw=function draw(options){var conf=this.conf,ref=this,categoryMap=[\"CAPTION\",\"LEGEND_BODY\"],compositionsByCategory=this.compositionsByCategory,animationManager=options.animationManager,parentGroup=options.parentGroup,group,category,composition,lSpace;this.getLogicalSpace(options,this.autoRecalculate);lSpace=this._lSpace;this.group=group=animationManager.setAnimation({el:this.group||\"group\",attr:{name:ref.groupName},component:gLegendRef,container:parentGroup,label:\"carpetGroup\"});this.node=animationManager.setAnimation({el:this.node||\"rect\",attr:lSpace,css:conf.style,component:gLegendRef,container:group,label:\"rect\"});for(var i=0;i<categoryMap.length;i++){composition=compositionsByCategory[categoryMap[i]];if(composition){composition.draw(conf.captionAlignment,lSpace,{animationManager:animationManager,colorRange:options.colorRange,numberFormatter:options.numberFormatter,parentLayer:group,smartLabel:options.smartLabel,moveInstructions:this.moveInstructions[category],gLegend:options.gLegend})}}conf.allowDrag&&this.setupDragging();return this.node};_proto3.getPostCalcDecisions=function getPostCalcDecisions(bBox,componentsArea){return this.conf.legendPosition===\"bottom\"?this.getPostCalcDecisionsH(bBox,componentsArea):this.getPostCalcDecisionsV(bBox,componentsArea)};_proto3.getPostCalcDecisionsV=function getPostCalcDecisionsV(bBox,componentsArea){var conf=this.conf,padding=conf.padding,maxWidth=Number.NEGATIVE_INFINITY,width,cat,move=this.moveInstructions,diff;this.getPostCalcDecisionsH(bBox,componentsArea);for(cat in componentsArea){width=componentsArea[cat].width;maxWidth=maxWidth<width?width:maxWidth}bBox.width=maxWidth+2*padding.h;for(cat in componentsArea){width=componentsArea[cat].width;diff=maxWidth-width;if(diff){move[cat]=\"t\"+diff/2+\",0\"}}};return LegendCarpet}();var LegendCaption=function(){function LegendCaption(text,conf){this.rawText=text;this.conf=conf;this._id=GL_CAPTION;this.node=UNDEF;this.bound=UNDEF;this._lSpace=UNDEF;this.LegendCaption={};this.LegendCaption.LEFT={x:function x(smartText,boundingBox){return boundingBox.x+smartText.width/2+2}};this.LegendCaption.RIGHT={x:function x(smartText,boundingBox){return boundingBox.x+boundingBox.width-smartText.width/2-2}};this.LegendCaption.CENTER={x:function x(){var boundingBox=arguments[1];return boundingBox.x+boundingBox.width/2}}}var _proto4=LegendCaption.prototype;_proto4.configure=function configure(text,conf){this.rawText=text;this.conf=conf};_proto4.getName=function getName(){return\"LegendCaption\"};_proto4.getType=function getType(){return\"caption\"};_proto4.getLogicalSpace=function getLogicalSpace(bBox,options,recalculate){var conf=this.conf,padding=conf.padding,lSpace=this._lSpace,text=this.rawText,chartConfig=options.gLegend.getFromEnv(\"chartConfig\"),smartLabel,effectivePlotArea,smartText,copyOfStyle;if(lSpace&&!recalculate){lSpace.isImpure=true;return lSpace}lSpace=this._lSpace={bound:{height:0,width:0},node:{logicArea:UNDEF,smartText:UNDEF}};smartLabel=options.smartLabel;if(!text){return lSpace.bound}effectivePlotArea=merge(bBox,{});effectivePlotArea.height-=2*padding.v;effectivePlotArea.width-=2*padding.h;effectivePlotArea.x+=padding.h;effectivePlotArea.y+=padding.v;smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);copyOfStyle=merge(this.conf.style,{});normalizeFontSizeAppend(copyOfStyle);smartLabel.setStyle(this._metaStyle=copyOfStyle);smartText=smartLabel.getSmartText(text,effectivePlotArea.width,effectivePlotArea.height);effectivePlotArea.height=smartText.height;effectivePlotArea.width=smartText.width;bBox.height=smartText.height+2*padding.v;bBox.width=smartText.width+2*padding.h;lSpace.node.smartText=smartText;lSpace.node.logicArea=effectivePlotArea;lSpace.bound=bBox;return bBox};_proto4.draw=function draw(){var conf=this.conf,layer,boundAttr=conf.bound||{},group,bound,boundingArea,lSpace,normalizedX,x,bBox,options,node,animationManager;if(arguments.length>=3){x=arguments[0];bBox=arguments[1];options=arguments[2]}else if(arguments.length>=2){x=arguments[0];options=arguments[1]}layer=options.parentLayer;animationManager=options.animationManager;this.group=group=animationManager.setAnimation({el:this.group||\"group\",attr:{name:\"legend-caption\"},css:conf.style,component:gLegendRef,container:layer});this.getLogicalSpace(bBox,options);lSpace=this._lSpace;node=lSpace.node;boundingArea=lSpace.bound;this.bound=bound=animationManager.setAnimation({el:this.bound||\"rect\",attr:boundingArea,css:boundAttr.style,container:group,component:gLegendRef});normalizedX=typeof x===\"string\"?this.LegendCaption[x.toUpperCase()].x(node.smartText,bBox||node.logicArea):x;this.node=animationManager.setAnimation({el:this.node||\"text\",attr:{text:node.smartText.text,x:normalizedX,y:node.logicArea.y+node.smartText.height/2,lineHeight:this._metaStyle.lineHeight,fill:conf.style.fill},container:group,component:gLegendRef});return{group:group,bound:bound,node:this.node}};_proto4.dispose=function dispose(){this.group.remove();this.bound.remove();this.node.remove()};return LegendCaption}();var LegendBody=function(){function LegendBody(colorRange,conf,childTextConf){this.colorRange=colorRange;this.conf=conf;this.childTextConf=childTextConf;this._id=GL_BODY;this.bound=UNDEF;this.group=UNDEF;this.compositionsByCategory={};this._lSpace=UNDEF;this.SC_STACK=[compositionKeys.AXIS_LABEL,compositionKeys.LEGEND_AXIS,compositionKeys.AXIS_VALUE];this.DARW_STACK=[compositionKeys.AXIS_VALUE,compositionKeys.LEGEND_AXIS,compositionKeys.AXIS_LABEL]}var _proto5=LegendBody.prototype;_proto5.configure=function configure(colorRange,conf,childTextConf){this.colorRange=colorRange;this.conf=conf;this.childTextConf=childTextConf;this.compositionsByCategory={}};_proto5.getName=function getName(){return\"LegendBody\"};_proto5.getType=function getType(){return\"legend\"};_proto5.addCompositions=function addCompositions(instance,category){this.compositionsByCategory[category]=instance};_proto5.getSpaceTaken=function getSpaceTaken(spaceObj){return this.conf.legendPosition===\"bottom\"?spaceObj.height:spaceObj.width};_proto5.getLogicalSpace=function getLogicalSpace(bBox,options,recalculate){var lSpace=this._lSpace,conf=this.conf,padding=conf.padding,compositionsByCategory=this.compositionsByCategory,composition,compositionPlotArea,compositionAreaOffset,effectivePlotArea,getCompositionPlotArea,spaceTaken=0,index,length;if(lSpace&&!recalculate){lSpace.isImpure=true;return lSpace}lSpace=this._lSpace={bound:{height:0,width:0},node:{logicArea:UNDEF}};effectivePlotArea=merge(bBox,{});effectivePlotArea.height-=2*padding.v;effectivePlotArea.width-=2*padding.h;effectivePlotArea.x+=padding.h;effectivePlotArea.y+=padding.v;getCompositionPlotArea=this.getCompositionPlotAreaFor(effectivePlotArea);options.colorRange=this.colorRange;for(index=0,length=this.SC_STACK.length;index<length;index++){if(!(composition=compositionsByCategory[this.SC_STACK[index]])){continue}compositionPlotArea=getCompositionPlotArea(compositionAreaOffset,composition.conf.spreadFactor);compositionAreaOffset=composition.getLogicalSpace(merge(compositionPlotArea,{}),options,recalculate);spaceTaken+=this.getSpaceTaken(compositionAreaOffset)}this.updateEffectivePlotArea(bBox,effectivePlotArea,spaceTaken);lSpace.node.logicArea=effectivePlotArea;lSpace.bound=bBox;return bBox};_proto5.draw=function draw(){var childTextConf=this.childTextConf,conf=this.conf,boundStyle=conf.bound.style||{},compositionsByCategory=this.compositionsByCategory,animationManager,layer,bound,composition,legendBodyGroup,bBox,lSpace,options,index,length;if(arguments.length>=3){bBox=arguments[1];options=arguments[2]}else if(arguments.length>=2){options=arguments[1]}layer=options.parentLayer;animationManager=options.animationManager;this.getLogicalSpace(bBox,options);lSpace=this._lSpace;this.group=legendBodyGroup=animationManager.setAnimation({el:this.group||\"group\",attr:{name:\"legend-body\",transform:\"t0,0\"},css:childTextConf.style,container:layer,component:gLegendRef});this.bound=bound=animationManager.setAnimation({el:this.bound||\"rect\",attr:lSpace.bound,css:boundStyle,container:legendBodyGroup,component:gLegendRef});options.colorRange=this.colorRange;options.parentLayer=legendBodyGroup;for(index=0,length=this.DARW_STACK.length;index<length;index++){if(!(composition=compositionsByCategory[this.DARW_STACK[index]])){continue}composition.draw(options)}if(options.moveInstructions){legendBodyGroup.attr({transform:options.moveInstructions})}return{bound:bound,group:legendBodyGroup}};_proto5.getCompositionPlotAreaFor=function getCompositionPlotAreaFor(effectivePlotArea){var plotArea,isLPosBottom=this.conf.legendPosition===\"bottom\";plotArea=merge(effectivePlotArea,{});return function(compAreaOffset,sf){var compositionAreaOffset=compAreaOffset;compositionAreaOffset=compositionAreaOffset||{};if(isLPosBottom){plotArea.y+=compositionAreaOffset.height||0;plotArea.height=effectivePlotArea.height*sf}else{plotArea.x+=compositionAreaOffset.width||0;plotArea.width=effectivePlotArea.width*sf}return plotArea}};_proto5.updateEffectivePlotArea=function updateEffectivePlotArea(bBox,effectivePlotArea,val){var conf=this.conf,padding=conf.padding;if(this.conf.legendPosition===\"bottom\"){effectivePlotArea.height=val;bBox.height=val+2*padding.v}else{effectivePlotArea.width=val;bBox.width=val+2*padding.h}};return LegendBody}();var LegendLabels=function(){function LegendLabels(conf){this.conf=conf;this.node=[];this._id=GL_LABELS}var _proto6=LegendLabels.prototype;_proto6.configure=function configure(conf){this.conf=conf};_proto6.getType=function getType(){return\"label\"};_proto6.getName=function getName(){return\"LegendLabel\"};_proto6.getEffectivePlotArea=function getEffectivePlotArea(area){var conf=this.conf,padding=conf.padding;area.height-=2*padding.v;area.width-=2*padding.h;area.x+=padding.h;area.y+=padding.v;return area};_proto6.getLogicalSpace=function getLogicalSpace(bBox,options,recalculate){var isLegendPosBottom=this.conf.legendPosition===\"bottom\",lSpace=this._lSpace,conf=this.conf,padding=conf.padding,cRange,smartLabel,crDataObj,index,length,labelHeights=[],leftBound,rightBound,plotArea,label,valueRatio,stop,zerothStop,lsTexts,maxHeight,effectivePlotArea,testSmartLabel,nextRefPoint,currPoint,leftStop,smartText,ni,copyOfStyle,chartConfig=options.gLegend.getFromEnv(\"chartConfig\"),normalizedDataArr=[],effectivePlotAreaWH;if(lSpace&&!recalculate){lSpace.isImpure=true;return lSpace}cRange=options.colorRange;smartLabel=options.smartLabel;valueRatio=cRange.getCumulativeValueRatio();crDataObj=cRange.colorRange;lSpace=this._lSpace={bound:{height:0,width:0},node:{logicArea:UNDEF,smartTexts:[]}};lsTexts=lSpace.node.smartTexts;plotArea=merge(bBox,{});effectivePlotArea=this.getEffectivePlotArea(plotArea);effectivePlotAreaWH=isLegendPosBottom?effectivePlotArea.width:effectivePlotArea.height;smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);copyOfStyle=merge(conf.style,{});normalizeFontSizeAppend(this._metaStyle=copyOfStyle);smartLabel.setStyle(copyOfStyle);testSmartLabel=smartLabel.getSmartText(\"W\");for(index=0,length=crDataObj.length;index<length;index++){label=(0,_lib.parseUnsafeString)(crDataObj[index].label);if(!label){lsTexts[index]=UNDEF;continue}normalizedDataArr.push({oriIndex:index,label:label})}length=normalizedDataArr.length;if(length===0){return{height:0,width:0}}if(length>1){stop=(valueRatio[normalizedDataArr[length-1].oriIndex]-valueRatio[normalizedDataArr[0].oriIndex])/2*effectivePlotAreaWH/100}else{stop=Math.max(valueRatio[normalizedDataArr[0].oriIndex],100-valueRatio[normalizedDataArr[0].oriIndex])/2*effectivePlotAreaWH/100}zerothStop=stop;if(isLegendPosBottom){smartText=smartLabel.getSmartText(normalizedDataArr[0].label,zerothStop,effectivePlotArea.height);smartText.x=valueRatio[normalizedDataArr[0].oriIndex]*effectivePlotArea.width/100;leftBound=smartText.x+smartText.width}else{smartText=smartLabel.getSmartText(normalizedDataArr[0].label,zerothStop,effectivePlotArea.width);smartText.y=valueRatio[normalizedDataArr[0].oriIndex]*effectivePlotArea.height/100;leftBound=smartText.y+smartText.width}labelHeights.push(smartText.height);lsTexts[normalizedDataArr[0].oriIndex]=smartText;if(isLegendPosBottom){smartText=smartLabel.getSmartText(normalizedDataArr[length-1].label,zerothStop,effectivePlotArea.height);smartText.x=valueRatio[normalizedDataArr[length-1].oriIndex]*effectivePlotArea.width/100;rightBound=smartText.x-smartText.width}else{smartText=smartLabel.getSmartText(normalizedDataArr[length-1].label,zerothStop,effectivePlotArea.width);smartText.y=valueRatio[normalizedDataArr[length-1].oriIndex]*effectivePlotArea.height/100;rightBound=smartText.y-smartText.width}labelHeights.push(smartText.height);lsTexts[normalizedDataArr[length-1].oriIndex]=smartText;leftStop=leftBound;for(index=1;index<length-1;index++){label=normalizedDataArr[index].label;ni=normalizedDataArr[index].oriIndex;smartText=UNDEF;nextRefPoint=index+1===length-1?rightBound:valueRatio[normalizedDataArr[index+1].oriIndex]*effectivePlotAreaWH/100;currPoint=valueRatio[normalizedDataArr[index].oriIndex]*effectivePlotAreaWH/100;stop=Math.min(currPoint-leftStop,nextRefPoint-currPoint);if(stop>2*testSmartLabel.width){if(isLegendPosBottom){smartText=smartLabel.getSmartText(label,stop,effectivePlotArea.height);smartText.x=valueRatio[ni]*effectivePlotArea.width/100}else{smartText=smartLabel.getSmartText(label,stop,effectivePlotArea.width);smartText.y=valueRatio[ni]*effectivePlotArea.height/100}leftStop=stop;labelHeights.push(smartText.height)}lsTexts[normalizedDataArr[index].oriIndex]=smartText}maxHeight=Math.max.apply(Math,labelHeights);if(isLegendPosBottom){effectivePlotArea.height=maxHeight;bBox.height=maxHeight+2*padding.v}else{effectivePlotArea.width=maxHeight;bBox.width=maxHeight+2*padding.v}lSpace.node.logicArea=effectivePlotArea;lSpace.bound=bBox;return bBox};_proto6.draw=function draw(){var isLegendPosBottom=this.conf.legendPosition===\"bottom\",layer,bound,conf=this.conf,boundStyle=conf.bound&&conf.bound.style||{stroke:\"none\"},legendLabelsGroup,bBox,smartText,lSpace,options,index,logicArea,lsTexts,length,pos={},animationManager;if(arguments.length>=2&&arguments[1]){bBox=arguments[0];options=arguments[1]}else if(arguments.length>=1){options=arguments[0]}animationManager=options.animationManager;layer=options.parentLayer;this.getLogicalSpace(bBox,options);lSpace=this._lSpace;logicArea=lSpace.node.logicArea;lsTexts=lSpace.node.smartTexts;this.group=legendLabelsGroup=animationManager.setAnimation({el:this.group||\"group\",attr:{name:\"legend-labels\"},container:layer,component:gLegendRef});this.bound=bound=animationManager.setAnimation({el:this.bound||\"rect\",attr:lSpace.bound,css:boundStyle,container:legendLabelsGroup,component:gLegendRef});for(var i=0;i<this.node.length;i++){this.node[i].remove()}this.node=[];for(index=0,length=lsTexts.length;index<length;index++){smartText=lsTexts[index];if(!smartText){continue}if(isLegendPosBottom){pos.y=logicArea.y+smartText.height/2;if(index===length-1){pos.x=logicArea.x+smartText.x-smartText.width/2}else if(index){pos.x=logicArea.x+smartText.x}else{pos.x=logicArea.x+smartText.x+smartText.width/2}}else{pos.x=logicArea.x+smartText.height/2;if(index===length-1){pos.y=logicArea.y+smartText.y-smartText.width/2}else if(index){pos.y=logicArea.y+smartText.y}else{pos.y=logicArea.y+smartText.y+smartText.width/2}}this.node.push(animationManager.setAnimation({el:\"text\",attr:{text:smartText.text,x:pos.x,y:pos.y,lineHeight:this._metaStyle.lineHeight,fill:conf.style.fill,transform:isLegendPosBottom?\"R0\":\"R270,\"+pos.x+\",\"+pos.y},container:legendLabelsGroup,component:gLegendRef}))}return{group:legendLabelsGroup,bound:bound,node:this.node}};return LegendLabels}();var LegendAxis=function(){function LegendAxis(conf){this.conf=conf;this._id=FL_AXIS;this.node=UNDEF;this.group=UNDEF;this.shadow=UNDEF;this.markerLine=UNDEF;this.compositionsByCategory={}}var _proto7=LegendAxis.prototype;_proto7.configure=function configure(conf){this.conf=conf};_proto7.getName=function getName(){return\"LegendAxis\"};_proto7.getType=function getType(){return\"axis\"};_proto7.addCompositions=function addCompositions(instance,category){this.compositionsByCategory[category]=instance};_proto7.getLogicalSpace=function getLogicalSpace(){var isLegendPosBottom=this.conf.legendPosition===\"bottom\",bBox=arguments[0],recalculate=arguments[2],lSpace=this._lSpace,conf=this.conf,padding=conf.padding,spaceTakenLower,spaceTakenUpper,spaceTaken,axisThickness=conf.legendAxisHeight,compositionsByCategory=this.compositionsByCategory,sliderG,effectivePlotArea,slider,sliderSpace,sliderExtraDiam=0;if(lSpace&&!recalculate){lSpace.isImpure=true;return lSpace}lSpace=this._lSpace={bound:{height:0,width:0},node:{logicArea:UNDEF}};effectivePlotArea=merge(bBox,{});effectivePlotArea.height-=2*padding.v;effectivePlotArea.width-=2*padding.h;effectivePlotArea.x+=padding.h;effectivePlotArea.y+=padding.v;spaceTakenLower=axisThickness/2+conf.line.offset;spaceTakenUpper=axisThickness/2;sliderG=compositionsByCategory[compositionKeys.RANGE];if(sliderG){slider=sliderG.sliders[\"false\"];sliderSpace=slider.conf.outerCircle.rFactor*axisThickness;spaceTakenUpper+=sliderExtraDiam=Math.max(sliderSpace/2-axisThickness/2,0)}if(isLegendPosBottom){effectivePlotArea.y+=sliderExtraDiam;effectivePlotArea.height=spaceTaken=spaceTakenUpper+spaceTakenLower+sliderExtraDiam;bBox.height=spaceTaken+2*padding.v}else{effectivePlotArea.x+=sliderExtraDiam;effectivePlotArea.width=spaceTaken=spaceTakenUpper+spaceTakenLower+sliderExtraDiam;bBox.width=spaceTaken+2*padding.v}lSpace.node.logicArea=effectivePlotArea;lSpace.bound=bBox;return bBox};_proto7.getDrawableAxisArea=function getDrawableAxisArea(parentBoundingRect){var conf=this.conf,isLegendPosBottom=this.conf.legendPosition===\"bottom\",x=parentBoundingRect.x,y=parentBoundingRect.y,width=isLegendPosBottom?parentBoundingRect.width:conf.legendAxisHeight,height=isLegendPosBottom?conf.legendAxisHeight:parentBoundingRect.height,r=conf.legendAxisHeight/2;return{x:x,y:y,width:width,height:height,r:r}};_proto7.preDrawingRangeParamV=function preDrawingRangeParamV(drawableArea){var x=drawableArea.x+drawableArea.width/2,calculationBase=drawableArea.width;return{x:x,calculationBase:calculationBase,rangeStart:drawableArea.y,rangeEnd:drawableArea.y+drawableArea.height,prop:\"x\"}};_proto7.preDrawingRangeParamH=function preDrawingRangeParamH(drawableArea){var y=drawableArea.y+drawableArea.height/2,calculationBase=drawableArea.height;return{y:y,calculationBase:calculationBase,rangeStart:drawableArea.x,rangeEnd:drawableArea.x+drawableArea.width,prop:\"y\"}};_proto7.preDrawingRangeParam=function preDrawingRangeParam(drawableArea){return this.conf.legendPosition===\"bottom\"?this.preDrawingRangeParamH(drawableArea):this.preDrawingRangeParamV(drawableArea)};_proto7.getScaleMarkerPathStrH=function getScaleMarkerPathStrH(oriAxisRect,valueRatio){var axisRect=merge(oriAxisRect,{}),conf=this.conf,lineAttr=conf.line,index,length,ratio,covered,markerStartY,tickStr=_lib.BLANKSTRING,lineStr=_lib.BLANKSTRING;axisRect.x+=axisRect.r;axisRect.width-=2*axisRect.r;markerStartY=axisRect.y+axisRect.height;for(index=0,length=valueRatio.length;index<length;index++){ratio=valueRatio[index];covered=axisRect.x+ratio*axisRect.width/100;tickStr+=M+covered+COMMA_STR+(markerStartY-lineAttr.grooveLength)+L+covered+COMMA_STR+(markerStartY+lineAttr.offset)}lineStr+=M+axisRect.x+COMMA_STR+(markerStartY+lineAttr.offset)+L+(axisRect.x+axisRect.width)+COMMA_STR+(markerStartY+lineAttr.offset);return tickStr+lineStr};_proto7.getColorGradientH=function getColorGradientH(colorRange){return{axis:colorRange.getBoxFill(),shadow:(0,_lib.toRaphaelColor)({FCcolor:{alpha:\"25,0,0\",angle:90,color:\"000000,FFFFFF,FFFFFF\",ratio:\"0,30,40\"}})}};_proto7.draw=function draw(){var layer,conf=this.conf,boundAttr=conf.bound||{},lineAttr=conf.line,boundStyle=boundAttr.style||{},bBox,category,compositionsByCategory=this.compositionsByCategory,cRange,valueRatio,composition,legendAxisGroup,rangeParams,grad,oriAxisRect,lSpace,options,animationManager,scaleLine;if(arguments.length>=2){bBox=arguments[0];options=arguments[1]}else if(arguments.length>=1){options=arguments[0]}animationManager=options.animationManager;layer=options.parentLayer;cRange=options.colorRange;valueRatio=cRange.getCumulativeValueRatio();this.getLogicalSpace(bBox,options);lSpace=this._lSpace;this.group=legendAxisGroup=animationManager.setAnimation({el:this.group||\"group\",attr:{name:\"legend-axis\"},container:layer,component:gLegendRef});this.bound=animationManager.setAnimation({el:this.bound||\"rect\",attr:lSpace.bound,css:boundStyle,component:gLegendRef,container:legendAxisGroup});oriAxisRect=this.getDrawableAxisArea(lSpace.node.logicArea);grad=this.getColorGradient(cRange);conf.style.fill=grad.axis;conf.shadow.style.fill=grad.shadow;this.node=animationManager.setAnimation({el:this.node||\"rect\",attr:oriAxisRect,css:conf.style,container:legendAxisGroup,component:gLegendRef});this.shadow=animationManager.setAnimation({el:this.shadow||\"rect\",attr:oriAxisRect,css:conf.shadow.style,container:legendAxisGroup,component:gLegendRef});scaleLine=this.getScaleMarkerPathStr(oriAxisRect,valueRatio);this.path=animationManager.setAnimation({el:this.path||\"path\",attr:{path:scaleLine},css:lineAttr.style,container:legendAxisGroup,component:gLegendRef});for(category in compositionsByCategory){composition=compositionsByCategory[category];switch(category){case compositionKeys.RANGE:rangeParams=this.preDrawingRangeParam(oriAxisRect);options[rangeParams.prop]=rangeParams[rangeParams.prop];options.key=rangeParams.prop;options.rCalcBase=rangeParams.calculationBase;options.parentLayer=legendAxisGroup;composition.draw(rangeParams.rangeStart,rangeParams.rangeEnd,options)}}};_proto7.getScaleMarkerPathStr=function getScaleMarkerPathStr(oriAxisRect,valueRatio){return this.conf.legendPosition===\"bottom\"?this.getScaleMarkerPathStrH(oriAxisRect,valueRatio):this.getScaleMarkerPathStrV(oriAxisRect,valueRatio)};_proto7.getColorGradient=function getColorGradient(colorRange){return this.conf.legendPosition===\"bottom\"?this.getColorGradientH(colorRange):this.getColorGradientV(colorRange)};_proto7.getScaleMarkerPathStrV=function getScaleMarkerPathStrV(oriAxisRect,valueRatio){var axisRect=merge(oriAxisRect,{}),conf=this.conf,lineAttr=conf.line,index,ratio,length,markerStartX,covered,tickStr=_lib.BLANKSTRING,lineStr=_lib.BLANKSTRING;axisRect.y+=axisRect.r;axisRect.height-=2*axisRect.r;markerStartX=axisRect.x+axisRect.width;for(index=0,length=valueRatio.length;index<length;index++){ratio=valueRatio[index];covered=axisRect.y+ratio*axisRect.height/100;tickStr+=M+(markerStartX-lineAttr.grooveLength)+COMMA_STR+covered+L+(markerStartX+lineAttr.offset)+COMMA_STR+covered}lineStr+=M+(markerStartX+lineAttr.offset)+COMMA_STR+axisRect.y+L+(markerStartX+lineAttr.offset)+COMMA_STR+(axisRect.y+axisRect.height);return tickStr+lineStr};_proto7.getColorGradientV=function getColorGradientV(colorRange){return{axis:colorRange.getBoxFill(true),shadow:(0,_lib.toRaphaelColor)({FCcolor:{alpha:\"25,0,0\",angle:360,color:\"000000,FFFFFF,FFFFFF\",ratio:\"0,30,40\"}})}};return LegendAxis}();var Slider=function(){function Slider(sliderIndex,options,id){this.conf=options.conf;this.sliderIndex=sliderIndex;this.rangeGroup=options.sliderGroup;this._id=id;this.node=UNDEF;this.tracker=UNDEF;this.currPos=0;this.swing=[]}var _proto8=Slider.prototype;_proto8.configure=function configure(sliderIndex,options,id){this.conf=options.conf;this.sliderIndex=sliderIndex;this.rangeGroup=options.sliderGroup;this._id=id;this.currPos=0;this.swing=[]};_proto8.getType=function getType(){return\"slider\"};_proto8.getName=function getName(){return\"Slider\"};_proto8.updateSwingRange=function updateSwingRange(index,value){this.swing[+index]=value};_proto8.draw=function draw(rangeStart,scaleVal,position,options){var layer=options.parentLayer,self=this,animationManager=options.animationManager,conf=this.conf,ocConf=conf.outerCircle,icConf=conf.innerCircle,tooltext,chartConfig=animationManager.getFromEnv(\"chart\").config,ocRadius=Math.ceil(ocConf.rFactor*options.rCalcBase/2),icRadius=Math.ceil(icConf.rFactor*options.rCalcBase/2),icThickness=ocRadius-icRadius,group,toolTipController=options.gLegend.getFromEnv(\"toolTipController\"),sliderIndex=this.sliderIndex,dragAPI,strokeWidthOffset,x,y,tracker;conf.outerRadius=ocRadius;conf.innerRadius=icRadius;this._scaleVal=scaleVal;icConf.style[\"stroke-width\"]=icThickness;strokeWidthOffset=Math.ceil(ocConf.style[\"stroke-width\"]/2);icRadius+=strokeWidthOffset;group=this.node=animationManager.setAnimation({el:this.node||\"group\",attr:{name:\"fc-gl-slider\",cursor:\"pointer\",transform:\"t0,0\"},container:layer,component:gLegendRef});if(options.key===\"x\"){x=position;y=rangeStart;y+=sliderIndex?-icRadius:+icRadius}else{x=rangeStart;y=position;x+=sliderIndex?-icRadius:+icRadius}this.oCircle=animationManager.setAnimation({el:this.oCircle||\"circle\",attr:{cx:x,cy:y,r:ocRadius},css:ocConf.style,container:group,component:gLegendRef});this.iCircle=animationManager.setAnimation({el:this.iCircle||\"circle\",attr:{cx:x,cy:y,r:icRadius},css:icConf.style,container:group,component:gLegendRef});tracker=this.tracker=animationManager.setAnimation({el:this.tracker||\"circle\",attr:{cx:x,cy:y,r:ocRadius+5,fill:TRACKER_FILL,stroke:TRACKER_FILL,cursor:\"pointer\"},container:group,component:gLegendRef});group.attr({transform:options.key===\"x\"?\"t0,\"+self.currPos:\"t\"+self.currPos+\",\"+0});tooltext=chartConfig.showToolTip?scaleVal:\"\";toolTipController.enableToolTip(tracker,tooltext);this._dragAPI=dragAPI=this.getDragAPI(options.key===\"x\");tracker.undrag();tracker.drag(dragAPI.dragging,dragAPI.dragStart,dragAPI.dragEnd);return{translateAscending:ocRadius+strokeWidthOffset}};_proto8.getDragAPI=function getDragAPI(verticalDragging){var self=this,node=self.node,index=self.sliderIndex,range=self.rangeGroup,swing,lastDisplacement,timeoutId,innerRadius=self.conf.innerRadius,spaceSaved=innerRadius,isDragged;return{dragging:function dragging(event){var left,right,d,updatedText,posAfterDisplacement;event.stopPropagation();if(verticalDragging){d=event.data[1]}else{d=event.data[0]}if(index){left=swing[0]-swing[1]+spaceSaved;right=0}else{left=0;right=swing[1]-swing[0]-spaceSaved}posAfterDisplacement=self.currPos+d;if(posAfterDisplacement<left){d+=left-posAfterDisplacement}else if(posAfterDisplacement>right){d-=posAfterDisplacement-right}node.attr({transform:verticalDragging?\"t0,\"+(self.currPos+d):\"t\"+(self.currPos+d)+\",\"+0});lastDisplacement=d;timeoutId&&clearTimeout(timeoutId);timeoutId=setTimeout((function(){range.updateWhenInRest(self,self.currPos+d)}),100);updatedText=range.updateWhenInMove(self,self.currPos+d);self.conf.showTooltip&&self.tracker.data(\"__FC_tooltipText\",updatedText);isDragged=true;return true},dragStart:function dragStart(event){event.stopPropagation();swing=self.swing;isDragged=false;range.dragStarted(self)},dragEnd:function dragEnd(){var newPos;range.dragCompleted(self,isDragged,self.currPos+lastDisplacement);if(!isDragged){return}timeoutId&&clearTimeout(timeoutId);timeoutId=setTimeout((function(){range.updateWhenInRest(self,self.currPos)}),100);self.currPos+=lastDisplacement;newPos=swing[+index]+self.currPos;range.updateRange(self,newPos)}}};_proto8.dispose=function dispose(){this.node.remove();this.oCircle.remove();this.iCircle.remove();this.tracker.remove();delete this};return Slider}();var SliderGroup=function(){function SliderGroup(conf){var sliderConf=conf,options={};this._id=GL_SG1;this.conf=conf;options.conf=sliderConf;this.extremes=[];this.sliders={};this.min=UNDEF;this.max=UNDEF;options.sliderGroup=this;this.valueRange=[];this.callbacks=[];this.sliders[FORMER_SLIDER_INDEX]=new Slider(FORMER_SLIDER_INDEX,options,this._id+\"_\"+ +FORMER_SLIDER_INDEX);this.sliders[LATER_SLIDER_INDEX]=new Slider(LATER_SLIDER_INDEX,options,this._id+\"_\"+ +LATER_SLIDER_INDEX)}var _proto9=SliderGroup.prototype;_proto9.configure=function configure(conf){var sliderConf=conf,options={};this.min=UNDEF;this.max=UNDEF;this.conf=conf;options.conf=sliderConf;options.sliderGroup=this;this.sliders[FORMER_SLIDER_INDEX].configure(FORMER_SLIDER_INDEX,options,this._id+\"_\"+ +FORMER_SLIDER_INDEX);this.sliders[LATER_SLIDER_INDEX].configure(LATER_SLIDER_INDEX,options,this._id+\"_\"+ +LATER_SLIDER_INDEX)};_proto9.getType=function getType(){return\"slider\"};_proto9.getName=function getName(){return\"SliderGroup\"};_proto9.initRange=function initRange(slider,updatedRange){var sliderIndex=slider.sliderIndex;this.extremes[+sliderIndex]=updatedRange};_proto9.updateRange=function updateRange(slider,updatedRange){var sliderIndex=slider.sliderIndex,sliders=this.sliders,s=sliders[!sliderIndex];s.updateSwingRange(sliderIndex,updatedRange)};_proto9.reset=function reset(){var options={};options.conf=this.conf;options.sliderGroup=this;this.min=UNDEF;this.max=UNDEF;this.sliders[FORMER_SLIDER_INDEX].configure(FORMER_SLIDER_INDEX,options,this._id+\"_\"+ +FORMER_SLIDER_INDEX);this.sliders[LATER_SLIDER_INDEX].configure(LATER_SLIDER_INDEX,options,this._id+\"_\"+ +LATER_SLIDER_INDEX);this.draw.apply(this,this._drawParams)};_proto9.draw=function draw(rangeStart,rangeEnd,options){var sliders=this.sliders,lSlider=sliders[FORMER_SLIDER_INDEX],rSlider=sliders[LATER_SLIDER_INDEX],cRange=options.colorRange,colorRange=cRange.colorRange,oneSliderMes,icConf,ocConf,icRadius,extremesRange,mapbypercent=cRange.data.mapByPercent,numberFormatter=options.gLegend.getFromEnv(\"number-formatter\"),totalRange;this._fcChart=options.gLegend.getFromEnv(\"chart\");this.getValueFormPixel=function(valueStart,valueEnd,pixelStart,pixelEnd){var unit=(valueEnd-valueStart)/(pixelEnd-pixelStart);this.getValueFormPixel=function(pixel){return valueStart+unit*pixel}};this.updateWhenInMove=function(numberformatter,mapbypercentage){this.updateWhenInMove=function(slider,val){var extremes=this.extremes,sliderIndex=slider.sliderIndex,nVal,value;if(sliderIndex){nVal=extremes[1]-extremes[0]+val}else{nVal=val}value=this.getValueFormPixel(nVal);if(!mapbypercentage){value=numberformatter.legendValue(value)}else{value=parseFloat(value).toFixed(2)+PERCENT_STR}return value}};this._drawParams=[rangeStart,rangeEnd,options];this.updateWhenInMove(numberFormatter,mapbypercent);ocConf=lSlider.conf.outerCircle;icConf=lSlider.conf.innerCircle;icRadius=Math.ceil(icConf.rFactor*options.rCalcBase/2);icRadius+=Math.ceil(ocConf.style[\"stroke-width\"]/2);this.extremes[0]=rangeStart+icRadius;this.extremes[1]=rangeEnd-icRadius;extremesRange=this.extremes[1]-this.extremes[0];this.min=this.min?this.min:colorRange[0].value;this.max=this.max?this.max:colorRange[colorRange.length-1].value;totalRange=colorRange[colorRange.length-1].value-colorRange[0].value;lSlider.currPos=extremesRange*(this.min-colorRange[0].value)/totalRange;rSlider.currPos=extremesRange*(this.max-colorRange[0].value)/totalRange-extremesRange;oneSliderMes=lSlider.draw(rangeStart,mapbypercent?numberFormatter.legendPercentValue(this.min):numberFormatter.legendValue(this.min),options[options.key],options);oneSliderMes=rSlider.draw(rangeEnd,mapbypercent?numberFormatter.legendPercentValue(this.max):numberFormatter.legendValue(this.max),options[options.key],options);lSlider.swing=this.extremes.slice(0);rSlider.swing=this.extremes.slice(0);lSlider.swing[1]+=rSlider.currPos;rSlider.swing[0]+=lSlider.currPos;this.getValueFormPixel(colorRange[0].value,colorRange[colorRange.length-1].value,this.extremes[0],this.extremes[1]);return oneSliderMes};_proto9.updateWhenInRest=function updateWhenInRest(slider,val){var sliders=this.sliders,extremes=this.extremes,sliderIndex=slider.sliderIndex,lValue,rValue;if(sliderIndex){lValue=sliders[!sliderIndex].currPos;rValue=extremes[1]-extremes[0]+val}else{lValue=val;rValue=extremes[1]-extremes[0]+sliders[!sliderIndex].currPos}this.min=Number(this.getValueFormPixel(lValue).toFixed(2));this.max=Number(this.getValueFormPixel(rValue).toFixed(2));this.gLegend.fireEvent(\"rangeUpdated\",[{min:this.min,max:this.max}])};_proto9.dragStarted=function dragStarted(self){var sliders=this.sliders,extremes=this.extremes,conf=self.conf,chart=this._fcChart;chart.fireChartInstanceEvent(\"legendpointerdragstart\",{pointerIndex:+self.sliderIndex,pointers:[{value:this.getValueFormPixel(sliders[\"false\"].currPos)},{value:this.getValueFormPixel(extremes[1]-extremes[0]+sliders[\"true\"].currPos)}],legendPointerHeight:conf.outerRadius,legendPointerWidth:conf.innerRadius,outerRadius:conf.outerRadius,innerRadius:conf.innerRadius},[chart.id])};_proto9.dragCompleted=function dragCompleted(self,isDragged,newVal){var sliders=this.sliders,extremes=this.extremes,conf=self.conf,minValue=this.getValueFormPixel(sliders[\"false\"].currPos),maxValue=this.getValueFormPixel(extremes[1]-extremes[0]+sliders[\"true\"].currPos),chart=this._fcChart,newMinValue,newMaxValue;if(!self.sliderIndex){newMinValue=this.getValueFormPixel(newVal);newMaxValue=maxValue}else{newMinValue=minValue;newMaxValue=this.getValueFormPixel(extremes[1]-extremes[0]+newVal)}if(isDragged){chart.fireChartInstanceEvent(\"legendrangeupdated\",{previousMinValue:minValue,previousMaxValue:maxValue,minValue:newMinValue,maxValue:newMaxValue},[chart.id])}chart.fireChartInstanceEvent(\"legendpointerdragstop\",{pointerIndex:+self.sliderIndex,pointers:[{value:newMinValue},{value:newMaxValue}],legendPointerHeight:conf.outerRadius,legendPointerWidth:conf.innerRadius,outerRadius:conf.outerRadius,innerRadius:conf.innerRadius},[chart.id])};_proto9.dispose=function dispose(){this.sliders[FORMER_SLIDER_INDEX].dispose();this.sliders[LATER_SLIDER_INDEX].dispose()};return SliderGroup}();var LegendValues=function(_LegendLabels){(0,_inheritsLoose2.default)(LegendValues,_LegendLabels);function LegendValues(){var _this2;_this2=_LegendLabels.call(this,arguments[0])||this;_this2._id=GL_VALUES;_this2.node=[];return _this2}var _proto10=LegendValues.prototype;_proto10.configure=function configure(conf){this.conf=conf};_proto10.getName=function getName(){return\"LegendValues\"};_proto10.getType=function getType(){return\"legend\"};_proto10.getLogicalSpace=function getLogicalSpace(bBox,options,recalculate){var isLegendPosBottom=this.conf.legendPosition===\"bottom\",lSpace=this._lSpace,conf=this.conf,padding=conf.padding,chartConfig=options.gLegend.getFromEnv(\"chartConfig\"),cRange,smartLabel,crDataObj,smartText,index,length,valueRatio,stop,nextRefPoint,currPoint,zerothStop,labelHeights=[],leftBound,leftStop,rightBound,labelWidths=[],topBound,topStop,bottomBound,maxHeight,maxWidth,effectivePlotArea,val,dispValue,testSmartLabel,copyOfStyle,lsTexts;if(lSpace&&!recalculate){lSpace.isImpure=true;return lSpace}cRange=options.colorRange;smartLabel=options.smartLabel;crDataObj=cRange.colorRange;valueRatio=cRange.getCumulativeValueRatio();lSpace=this._lSpace={bound:{height:0,width:0},node:{logicArea:UNDEF,smartTexts:[]}};lsTexts=lSpace.node.smartTexts;effectivePlotArea=merge(bBox,{});effectivePlotArea.height-=2*padding.v;effectivePlotArea.width-=2*padding.h;effectivePlotArea.x+=padding.h;effectivePlotArea.y+=padding.v;smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);copyOfStyle=merge(conf.style,{});normalizeFontSizeAppend(this._metaStyle=copyOfStyle);smartLabel.setStyle(copyOfStyle);testSmartLabel=smartLabel.getSmartText(\"W\");length=crDataObj.length;if(isLegendPosBottom){zerothStop=stop=(valueRatio[length-1]-valueRatio[0])/2*effectivePlotArea.width/100;dispValue=crDataObj[0].displayValue;smartText=smartLabel.getSmartText(typeof dispValue!==\"string\"&&dispValue!==UNDEF&&dispValue.toString()||dispValue,zerothStop,effectivePlotArea.height);smartText.x=valueRatio[0]*effectivePlotArea.width/100;leftBound=smartText.x+smartText.width;labelHeights.push(smartText.height)}else{zerothStop=stop=(valueRatio[length-1]-valueRatio[0])/2*effectivePlotArea.height/100;smartText=smartLabel.getSmartText(crDataObj[0].displayValue,effectivePlotArea.width,zerothStop);smartText.y=valueRatio[0]*effectivePlotArea.height/100;topBound=smartText.y+smartText.width;labelWidths.push(smartText.width)}lsTexts[0]=smartText;if(isLegendPosBottom){smartText=smartLabel.getSmartText(crDataObj[length-1].displayValue,zerothStop,effectivePlotArea.height);smartText.x=valueRatio[length-1]*effectivePlotArea.width/100;rightBound=smartText.x-smartText.width;labelHeights.push(smartText.height);leftStop=leftBound}else{smartText=smartLabel.getSmartText(crDataObj[length-1].displayValue,effectivePlotArea.width,zerothStop);smartText.y=valueRatio[length-1]*effectivePlotArea.height/100;bottomBound=smartText.y-smartText.height;labelWidths.push(smartText.width);topStop=topBound}lsTexts[length-1]=smartText;for(index=1;index<length-1;index++){smartText=UNDEF;val=crDataObj[index].displayValue;if(isLegendPosBottom){nextRefPoint=index+1===length-1?rightBound:valueRatio[index+1]*effectivePlotArea.width/100;currPoint=valueRatio[index]*effectivePlotArea.width/100;stop=Math.min(currPoint-leftStop,nextRefPoint-currPoint);if(stop>1.5*testSmartLabel.width){smartText=smartLabel.getSmartText(val,2*stop,effectivePlotArea.height);smartText.x=valueRatio[index]*effectivePlotArea.width/100;leftStop=stop;labelHeights.push(smartText.height)}}else{nextRefPoint=index+1===length-1?bottomBound:valueRatio[index+1]*effectivePlotArea.height/100;currPoint=valueRatio[index]*effectivePlotArea.height/100;stop=Math.min(currPoint-topStop,nextRefPoint-currPoint);if(stop>2*testSmartLabel.height){smartText=smartLabel.getSmartText(val,effectivePlotArea.width,2*stop);smartText.y=valueRatio[index]*effectivePlotArea.height/100;topStop=stop;labelWidths.push(smartText.width)}}lsTexts[index]=smartText}if(isLegendPosBottom){maxHeight=Math.max.apply(Math,labelHeights);effectivePlotArea.height=maxHeight;bBox.height=maxHeight+2*padding.v}else{maxWidth=Math.max.apply(Math,labelWidths);effectivePlotArea.width=maxWidth;bBox.width=maxWidth+2*padding.h}lSpace.node.logicArea=effectivePlotArea;lSpace.bound=bBox;return bBox};_proto10.draw=function draw(){var conf=this.conf,isLegendPosBottom=conf.legendPosition===\"bottom\",boundStyle=conf.bound&&conf.bound.style||{stroke:\"none\"},pos={},layer,bound,legendValuesGroup,bBox,lSpace,logicArea,options,cRange,valueRatio,index,length,smartTexts,smartText,animationManager;if(arguments.length>=2&&arguments[1]){bBox=arguments[0];options=arguments[1]}else if(arguments.length>=1){options=arguments[0]}animationManager=options.animationManager;layer=options.parentLayer;cRange=options.colorRange;valueRatio=cRange.getCumulativeValueRatio();this.getLogicalSpace(bBox,options);lSpace=this._lSpace;logicArea=lSpace.node.logicArea;smartTexts=lSpace.node.smartTexts;this.group=legendValuesGroup=animationManager.setAnimation({el:this.group||\"group\",attr:{name:\"legend-values\"},container:layer,component:gLegendRef});this.bound=bound=animationManager.setAnimation({el:this.bound||\"rect\",attr:lSpace.bound,css:boundStyle,container:legendValuesGroup,component:gLegendRef});for(var i=0;i<this.node.length;i++){this.node[i].remove()}this.node=[];for(index=0,length=valueRatio.length;index<length;index++){smartText=smartTexts[index];if(!smartText){continue}if(isLegendPosBottom){pos.y=logicArea.y+smartText.height/2;if(index===length-1){pos.x=logicArea.x+smartText.x-smartText.width/2}else if(index){pos.x=logicArea.x+smartText.x}else{pos.x=logicArea.x+smartText.x+smartText.width/2}}else{pos.x=logicArea.x+smartText.width/2;if(index===length-1){pos.y=logicArea.y+smartText.y-smartText.height/2}else if(index){pos.y=logicArea.y+smartText.y}else{pos.y=logicArea.y+smartText.y+smartText.height/2}}this.node.push(animationManager.setAnimation({el:\"text\",attr:{text:smartText.text,x:pos.x,y:pos.y,lineHeight:this._metaStyle.lineHeight,fill:conf.style.fill},container:legendValuesGroup,component:gLegendRef}))}return{group:legendValuesGroup,bound:bound}};return LegendValues}(LegendLabels);var _default=GLegend;exports.default=_default;"]},"metadata":{},"sourceType":"script"}