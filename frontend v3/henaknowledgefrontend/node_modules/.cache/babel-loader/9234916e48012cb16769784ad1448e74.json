{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _componentInterface = require(\"@fusioncharts/core/src/component-interface\");\n\nvar _linearRegression = _interopRequireDefault(require(\"./linear-regression\"));\n\nvar _polynomialRegression = _interopRequireDefault(require(\"./polynomial-regression\"));\n\nvar _lib = require(\"@fusioncharts/core/src/lib\");\n\nvar _utilityFunctions = require(\"./utility-functions\");\n\nvar _dependencyManager = require(\"@fusioncharts/core/src/dependency-manager\");\n\nvar _regressionLine = _interopRequireDefault(require(\"./regression-line.animation\"));\n\nvar hideElement = function hideElement() {\n  this.hide();\n};\n\n(0, _dependencyManager.addDep)({\n  name: \"regressionLineAnimation\",\n  type: \"animationRule\",\n  extension: _regressionLine.default\n});\n\nvar RegressionLineExtension = function (_ComponentInterface) {\n  (0, _inheritsLoose2.default)(RegressionLineExtension, _ComponentInterface);\n\n  function RegressionLineExtension() {\n    var _this;\n\n    _this = _ComponentInterface.call(this) || this;\n    _this._config = {\n      regressionPoints: []\n    };\n    _this.regressionLine = [];\n    return _this;\n  }\n\n  var _proto = RegressionLineExtension.prototype;\n\n  _proto.getType = function getType() {\n    return \"extension\";\n  };\n\n  _proto.getName = function getName() {\n    return \"regression\";\n  };\n\n  _proto.configureAttributes = function configureAttributes(datasetComponent) {\n    var regressionLineExtension = this,\n        chartData = regressionLineExtension.getFromEnv(\"dataSource\").chart,\n        datasetConfig = datasetComponent.config,\n        JSONData = datasetConfig.JSONData,\n        config = regressionLineExtension._config;\n    config.regressionPoints.splice(0, config.regressionPoints.length);\n    config.showYOnX = (0, _lib.pluckNumber)(JSONData.showyonx, chartData.showyonx, 1);\n    config.regressionLineColor = (0, _lib.toRaphaelColor)((0, _lib.pluck)(JSONData.regressionlinecolor, chartData.regressionlinecolor, datasetConfig.anchorbordercolor, datasetConfig.lineColor, datasetConfig.anchorBgColor, \"fff000\"));\n    config.polynomialRegressionLineColor = (0, _lib.toRaphaelColor)((0, _lib.pluck)(JSONData.polynomialregressionlinecolor, chartData.polynomialregressionlinecolor, config.regressionLineColor));\n    config.regressionLineThickness = (0, _lib.pluckNumber)(JSONData.regressionlinethickness, chartData.regressionlinethickness, JSONData.anchorborderthickness, 1);\n    config.polynomialRegressionLineThickness = (0, _lib.pluckNumber)(JSONData.polynomialregressionlinethickness, chartData.polynomialregressionlinethickness, config.regressionLineThickness);\n    config.regressionLineAlpha = (0, _lib.pluckNumber)(JSONData.regressionlinealpha, chartData.regressionlinealpha, 100);\n    config.polynomialRegressionLineAlpha = (0, _lib.pluckNumber)(JSONData.polynomialregressionlinealpha, chartData.polynomialregressionlinealpha, config.regressionLineAlpha);\n\n    if ((0, _utilityFunctions.createLinear)(chartData, JSONData)) {\n      config.regressionPoints.push((0, _linearRegression.default)(JSONData.data, config.showYOnX));\n    }\n\n    if ((0, _utilityFunctions.createPolynomial)(chartData, JSONData)) {\n      config.regressionPoints.push((0, _polynomialRegression.default)(JSONData.data, config.showYOnX));\n    }\n  };\n\n  _proto.draw = function draw() {\n    var regression = this,\n        regressionConfig = regression._config,\n        xAxis = regression.getFromEnv(\"xAxis\"),\n        yAxis = regression.getFromEnv(\"yAxis\"),\n        chart = regression.getFromEnv(\"chart\"),\n        canvasConfig = chart.getChildren(\"canvas\")[0].config,\n        container = regression.getContainer(\"regressionlinecontainer\"),\n        animManager = regression.getFromEnv(\"animationManager\"),\n        allPoints = regressionConfig.regressionPoints,\n        oldPoints = [],\n        newPoints = [],\n        n,\n        regressionLineLinearDummy = regression.getGraphicalElement(\"regressionLineLinear\"),\n        regressionLinePolynomialDummy = regression.getGraphicalElement(\"regressionLinePolynomial\"),\n        regressionLineLinear,\n        regressionLinePolynomial,\n        isLinear,\n        attrObjLinear,\n        attrObjPoly,\n        regressionState,\n        hideFn = hideElement;\n    !regression.getLinkedParent().getState(\"visible\") && (regressionState = \"disappearing\");\n    container = regression.addContainer(\"regressionlinecontainer\", animManager.setAnimation({\n      el: container || \"group\",\n      attr: {\n        name: \"regressionlinecontainer\",\n        \"clip-rect\": [canvasConfig.canvasLeft, canvasConfig.canvasTop, canvasConfig.canvasWidth, canvasConfig.canvasHeight]\n      },\n      container: chart.getChildContainer(\"abovePlotGroup\"),\n      component: regression,\n      label: \"group\"\n    }));\n\n    for (var j = 0; j < allPoints.length; j++) {\n      var pathString = _lib.BLANKSTRING;\n      oldPoints = allPoints[j][0];\n      newPoints = allPoints[j][1];\n      n = newPoints.length;\n\n      if (oldPoints.length === 0 && newPoints.length === 0) {\n        isLinear = true;\n        pathString += \"M0,0\";\n      } else if (oldPoints.length !== 0 && newPoints.length === 0) {\n        isLinear = false;\n        pathString += \"M0,0\";\n      } else if (oldPoints.length === 0) {\n        isLinear = true;\n        pathString += \"M\" + xAxis.getPixel(newPoints[0].x) + \",\" + yAxis.getPixel(newPoints[0].y);\n        pathString += \"L\" + xAxis.getPixel(newPoints[n - 1].x) + \",\" + yAxis.getPixel(newPoints[n - 1].y);\n      } else {\n        isLinear = false;\n        pathString += \"M\" + xAxis.getPixel(newPoints[0].x) + \",\" + yAxis.getPixel(newPoints[0].y);\n        pathString += \" R\" + xAxis.getPixel(newPoints[1].x) + \",\" + yAxis.getPixel(newPoints[1].y);\n\n        for (var i = 2; i < n; i++) {\n          pathString += \" \" + xAxis.getPixel(newPoints[i].x) + \",\" + yAxis.getPixel(newPoints[i].y);\n        }\n      }\n\n      if (!isLinear) {\n        attrObjPoly = {\n          opacity: Number((0, _lib.pluck)(regressionConfig.polynomialRegressionLineAlpha, regressionConfig.regressionLineAlpha)) / 100,\n          stroke: (0, _lib.pluck)(regressionConfig.polynomialRegressionLineColor, regressionConfig.regressionLineColor),\n          \"stroke-width\": (0, _lib.pluck)(regressionConfig.polynomialRegressionLineThickness, regressionConfig.regressionLineThickness),\n          path: pathString\n        };\n      } else {\n        attrObjLinear = {\n          opacity: Number(regressionConfig.regressionLineAlpha) / 100,\n          stroke: regressionConfig.regressionLineColor,\n          \"stroke-width\": regressionConfig.regressionLineThickness,\n          path: pathString\n        };\n      }\n    }\n\n    if (regressionState !== \"disappearing\") {\n      regressionLineLinearDummy && regressionLineLinearDummy.show();\n      regressionLinePolynomialDummy && regressionLinePolynomialDummy.show();\n    }\n\n    regressionLineLinear = animManager.setAnimation({\n      el: regressionLineLinearDummy || \"path\",\n      container: container,\n      component: regression,\n      doNotRemove: true,\n      attr: !(regressionState === \"disappearing\") && attrObjLinear,\n      callback: regressionState === \"disappearing\" && hideFn,\n      label: \"path\"\n    });\n\n    if (!regressionLineLinearDummy) {\n      regression.addGraphicalElement(\"regressionLineLinear\", regressionLineLinear);\n    }\n\n    regressionLinePolynomial = animManager.setAnimation({\n      el: regressionLinePolynomialDummy || \"path\",\n      container: container,\n      component: regression,\n      doNotRemove: true,\n      attr: !(regressionState === \"disappearing\") && attrObjPoly,\n      callback: regressionState === \"disappearing\" && hideFn,\n      label: \"path\"\n    });\n\n    if (!regressionLinePolynomialDummy) {\n      regression.addGraphicalElement(\"regressionLinePolynomial\", regressionLinePolynomial);\n    }\n  };\n\n  return RegressionLineExtension;\n}(_componentInterface.ComponentInterface);\n\nexports.default = RegressionLineExtension;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/features/src/regression-extension/regression-line-extension.js"],"names":["_interopRequireDefault","require","exports","__esModule","default","_inheritsLoose2","_componentInterface","_linearRegression","_polynomialRegression","_lib","_utilityFunctions","_dependencyManager","_regressionLine","hideElement","hide","addDep","name","type","extension","RegressionLineExtension","_ComponentInterface","_this","call","_config","regressionPoints","regressionLine","_proto","prototype","getType","getName","configureAttributes","datasetComponent","regressionLineExtension","chartData","getFromEnv","chart","datasetConfig","config","JSONData","splice","length","showYOnX","pluckNumber","showyonx","regressionLineColor","toRaphaelColor","pluck","regressionlinecolor","anchorbordercolor","lineColor","anchorBgColor","polynomialRegressionLineColor","polynomialregressionlinecolor","regressionLineThickness","regressionlinethickness","anchorborderthickness","polynomialRegressionLineThickness","polynomialregressionlinethickness","regressionLineAlpha","regressionlinealpha","polynomialRegressionLineAlpha","polynomialregressionlinealpha","createLinear","push","data","createPolynomial","draw","regression","regressionConfig","xAxis","yAxis","canvasConfig","getChildren","container","getContainer","animManager","allPoints","oldPoints","newPoints","n","regressionLineLinearDummy","getGraphicalElement","regressionLinePolynomialDummy","regressionLineLinear","regressionLinePolynomial","isLinear","attrObjLinear","attrObjPoly","regressionState","hideFn","getLinkedParent","getState","addContainer","setAnimation","el","attr","canvasLeft","canvasTop","canvasWidth","canvasHeight","getChildContainer","component","label","j","pathString","BLANKSTRING","getPixel","x","y","i","opacity","Number","stroke","path","show","doNotRemove","callback","addGraphicalElement","ComponentInterface"],"mappings":"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","sourcesContent":["\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=void 0;var _inheritsLoose2=_interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));var _componentInterface=require(\"@fusioncharts/core/src/component-interface\");var _linearRegression=_interopRequireDefault(require(\"./linear-regression\"));var _polynomialRegression=_interopRequireDefault(require(\"./polynomial-regression\"));var _lib=require(\"@fusioncharts/core/src/lib\");var _utilityFunctions=require(\"./utility-functions\");var _dependencyManager=require(\"@fusioncharts/core/src/dependency-manager\");var _regressionLine=_interopRequireDefault(require(\"./regression-line.animation\"));var hideElement=function hideElement(){this.hide()};(0,_dependencyManager.addDep)({name:\"regressionLineAnimation\",type:\"animationRule\",extension:_regressionLine.default});var RegressionLineExtension=function(_ComponentInterface){(0,_inheritsLoose2.default)(RegressionLineExtension,_ComponentInterface);function RegressionLineExtension(){var _this;_this=_ComponentInterface.call(this)||this;_this._config={regressionPoints:[]};_this.regressionLine=[];return _this}var _proto=RegressionLineExtension.prototype;_proto.getType=function getType(){return\"extension\"};_proto.getName=function getName(){return\"regression\"};_proto.configureAttributes=function configureAttributes(datasetComponent){var regressionLineExtension=this,chartData=regressionLineExtension.getFromEnv(\"dataSource\").chart,datasetConfig=datasetComponent.config,JSONData=datasetConfig.JSONData,config=regressionLineExtension._config;config.regressionPoints.splice(0,config.regressionPoints.length);config.showYOnX=(0,_lib.pluckNumber)(JSONData.showyonx,chartData.showyonx,1);config.regressionLineColor=(0,_lib.toRaphaelColor)((0,_lib.pluck)(JSONData.regressionlinecolor,chartData.regressionlinecolor,datasetConfig.anchorbordercolor,datasetConfig.lineColor,datasetConfig.anchorBgColor,\"fff000\"));config.polynomialRegressionLineColor=(0,_lib.toRaphaelColor)((0,_lib.pluck)(JSONData.polynomialregressionlinecolor,chartData.polynomialregressionlinecolor,config.regressionLineColor));config.regressionLineThickness=(0,_lib.pluckNumber)(JSONData.regressionlinethickness,chartData.regressionlinethickness,JSONData.anchorborderthickness,1);config.polynomialRegressionLineThickness=(0,_lib.pluckNumber)(JSONData.polynomialregressionlinethickness,chartData.polynomialregressionlinethickness,config.regressionLineThickness);config.regressionLineAlpha=(0,_lib.pluckNumber)(JSONData.regressionlinealpha,chartData.regressionlinealpha,100);config.polynomialRegressionLineAlpha=(0,_lib.pluckNumber)(JSONData.polynomialregressionlinealpha,chartData.polynomialregressionlinealpha,config.regressionLineAlpha);if((0,_utilityFunctions.createLinear)(chartData,JSONData)){config.regressionPoints.push((0,_linearRegression.default)(JSONData.data,config.showYOnX))}if((0,_utilityFunctions.createPolynomial)(chartData,JSONData)){config.regressionPoints.push((0,_polynomialRegression.default)(JSONData.data,config.showYOnX))}};_proto.draw=function draw(){var regression=this,regressionConfig=regression._config,xAxis=regression.getFromEnv(\"xAxis\"),yAxis=regression.getFromEnv(\"yAxis\"),chart=regression.getFromEnv(\"chart\"),canvasConfig=chart.getChildren(\"canvas\")[0].config,container=regression.getContainer(\"regressionlinecontainer\"),animManager=regression.getFromEnv(\"animationManager\"),allPoints=regressionConfig.regressionPoints,oldPoints=[],newPoints=[],n,regressionLineLinearDummy=regression.getGraphicalElement(\"regressionLineLinear\"),regressionLinePolynomialDummy=regression.getGraphicalElement(\"regressionLinePolynomial\"),regressionLineLinear,regressionLinePolynomial,isLinear,attrObjLinear,attrObjPoly,regressionState,hideFn=hideElement;!regression.getLinkedParent().getState(\"visible\")&&(regressionState=\"disappearing\");container=regression.addContainer(\"regressionlinecontainer\",animManager.setAnimation({el:container||\"group\",attr:{name:\"regressionlinecontainer\",\"clip-rect\":[canvasConfig.canvasLeft,canvasConfig.canvasTop,canvasConfig.canvasWidth,canvasConfig.canvasHeight]},container:chart.getChildContainer(\"abovePlotGroup\"),component:regression,label:\"group\"}));for(var j=0;j<allPoints.length;j++){var pathString=_lib.BLANKSTRING;oldPoints=allPoints[j][0];newPoints=allPoints[j][1];n=newPoints.length;if(oldPoints.length===0&&newPoints.length===0){isLinear=true;pathString+=\"M0,0\"}else if(oldPoints.length!==0&&newPoints.length===0){isLinear=false;pathString+=\"M0,0\"}else if(oldPoints.length===0){isLinear=true;pathString+=\"M\"+xAxis.getPixel(newPoints[0].x)+\",\"+yAxis.getPixel(newPoints[0].y);pathString+=\"L\"+xAxis.getPixel(newPoints[n-1].x)+\",\"+yAxis.getPixel(newPoints[n-1].y)}else{isLinear=false;pathString+=\"M\"+xAxis.getPixel(newPoints[0].x)+\",\"+yAxis.getPixel(newPoints[0].y);pathString+=\" R\"+xAxis.getPixel(newPoints[1].x)+\",\"+yAxis.getPixel(newPoints[1].y);for(var i=2;i<n;i++){pathString+=\" \"+xAxis.getPixel(newPoints[i].x)+\",\"+yAxis.getPixel(newPoints[i].y)}}if(!isLinear){attrObjPoly={opacity:Number((0,_lib.pluck)(regressionConfig.polynomialRegressionLineAlpha,regressionConfig.regressionLineAlpha))/100,stroke:(0,_lib.pluck)(regressionConfig.polynomialRegressionLineColor,regressionConfig.regressionLineColor),\"stroke-width\":(0,_lib.pluck)(regressionConfig.polynomialRegressionLineThickness,regressionConfig.regressionLineThickness),path:pathString}}else{attrObjLinear={opacity:Number(regressionConfig.regressionLineAlpha)/100,stroke:regressionConfig.regressionLineColor,\"stroke-width\":regressionConfig.regressionLineThickness,path:pathString}}}if(regressionState!==\"disappearing\"){regressionLineLinearDummy&&regressionLineLinearDummy.show();regressionLinePolynomialDummy&&regressionLinePolynomialDummy.show()}regressionLineLinear=animManager.setAnimation({el:regressionLineLinearDummy||\"path\",container:container,component:regression,doNotRemove:true,attr:!(regressionState===\"disappearing\")&&attrObjLinear,callback:regressionState===\"disappearing\"&&hideFn,label:\"path\"});if(!regressionLineLinearDummy){regression.addGraphicalElement(\"regressionLineLinear\",regressionLineLinear)}regressionLinePolynomial=animManager.setAnimation({el:regressionLinePolynomialDummy||\"path\",container:container,component:regression,doNotRemove:true,attr:!(regressionState===\"disappearing\")&&attrObjPoly,callback:regressionState===\"disappearing\"&&hideFn,label:\"path\"});if(!regressionLinePolynomialDummy){regression.addGraphicalElement(\"regressionLinePolynomial\",regressionLinePolynomial)}};return RegressionLineExtension}(_componentInterface.ComponentInterface);exports.default=RegressionLineExtension;"]},"metadata":{},"sourceType":"script"}