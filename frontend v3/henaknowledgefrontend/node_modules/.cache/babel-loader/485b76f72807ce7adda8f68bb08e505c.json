{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.computeGridLayout = computeGridLayout;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _utils = require(\"../utils\");\n\nvar _trackSizing = _interopRequireDefault(require(\"./track-sizing\"));\n\nvar _constants = require(\"../utils/constants\");\n\nvar _repeatResolver = require(\"./helpers/repeatResolver\");\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar validSizes = [\"auto\", \"none\"],\n    minmaxRegex = /minmax/,\n    templateSplitRegex = /(?:[^\\s[\\]()]+|\\[[^[\\]]*\\]|\\([^()]*\\))+/g,\n    getUCFirstString = function getUCFirstString(str) {\n  return str.charAt(0).toUpperCase() + str.slice(1);\n},\n    validNestedGrid = function validNestedGrid(tree) {\n  var _ref = tree.style || {},\n      gridTemplateColumns = _ref.gridTemplateColumns,\n      gridTemplateRows = _ref.gridTemplateRows;\n\n  if (/repeat\\(/g.test(gridTemplateColumns) || /repeat\\(/g.test(gridTemplateRows)) {\n    return false;\n  }\n\n  return true;\n},\n    parseRepeatFunction = function parseRepeatFunction(repeatStr) {\n  return repeatStr.split(/\\(|\\)/g)[1].split(\",\").map(function (arg) {\n    return arg && arg.trim();\n  });\n},\n    getCleanSize = function getCleanSize(size) {\n  size = size.trim();\n  if (size === \"auto\") return size;\n  if (!isNaN(+size)) return +size;\n\n  if (minmaxRegex.test(size)) {\n    var sizeAr = size.split(/\\(|\\)/g)[1].split(\",\");\n    return [sizeAr[0].trim(), sizeAr[1].trim()];\n  }\n\n  return size;\n},\n    getItemSize = function getItemSize(items, dimension) {\n  var filteredItems,\n      templateCol,\n      parsedDim = getUCFirstString(dimension),\n      size,\n      trackDir = dimension === \"width\" ? \"col\" : \"row\";\n  filteredItems = items.map(function (item) {\n    templateCol = item.style[\"gridTemplate\" + getUCFirstString(trackDir === \"col\" ? \"columns\" : \"rows\")];\n\n    if ((0, _utils.getDisplayProperty)(item) === \"grid\" && /repeat\\(/g.test(templateCol)) {\n      size = parseRepeatFunction(templateCol)[1];\n    } else {\n      size = item.style[\"min\" + parsedDim + \"Contribution\"] || item.style[dimension] || \"auto\";\n    }\n\n    return {\n      start: item[trackDir + \"Start\"],\n      end: item[trackDir + \"End\"],\n      size: size\n    };\n  });\n  return filteredItems;\n},\n    updateMatrix = function updateMatrix(grid, start, end) {\n  var i, j;\n\n  for (i = start.x; i < end.x; i++) {\n    for (j = start.y; j < end.y; j++) {\n      grid[i][j] = true;\n    }\n  }\n},\n    resolveItemStyle = function resolveItemStyle(itemStyle, mapping) {\n  var gridRowStart = itemStyle.gridRowStart,\n      gridRowEnd = itemStyle.gridRowEnd,\n      gridColumnStart = itemStyle.gridColumnStart,\n      gridColumnEnd = itemStyle.gridColumnEnd;\n\n  if (itemStyle.gridColumn) {\n    var _itemStyle$gridColumn = itemStyle.gridColumn.split(\"/\").map(function (line) {\n      return line.trim();\n    });\n\n    gridColumnStart = _itemStyle$gridColumn[0];\n    gridColumnEnd = _itemStyle$gridColumn[1];\n    gridColumnStart = mapping ? mapping.col.nameToLineMap[gridColumnStart] : 1;\n\n    if (/span\\s+\\d+/g.test(gridColumnEnd)) {\n      gridColumnEnd = gridColumnStart + +gridColumnEnd.match(/span\\s+(\\d+)/)[1];\n    }\n\n    gridColumnEnd = mapping ? mapping.col.nameToLineMap[gridColumnEnd] : 1;\n  }\n\n  if (itemStyle.gridRow) {\n    var _itemStyle$gridRow$sp = itemStyle.gridRow.split(\"/\").map(function (line) {\n      return line.trim();\n    });\n\n    gridRowStart = _itemStyle$gridRow$sp[0];\n    gridRowEnd = _itemStyle$gridRow$sp[1];\n    gridRowStart = mapping ? mapping.row.nameToLineMap[gridRowStart] : 1;\n\n    if (/span\\s\\d+/g.test(gridRowEnd)) {\n      gridRowEnd = gridRowStart + +gridRowEnd.match(/span\\s(\\d+)/)[1];\n    }\n\n    gridRowEnd = mapping ? mapping.row.nameToLineMap[gridRowEnd] : 1;\n  }\n\n  return {\n    gridRowStart: gridRowStart,\n    gridRowEnd: gridRowEnd,\n    gridColumnStart: gridColumnStart,\n    gridColumnEnd: gridColumnEnd\n  };\n},\n    getMaxRowColumn = function getMaxRowColumn(items) {\n  var maxRow = 1,\n      maxColumn = 1,\n      itemStyle;\n  items.forEach(function (item) {\n    itemStyle = resolveItemStyle(item.style);\n    maxColumn = Math.max(isNaN(+itemStyle.gridColumnStart) ? 0 : +itemStyle.gridColumnStart, maxColumn, isNaN(+itemStyle.gridColumnEnd - 1) ? 0 : +itemStyle.gridColumnEnd - 1);\n    maxRow = Math.max(isNaN(+itemStyle.gridRowStart) ? 0 : +itemStyle.gridRowStart, maxRow, isNaN(+itemStyle.gridRowEnd - 1) ? 0 : +itemStyle.gridRowEnd - 1);\n  });\n  return {\n    maxRow: maxRow,\n    maxColumn: maxColumn\n  };\n};\n\nvar Grid = function () {\n  function Grid() {\n    this.setup();\n  }\n\n  var _proto = Grid.prototype;\n\n  _proto.setup = function setup() {\n    this._tsa = new _trackSizing.default();\n    this.props = {};\n    this._config = {\n      mapping: {}\n    };\n    return this;\n  };\n\n  _proto.set = function set(key, value) {\n    this.props[key] = value;\n    return this;\n  };\n\n  _proto.getProps = function getProps(key) {\n    return this.props[key];\n  };\n\n  _proto.getConfig = function getConfig(key) {\n    return this._config[key];\n  };\n\n  _proto.compute = function compute(_domTree) {\n    var domTree = _domTree || this.props.domTree;\n\n    this._sanitizeTracks(domTree)._sanitizeItems(domTree)._inflateTracks()._assignCoordinatesToCells(domTree);\n  };\n\n  _proto._sanitizeTracks = function _sanitizeTracks(_domTree) {\n    if (_domTree === void 0) {\n      _domTree = {};\n    }\n\n    var style = _domTree.style,\n        gridTemplateRows = style.gridTemplateRows,\n        gridTemplateColumns = style.gridTemplateColumns,\n        config = this._config,\n        trackInfo,\n        _getMaxRowColumn = getMaxRowColumn(_domTree.children),\n        maxColumn = _getMaxRowColumn.maxColumn,\n        maxRow = _getMaxRowColumn.maxRow;\n\n    this.set(\"maxTracks\", maxRow);\n    trackInfo = this._fetchTrackInformation(gridTemplateRows);\n    config.mapping.row = {\n      nameToLineMap: trackInfo.nameToLineMap,\n      lineToNameMap: trackInfo.lineToNameMap\n    };\n    config.rowTracks = trackInfo.tracks;\n    this.set(\"maxTracks\", maxColumn);\n    trackInfo = this._fetchTrackInformation(gridTemplateColumns);\n    config.mapping.col = {\n      nameToLineMap: trackInfo.nameToLineMap,\n      lineToNameMap: trackInfo.lineToNameMap\n    };\n    config.colTracks = trackInfo.tracks;\n    return this;\n  };\n\n  _proto._fetchTrackInformation = function _fetchTrackInformation(tracks) {\n    if (tracks === void 0) {\n      tracks = \"none\";\n    }\n\n    var i,\n        len,\n        splittedTrackInfo = tracks.match(templateSplitRegex),\n        nameList,\n        sizeList,\n        sanitizedTracks = [{}],\n        startLineNames,\n        endLineNames,\n        nameToLineMap = {},\n        lineToNameMap = {};\n    nameList = splittedTrackInfo.filter(function (track) {\n      if (track && typeof track === \"string\" && track.length) {\n        len = track.length;\n\n        if (track[0] === \"[\" && track[len - 1] === \"]\") {\n          return true;\n        }\n\n        return false;\n      }\n\n      return true;\n    });\n    sizeList = splittedTrackInfo.filter(function (size) {\n      if (!size) return false;\n      len = (size + \"\").toLowerCase().replace(/px|fr/, \"\");\n\n      if (validSizes.indexOf(len) >= 0 || minmaxRegex.test(len) || !isNaN(len)) {\n        return true;\n      }\n\n      return false;\n    }).map(function (size) {\n      return getCleanSize(size);\n    });\n    len = sizeList.length;\n\n    if (tracks === \"none\") {\n      len = this.getProps(\"maxTracks\");\n    }\n\n    for (i = 0; i < len; i++) {\n      startLineNames = nameList[i] && nameList[i].replace(/\\[|\\]/g, \"\").split(\" \").filter(function (name) {\n        return name.length;\n      }).map(function (name) {\n        return name.trim();\n      }) || [i + 1 + \"\"];\n      endLineNames = nameList[i + 1] && nameList[i + 1].replace(/\\[|\\]/g, \"\").split(\" \").filter(function (name) {\n        return name.length;\n      }).map(function (name) {\n        return name.trim();\n      }) || [i + 2 + \"\"];\n      sanitizedTracks.push({\n        start: i + 1,\n        end: i + 2,\n        size: sizeList[i] || \"auto\"\n      });\n      lineToNameMap[i + 1] = startLineNames;\n      lineToNameMap[i + 2] = endLineNames;\n      startLineNames.forEach(function (name) {\n        return nameToLineMap[name] = i + 1;\n      });\n      endLineNames.forEach(function (name) {\n        return nameToLineMap[name] = i + 2;\n      });\n      nameToLineMap[i + 1] = i + 1;\n      nameToLineMap[i + 2] = i + 2;\n    }\n\n    return {\n      tracks: sanitizedTracks,\n      nameToLineMap: nameToLineMap,\n      lineToNameMap: lineToNameMap\n    };\n  };\n\n  _proto._sanitizeItems = function _sanitizeItems(_domTree) {\n    var domTree = _domTree || this.props.domTree,\n        items = domTree.children || [],\n        mapping = this._config.mapping,\n        gridAutoFlow = domTree.style.gridAutoFlow || \"row\",\n        rowNum = Object.keys(mapping.row.lineToNameMap).length,\n        colNum = Object.keys(mapping.col.lineToNameMap).length,\n        sanitizedItems = [],\n        autoFlowItems = [],\n        itemStyle,\n        gridMatrix = [[]],\n        freeCells = [],\n        cell,\n        item,\n        extraRows,\n        i,\n        j,\n        len;\n\n    for (i = 1; i <= rowNum; i++) {\n      gridMatrix.push([]);\n    }\n\n    for (i = 0, len = items.length; i < len; i++) {\n      itemStyle = resolveItemStyle(items[i].style, mapping);\n      sanitizedItems.push(_objectSpread(_objectSpread({}, items[i]), {}, {\n        rowStart: mapping.row.nameToLineMap[itemStyle.gridRowStart],\n        rowEnd: mapping.row.nameToLineMap[itemStyle.gridRowEnd],\n        colStart: mapping.col.nameToLineMap[itemStyle.gridColumnStart],\n        colEnd: mapping.col.nameToLineMap[itemStyle.gridColumnEnd]\n      }));\n      item = sanitizedItems[i];\n      updateMatrix(gridMatrix, {\n        x: item.rowStart,\n        y: item.colStart\n      }, {\n        x: item.rowEnd,\n        y: item.colEnd\n      });\n    }\n\n    autoFlowItems = sanitizedItems.filter(function (sanitizedItem) {\n      return !sanitizedItem.colStart || !sanitizedItem.rowStart;\n    });\n\n    if (autoFlowItems) {\n      if (gridAutoFlow === \"row\") {\n        for (i = 1; i < rowNum; i++) {\n          for (j = 1; j < colNum; j++) {\n            if (!gridMatrix[i][j]) {\n              freeCells.push({\n                row: i,\n                col: j\n              });\n            }\n          }\n        }\n\n        while (autoFlowItems.length && freeCells.length) {\n          item = autoFlowItems.shift();\n          cell = freeCells.shift();\n          item.rowStart = cell.row;\n          item.colStart = cell.col;\n          item.rowEnd = cell.row + 1;\n          item.colEnd = cell.col + 1;\n        }\n\n        extraRows = Math.ceil(autoFlowItems.length / colNum);\n\n        if (extraRows) {\n          while (extraRows--) {\n            domTree.style.gridTemplateRows += \"auto \";\n            mapping.row.nameToLineMap[rowNum + 1] = rowNum + 1;\n            mapping.row.nameToLineMap[rowNum + 2] = rowNum + 2;\n            rowNum++;\n            gridMatrix.push([]);\n          }\n\n          domTree.style.gridTemplateRows = domTree.style.gridTemplateRows.trim();\n          freeCells = [];\n\n          for (i = 1; i <= rowNum; i++) {\n            for (j = 1; j <= colNum; j++) {\n              if (!gridMatrix[i][j]) {\n                freeCells.push({\n                  row: i,\n                  col: j\n                });\n              }\n            }\n          }\n\n          while (autoFlowItems.length) {\n            item = autoFlowItems.shift();\n            cell = freeCells.shift();\n            item.rowStart = cell.row;\n            item.colStart = cell.col;\n            item.rowEnd = cell.row + 1;\n            item.colEnd = cell.col + 1;\n          }\n        }\n      }\n    }\n\n    this._config.sanitizedItems = sanitizedItems;\n    return this;\n  };\n\n  _proto._inflateTracks = function _inflateTracks() {\n    var _this$_config = this._config,\n        sanitizedItems = _this$_config.sanitizedItems,\n        colTracks = _this$_config.colTracks,\n        rowTracks = _this$_config.rowTracks,\n        sizedTracks,\n        minHeightContribution = 0,\n        minWidthContribution = 0,\n        domTree = this.props.domTree,\n        _ref2 = domTree.style || {},\n        paddingStart = _ref2.paddingStart,\n        paddingEnd = _ref2.paddingEnd,\n        paddingTop = _ref2.paddingTop,\n        paddingBottom = _ref2.paddingBottom,\n        width = _ref2.width,\n        height = _ref2.height,\n        tsa = new _trackSizing.default();\n\n    if (!isNaN(+width)) {\n      width -= paddingStart + paddingEnd;\n    }\n\n    sizedTracks = tsa.clear().set(\"tracks\", colTracks).set(\"items\", getItemSize(sanitizedItems, \"width\")).set(\"containerSize\", width || \"auto\").resolveTracks();\n    colTracks.forEach(function (track, index) {\n      track.calculatedStyle = sizedTracks[index];\n      minWidthContribution += sizedTracks[index].baseSize || 0;\n    });\n\n    this._solveUnresolvedChildren();\n\n    if (!isNaN(+height)) {\n      height -= paddingTop + paddingBottom;\n    }\n\n    sizedTracks = tsa.clear().set(\"tracks\", rowTracks).set(\"items\", getItemSize(sanitizedItems, \"height\")).set(\"containerSize\", height || \"auto\").resolveTracks();\n    rowTracks.forEach(function (track, index) {\n      track.calculatedStyle = sizedTracks[index];\n      minHeightContribution += sizedTracks[index].baseSize || 0;\n    });\n    domTree.style.minHeightContribution = minHeightContribution;\n    domTree.style.minWidthContribution = minWidthContribution;\n    return this;\n  };\n\n  _proto._solveUnresolvedChildren = function _solveUnresolvedChildren(_domTree) {\n    var domTree = _domTree || this.props.domTree,\n        childrenWithRepeatConfiguration = (domTree.unResolvedChildren || []).filter(function (child) {\n      return /repeat\\(/g.test(child.style.gridTemplateColumns) || /repeat\\(/g.test(child.style.gridTemplateRows);\n    }),\n        _this$_config2 = this._config,\n        colTracks = _this$_config2.colTracks,\n        mapping = _this$_config2.mapping,\n        parentReference = this.getProps(\"parent\"),\n        colTrackDp = [0],\n        resolvedTracks,\n        i,\n        len,\n        trackWidth,\n        parentInfo,\n        parsedWidthOfItem,\n        colStart,\n        colEnd;\n\n    if (!childrenWithRepeatConfiguration.length) {\n      return this;\n    }\n\n    for (i = 1, len = colTracks.length; i < len; i++) {\n      colTrackDp[i] = colTrackDp[i - 1] + colTracks[i].calculatedStyle.baseSize;\n    }\n\n    childrenWithRepeatConfiguration.forEach(function (child) {\n      parsedWidthOfItem = parseRepeatFunction(child.style.gridTemplateColumns)[1];\n      colStart = mapping.col.nameToLineMap[child.style.gridColumnStart];\n      colEnd = mapping.col.nameToLineMap[child.style.gridColumnEnd];\n      trackWidth = colTrackDp[colEnd - 1] - colTrackDp[colStart - 1];\n      parentInfo = {\n        itemWidth: parsedWidthOfItem,\n        width: trackWidth\n      };\n      resolvedTracks = (0, _repeatResolver.repeatResolver)(child, parentInfo);\n      child.style.gridTemplateColumns = resolvedTracks.gridTemplateColumns;\n      child.style.gridTemplateRows = resolvedTracks.gridTemplateRows;\n      parentReference.gridLayoutEngine(child);\n    });\n    return this;\n  };\n\n  _proto._assignCoordinatesToCells = function _assignCoordinatesToCells(_domTree) {\n    var domTree = _domTree || this.props.domTree,\n        _this$_config3 = this._config,\n        sanitizedItems = _this$_config3.sanitizedItems,\n        rowTracks = _this$_config3.rowTracks,\n        colTracks = _this$_config3.colTracks,\n        item,\n        len,\n        i,\n        _domTree$style = domTree.style,\n        justifyItems = _domTree$style.justifyItems,\n        alignItems = _domTree$style.alignItems,\n        paddingStart = _domTree$style.paddingStart,\n        paddingTop = _domTree$style.paddingTop,\n        trackWidth,\n        trackHeight,\n        width,\n        height,\n        x,\n        y,\n        rowTrackdp = [paddingStart],\n        colTrackdp = [paddingTop];\n\n    for (i = 1, len = rowTracks.length; i < len; i++) {\n      rowTrackdp[i] = rowTrackdp[i - 1] + rowTracks[i].calculatedStyle.baseSize;\n    }\n\n    for (i = 1, len = colTracks.length; i < len; i++) {\n      colTrackdp[i] = colTrackdp[i - 1] + colTracks[i].calculatedStyle.baseSize;\n    }\n\n    domTree.layout = {\n      x: 0,\n      y: 0,\n      width: isNaN(domTree.style.width) ? colTrackdp[colTrackdp.length - 1] : domTree.style.width,\n      height: isNaN(domTree.style.height) ? rowTrackdp[rowTrackdp.length - 1] : domTree.style.height\n    };\n    (domTree.children || []).forEach(function (child, index) {\n      item = sanitizedItems[index];\n      trackWidth = colTrackdp[item.colEnd - 1] - colTrackdp[item.colStart - 1];\n      trackHeight = rowTrackdp[item.rowEnd - 1] - rowTrackdp[item.rowStart - 1];\n      width = isNaN(+child.style.width) ? trackWidth : +child.style.width;\n      height = isNaN(+child.style.height) ? trackHeight : +child.style.height;\n\n      switch (justifyItems || child.style.justifySelf) {\n        case _constants.CENTER:\n          x = colTrackdp[item.colStart - 1] + trackWidth / 2 - width / 2;\n          break;\n\n        case _constants.END:\n          x = colTrackdp[item.colEnd - 1] - width;\n          break;\n\n        case _constants.STRETCH:\n          width = trackWidth;\n          x = colTrackdp[item.colStart - 1];\n          break;\n\n        default:\n          x = colTrackdp[item.colStart - 1];\n      }\n\n      switch (alignItems || child.style.alignSelf) {\n        case _constants.CENTER:\n          y = rowTrackdp[item.rowStart - 1] + trackHeight / 2 - height / 2;\n          break;\n\n        case _constants.END:\n          y = rowTrackdp[item.rowEnd - 1] - height;\n          break;\n\n        case _constants.STRETCH:\n          height = trackHeight;\n          y = rowTrackdp[item.rowStart - 1];\n          break;\n\n        default:\n          y = rowTrackdp[item.rowStart - 1];\n      }\n\n      x += (0, _utils.pluckNumber)(item.style.paddingStart, item.style.padding, 0);\n      y += (0, _utils.pluckNumber)(item.style.paddingTop, item.style.padding, 0);\n      child.layout = {\n        x: x,\n        y: y,\n        x2: x + width,\n        y2: y + height,\n        width: width,\n        height: height\n      };\n    });\n    return this;\n  };\n\n  return Grid;\n}();\n\nvar replaceWithAbsValue = function replaceWithAbsValue(styleTrack, calculatedTrack) {\n  if (styleTrack === void 0) {\n    styleTrack = \"\";\n  }\n\n  var trackSplitAr = (styleTrack.match(templateSplitRegex) || []).filter(function (track) {\n    return track && !!track.trim();\n  }),\n      trackWithAbsValue = \"\",\n      counter = 1;\n\n  if (trackSplitAr.length && !/repeat\\(/.test(styleTrack)) {\n    trackSplitAr.forEach(function (track) {\n      if (validSizes.indexOf(track) > -1 || /[0-9]fr/.test(track) || minmaxRegex.test(track) || !isNaN(track)) {\n        trackWithAbsValue += calculatedTrack[counter].calculatedStyle.baseSize + \" \";\n        counter++;\n      } else {\n        trackWithAbsValue += track + \" \";\n      }\n    });\n  } else {\n    calculatedTrack.forEach(function (track) {\n      if (isNaN(track.calculatedStyle.baseSize)) return;\n      trackWithAbsValue += track.calculatedStyle.baseSize + \" \";\n    });\n  }\n\n  return trackWithAbsValue.trim();\n},\n    updateDomTreeWithResolvedValues = function updateDomTreeWithResolvedValues(domTree, grid) {\n  var containerStyle = domTree.style,\n      rowTracks = grid.getConfig(\"rowTracks\"),\n      colTracks = grid.getConfig(\"colTracks\"),\n      mapping = grid.getConfig(\"mapping\"),\n      gridTemplateRows = containerStyle.gridTemplateRows,\n      gridTemplateColumns = containerStyle.gridTemplateColumns,\n      child,\n      i,\n      j,\n      len,\n      rowTrackSum,\n      colTrackSum,\n      rowStart,\n      rowEnd,\n      colStart,\n      colEnd;\n  domTree.style.gridTemplateRows = replaceWithAbsValue(gridTemplateRows, rowTracks);\n  domTree.style.gridTemplateColumns = replaceWithAbsValue(gridTemplateColumns, colTracks);\n\n  for (i = 0, len = (domTree.children || []).length; i < len; i++) {\n    child = domTree.children[i];\n\n    if ((0, _utils.getDisplayProperty)(child)) {\n      child.style.gridTemplateColumns = child.userGivenStyles.gridTemplateColumns;\n      child.style.gridTemplateRows = child.userGivenStyles.gridTemplateRows;\n\n      if (isNaN(child.userGivenStyles.width)) {\n        colStart = child.style.gridColumnStart;\n        colEnd = child.style.gridColumnEnd;\n        colStart = mapping.col.nameToLineMap[colStart];\n        colEnd = mapping.col.nameToLineMap[colEnd];\n\n        for (j = colStart, colTrackSum = 0; j < colEnd; j++) {\n          colTrackSum += colTracks[j].calculatedStyle.baseSize;\n        }\n\n        child.style.width = colTrackSum;\n      }\n\n      if (isNaN(child.userGivenStyles.height)) {\n        rowStart = child.style.gridRowStart;\n        rowEnd = child.style.gridRowEnd;\n        rowStart = mapping.row.nameToLineMap[rowStart];\n        rowEnd = mapping.row.nameToLineMap[rowEnd];\n\n        for (j = rowStart, rowTrackSum = 0; j < rowEnd; j++) {\n          rowTrackSum += rowTracks[j].calculatedStyle.baseSize;\n        }\n\n        child.style.height = rowTrackSum;\n      }\n    }\n  }\n\n  return domTree;\n};\n\nfunction computeGridLayout(domTree, count) {\n  if (count === void 0) {\n    count = 1;\n  }\n\n  var i,\n      len,\n      style = domTree.style,\n      child,\n      grid;\n\n  if (!domTree || !domTree.style) {\n    return;\n  }\n\n  if (!domTree.userGivenStyles) {\n    domTree.style.width = isNaN(domTree.style.width) ? \"auto\" : domTree.style.width;\n    domTree.style.height = isNaN(domTree.style.height) ? \"auto\" : domTree.style.height;\n    style.paddingStart = (0, _utils.pluckNumber)(style.paddingStart, style.padding, 0);\n    style.paddingEnd = (0, _utils.pluckNumber)(style.paddingEnd, style.padding, 0);\n    style.paddingTop = (0, _utils.pluckNumber)(style.paddingTop, style.padding, 0);\n    style.paddingBottom = (0, _utils.pluckNumber)(style.paddingBottom, style.padding, 0);\n    domTree.userGivenStyles = {\n      gridTemplateColumns: domTree.style.gridTemplateColumns,\n      gridTemplateRows: domTree.style.gridTemplateRows,\n      width: domTree.style.width,\n      height: domTree.style.height\n    };\n  }\n\n  domTree.unResolvedChildren = [];\n\n  for (i = 0, len = domTree.children && domTree.children.length; i < len; i++) {\n    child = domTree.children[i];\n\n    if ((0, _utils.getDisplayProperty)(child)) {\n      if (validNestedGrid(child)) {\n        this.compute(child);\n      } else {\n        domTree.unResolvedChildren.push(child);\n      }\n    }\n  }\n\n  grid = new Grid();\n  grid.set(\"domTree\", domTree).set(\"parent\", this).compute();\n\n  if (count < 2) {\n    this.gridLayoutEngine(updateDomTreeWithResolvedValues(domTree, grid), 2);\n  }\n\n  return domTree;\n}","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/core/src/_internal/vendors/faberjs/src/grid/index.js"],"names":["_interopRequireDefault","require","exports","__esModule","computeGridLayout","_defineProperty2","_utils","_trackSizing","_constants","_repeatResolver","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","default","getOwnPropertyDescriptors","defineProperties","defineProperty","validSizes","minmaxRegex","templateSplitRegex","getUCFirstString","str","charAt","toUpperCase","slice","validNestedGrid","tree","_ref","style","gridTemplateColumns","gridTemplateRows","test","parseRepeatFunction","repeatStr","split","map","arg","trim","getCleanSize","size","isNaN","sizeAr","getItemSize","items","dimension","filteredItems","templateCol","parsedDim","trackDir","item","getDisplayProperty","start","end","updateMatrix","grid","j","x","y","resolveItemStyle","itemStyle","mapping","gridRowStart","gridRowEnd","gridColumnStart","gridColumnEnd","gridColumn","_itemStyle$gridColumn","line","col","nameToLineMap","match","gridRow","_itemStyle$gridRow$sp","row","getMaxRowColumn","maxRow","maxColumn","Math","max","Grid","setup","_proto","prototype","_tsa","props","_config","set","value","getProps","getConfig","compute","_domTree","domTree","_sanitizeTracks","_sanitizeItems","_inflateTracks","_assignCoordinatesToCells","config","trackInfo","_getMaxRowColumn","children","_fetchTrackInformation","lineToNameMap","rowTracks","tracks","colTracks","len","splittedTrackInfo","nameList","sizeList","sanitizedTracks","startLineNames","endLineNames","track","toLowerCase","replace","indexOf","name","gridAutoFlow","rowNum","colNum","sanitizedItems","autoFlowItems","gridMatrix","freeCells","cell","extraRows","rowStart","rowEnd","colStart","colEnd","sanitizedItem","shift","ceil","_this$_config","sizedTracks","minHeightContribution","minWidthContribution","_ref2","paddingStart","paddingEnd","paddingTop","paddingBottom","width","height","tsa","clear","resolveTracks","index","calculatedStyle","baseSize","_solveUnresolvedChildren","childrenWithRepeatConfiguration","unResolvedChildren","child","_this$_config2","parentReference","colTrackDp","resolvedTracks","trackWidth","parentInfo","parsedWidthOfItem","itemWidth","repeatResolver","gridLayoutEngine","_this$_config3","_domTree$style","justifyItems","alignItems","trackHeight","rowTrackdp","colTrackdp","layout","justifySelf","CENTER","END","STRETCH","alignSelf","pluckNumber","padding","x2","y2","replaceWithAbsValue","styleTrack","calculatedTrack","trackSplitAr","trackWithAbsValue","counter","updateDomTreeWithResolvedValues","containerStyle","rowTrackSum","colTrackSum","userGivenStyles","count"],"mappings":"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","sourcesContent":["\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.computeGridLayout=computeGridLayout;var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _utils=require(\"../utils\");var _trackSizing=_interopRequireDefault(require(\"./track-sizing\"));var _constants=require(\"../utils/constants\");var _repeatResolver=require(\"./helpers/repeatResolver\");function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach((function(key){(0,_defineProperty2.default)(target,key,source[key])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}}return target}var validSizes=[\"auto\",\"none\"],minmaxRegex=/minmax/,templateSplitRegex=/(?:[^\\s[\\]()]+|\\[[^[\\]]*\\]|\\([^()]*\\))+/g,getUCFirstString=function getUCFirstString(str){return str.charAt(0).toUpperCase()+str.slice(1)},validNestedGrid=function validNestedGrid(tree){var _ref=tree.style||{},gridTemplateColumns=_ref.gridTemplateColumns,gridTemplateRows=_ref.gridTemplateRows;if(/repeat\\(/g.test(gridTemplateColumns)||/repeat\\(/g.test(gridTemplateRows)){return false}return true},parseRepeatFunction=function parseRepeatFunction(repeatStr){return repeatStr.split(/\\(|\\)/g)[1].split(\",\").map((function(arg){return arg&&arg.trim()}))},getCleanSize=function getCleanSize(size){size=size.trim();if(size===\"auto\")return size;if(!isNaN(+size))return+size;if(minmaxRegex.test(size)){var sizeAr=size.split(/\\(|\\)/g)[1].split(\",\");return[sizeAr[0].trim(),sizeAr[1].trim()]}return size},getItemSize=function getItemSize(items,dimension){var filteredItems,templateCol,parsedDim=getUCFirstString(dimension),size,trackDir=dimension===\"width\"?\"col\":\"row\";filteredItems=items.map((function(item){templateCol=item.style[\"gridTemplate\"+getUCFirstString(trackDir===\"col\"?\"columns\":\"rows\")];if((0,_utils.getDisplayProperty)(item)===\"grid\"&&/repeat\\(/g.test(templateCol)){size=parseRepeatFunction(templateCol)[1]}else{size=item.style[\"min\"+parsedDim+\"Contribution\"]||item.style[dimension]||\"auto\"}return{start:item[trackDir+\"Start\"],end:item[trackDir+\"End\"],size:size}}));return filteredItems},updateMatrix=function updateMatrix(grid,start,end){var i,j;for(i=start.x;i<end.x;i++){for(j=start.y;j<end.y;j++){grid[i][j]=true}}},resolveItemStyle=function resolveItemStyle(itemStyle,mapping){var gridRowStart=itemStyle.gridRowStart,gridRowEnd=itemStyle.gridRowEnd,gridColumnStart=itemStyle.gridColumnStart,gridColumnEnd=itemStyle.gridColumnEnd;if(itemStyle.gridColumn){var _itemStyle$gridColumn=itemStyle.gridColumn.split(\"/\").map((function(line){return line.trim()}));gridColumnStart=_itemStyle$gridColumn[0];gridColumnEnd=_itemStyle$gridColumn[1];gridColumnStart=mapping?mapping.col.nameToLineMap[gridColumnStart]:1;if(/span\\s+\\d+/g.test(gridColumnEnd)){gridColumnEnd=gridColumnStart+ +gridColumnEnd.match(/span\\s+(\\d+)/)[1]}gridColumnEnd=mapping?mapping.col.nameToLineMap[gridColumnEnd]:1}if(itemStyle.gridRow){var _itemStyle$gridRow$sp=itemStyle.gridRow.split(\"/\").map((function(line){return line.trim()}));gridRowStart=_itemStyle$gridRow$sp[0];gridRowEnd=_itemStyle$gridRow$sp[1];gridRowStart=mapping?mapping.row.nameToLineMap[gridRowStart]:1;if(/span\\s\\d+/g.test(gridRowEnd)){gridRowEnd=gridRowStart+ +gridRowEnd.match(/span\\s(\\d+)/)[1]}gridRowEnd=mapping?mapping.row.nameToLineMap[gridRowEnd]:1}return{gridRowStart:gridRowStart,gridRowEnd:gridRowEnd,gridColumnStart:gridColumnStart,gridColumnEnd:gridColumnEnd}},getMaxRowColumn=function getMaxRowColumn(items){var maxRow=1,maxColumn=1,itemStyle;items.forEach((function(item){itemStyle=resolveItemStyle(item.style);maxColumn=Math.max(isNaN(+itemStyle.gridColumnStart)?0:+itemStyle.gridColumnStart,maxColumn,isNaN(+itemStyle.gridColumnEnd-1)?0:+itemStyle.gridColumnEnd-1);maxRow=Math.max(isNaN(+itemStyle.gridRowStart)?0:+itemStyle.gridRowStart,maxRow,isNaN(+itemStyle.gridRowEnd-1)?0:+itemStyle.gridRowEnd-1)}));return{maxRow:maxRow,maxColumn:maxColumn}};var Grid=function(){function Grid(){this.setup()}var _proto=Grid.prototype;_proto.setup=function setup(){this._tsa=new _trackSizing.default;this.props={};this._config={mapping:{}};return this};_proto.set=function set(key,value){this.props[key]=value;return this};_proto.getProps=function getProps(key){return this.props[key]};_proto.getConfig=function getConfig(key){return this._config[key]};_proto.compute=function compute(_domTree){var domTree=_domTree||this.props.domTree;this._sanitizeTracks(domTree)._sanitizeItems(domTree)._inflateTracks()._assignCoordinatesToCells(domTree)};_proto._sanitizeTracks=function _sanitizeTracks(_domTree){if(_domTree===void 0){_domTree={}}var style=_domTree.style,gridTemplateRows=style.gridTemplateRows,gridTemplateColumns=style.gridTemplateColumns,config=this._config,trackInfo,_getMaxRowColumn=getMaxRowColumn(_domTree.children),maxColumn=_getMaxRowColumn.maxColumn,maxRow=_getMaxRowColumn.maxRow;this.set(\"maxTracks\",maxRow);trackInfo=this._fetchTrackInformation(gridTemplateRows);config.mapping.row={nameToLineMap:trackInfo.nameToLineMap,lineToNameMap:trackInfo.lineToNameMap};config.rowTracks=trackInfo.tracks;this.set(\"maxTracks\",maxColumn);trackInfo=this._fetchTrackInformation(gridTemplateColumns);config.mapping.col={nameToLineMap:trackInfo.nameToLineMap,lineToNameMap:trackInfo.lineToNameMap};config.colTracks=trackInfo.tracks;return this};_proto._fetchTrackInformation=function _fetchTrackInformation(tracks){if(tracks===void 0){tracks=\"none\"}var i,len,splittedTrackInfo=tracks.match(templateSplitRegex),nameList,sizeList,sanitizedTracks=[{}],startLineNames,endLineNames,nameToLineMap={},lineToNameMap={};nameList=splittedTrackInfo.filter((function(track){if(track&&typeof track===\"string\"&&track.length){len=track.length;if(track[0]===\"[\"&&track[len-1]===\"]\"){return true}return false}return true}));sizeList=splittedTrackInfo.filter((function(size){if(!size)return false;len=(size+\"\").toLowerCase().replace(/px|fr/,\"\");if(validSizes.indexOf(len)>=0||minmaxRegex.test(len)||!isNaN(len)){return true}return false})).map((function(size){return getCleanSize(size)}));len=sizeList.length;if(tracks===\"none\"){len=this.getProps(\"maxTracks\")}for(i=0;i<len;i++){startLineNames=nameList[i]&&nameList[i].replace(/\\[|\\]/g,\"\").split(\" \").filter((function(name){return name.length})).map((function(name){return name.trim()}))||[i+1+\"\"];endLineNames=nameList[i+1]&&nameList[i+1].replace(/\\[|\\]/g,\"\").split(\" \").filter((function(name){return name.length})).map((function(name){return name.trim()}))||[i+2+\"\"];sanitizedTracks.push({start:i+1,end:i+2,size:sizeList[i]||\"auto\"});lineToNameMap[i+1]=startLineNames;lineToNameMap[i+2]=endLineNames;startLineNames.forEach((function(name){return nameToLineMap[name]=i+1}));endLineNames.forEach((function(name){return nameToLineMap[name]=i+2}));nameToLineMap[i+1]=i+1;nameToLineMap[i+2]=i+2}return{tracks:sanitizedTracks,nameToLineMap:nameToLineMap,lineToNameMap:lineToNameMap}};_proto._sanitizeItems=function _sanitizeItems(_domTree){var domTree=_domTree||this.props.domTree,items=domTree.children||[],mapping=this._config.mapping,gridAutoFlow=domTree.style.gridAutoFlow||\"row\",rowNum=Object.keys(mapping.row.lineToNameMap).length,colNum=Object.keys(mapping.col.lineToNameMap).length,sanitizedItems=[],autoFlowItems=[],itemStyle,gridMatrix=[[]],freeCells=[],cell,item,extraRows,i,j,len;for(i=1;i<=rowNum;i++){gridMatrix.push([])}for(i=0,len=items.length;i<len;i++){itemStyle=resolveItemStyle(items[i].style,mapping);sanitizedItems.push(_objectSpread(_objectSpread({},items[i]),{},{rowStart:mapping.row.nameToLineMap[itemStyle.gridRowStart],rowEnd:mapping.row.nameToLineMap[itemStyle.gridRowEnd],colStart:mapping.col.nameToLineMap[itemStyle.gridColumnStart],colEnd:mapping.col.nameToLineMap[itemStyle.gridColumnEnd]}));item=sanitizedItems[i];updateMatrix(gridMatrix,{x:item.rowStart,y:item.colStart},{x:item.rowEnd,y:item.colEnd})}autoFlowItems=sanitizedItems.filter((function(sanitizedItem){return!sanitizedItem.colStart||!sanitizedItem.rowStart}));if(autoFlowItems){if(gridAutoFlow===\"row\"){for(i=1;i<rowNum;i++){for(j=1;j<colNum;j++){if(!gridMatrix[i][j]){freeCells.push({row:i,col:j})}}}while(autoFlowItems.length&&freeCells.length){item=autoFlowItems.shift();cell=freeCells.shift();item.rowStart=cell.row;item.colStart=cell.col;item.rowEnd=cell.row+1;item.colEnd=cell.col+1}extraRows=Math.ceil(autoFlowItems.length/colNum);if(extraRows){while(extraRows--){domTree.style.gridTemplateRows+=\"auto \";mapping.row.nameToLineMap[rowNum+1]=rowNum+1;mapping.row.nameToLineMap[rowNum+2]=rowNum+2;rowNum++;gridMatrix.push([])}domTree.style.gridTemplateRows=domTree.style.gridTemplateRows.trim();freeCells=[];for(i=1;i<=rowNum;i++){for(j=1;j<=colNum;j++){if(!gridMatrix[i][j]){freeCells.push({row:i,col:j})}}}while(autoFlowItems.length){item=autoFlowItems.shift();cell=freeCells.shift();item.rowStart=cell.row;item.colStart=cell.col;item.rowEnd=cell.row+1;item.colEnd=cell.col+1}}}}this._config.sanitizedItems=sanitizedItems;return this};_proto._inflateTracks=function _inflateTracks(){var _this$_config=this._config,sanitizedItems=_this$_config.sanitizedItems,colTracks=_this$_config.colTracks,rowTracks=_this$_config.rowTracks,sizedTracks,minHeightContribution=0,minWidthContribution=0,domTree=this.props.domTree,_ref2=domTree.style||{},paddingStart=_ref2.paddingStart,paddingEnd=_ref2.paddingEnd,paddingTop=_ref2.paddingTop,paddingBottom=_ref2.paddingBottom,width=_ref2.width,height=_ref2.height,tsa=new _trackSizing.default;if(!isNaN(+width)){width-=paddingStart+paddingEnd}sizedTracks=tsa.clear().set(\"tracks\",colTracks).set(\"items\",getItemSize(sanitizedItems,\"width\")).set(\"containerSize\",width||\"auto\").resolveTracks();colTracks.forEach((function(track,index){track.calculatedStyle=sizedTracks[index];minWidthContribution+=sizedTracks[index].baseSize||0}));this._solveUnresolvedChildren();if(!isNaN(+height)){height-=paddingTop+paddingBottom}sizedTracks=tsa.clear().set(\"tracks\",rowTracks).set(\"items\",getItemSize(sanitizedItems,\"height\")).set(\"containerSize\",height||\"auto\").resolveTracks();rowTracks.forEach((function(track,index){track.calculatedStyle=sizedTracks[index];minHeightContribution+=sizedTracks[index].baseSize||0}));domTree.style.minHeightContribution=minHeightContribution;domTree.style.minWidthContribution=minWidthContribution;return this};_proto._solveUnresolvedChildren=function _solveUnresolvedChildren(_domTree){var domTree=_domTree||this.props.domTree,childrenWithRepeatConfiguration=(domTree.unResolvedChildren||[]).filter((function(child){return/repeat\\(/g.test(child.style.gridTemplateColumns)||/repeat\\(/g.test(child.style.gridTemplateRows)})),_this$_config2=this._config,colTracks=_this$_config2.colTracks,mapping=_this$_config2.mapping,parentReference=this.getProps(\"parent\"),colTrackDp=[0],resolvedTracks,i,len,trackWidth,parentInfo,parsedWidthOfItem,colStart,colEnd;if(!childrenWithRepeatConfiguration.length){return this}for(i=1,len=colTracks.length;i<len;i++){colTrackDp[i]=colTrackDp[i-1]+colTracks[i].calculatedStyle.baseSize}childrenWithRepeatConfiguration.forEach((function(child){parsedWidthOfItem=parseRepeatFunction(child.style.gridTemplateColumns)[1];colStart=mapping.col.nameToLineMap[child.style.gridColumnStart];colEnd=mapping.col.nameToLineMap[child.style.gridColumnEnd];trackWidth=colTrackDp[colEnd-1]-colTrackDp[colStart-1];parentInfo={itemWidth:parsedWidthOfItem,width:trackWidth};resolvedTracks=(0,_repeatResolver.repeatResolver)(child,parentInfo);child.style.gridTemplateColumns=resolvedTracks.gridTemplateColumns;child.style.gridTemplateRows=resolvedTracks.gridTemplateRows;parentReference.gridLayoutEngine(child)}));return this};_proto._assignCoordinatesToCells=function _assignCoordinatesToCells(_domTree){var domTree=_domTree||this.props.domTree,_this$_config3=this._config,sanitizedItems=_this$_config3.sanitizedItems,rowTracks=_this$_config3.rowTracks,colTracks=_this$_config3.colTracks,item,len,i,_domTree$style=domTree.style,justifyItems=_domTree$style.justifyItems,alignItems=_domTree$style.alignItems,paddingStart=_domTree$style.paddingStart,paddingTop=_domTree$style.paddingTop,trackWidth,trackHeight,width,height,x,y,rowTrackdp=[paddingStart],colTrackdp=[paddingTop];for(i=1,len=rowTracks.length;i<len;i++){rowTrackdp[i]=rowTrackdp[i-1]+rowTracks[i].calculatedStyle.baseSize}for(i=1,len=colTracks.length;i<len;i++){colTrackdp[i]=colTrackdp[i-1]+colTracks[i].calculatedStyle.baseSize}domTree.layout={x:0,y:0,width:isNaN(domTree.style.width)?colTrackdp[colTrackdp.length-1]:domTree.style.width,height:isNaN(domTree.style.height)?rowTrackdp[rowTrackdp.length-1]:domTree.style.height};(domTree.children||[]).forEach((function(child,index){item=sanitizedItems[index];trackWidth=colTrackdp[item.colEnd-1]-colTrackdp[item.colStart-1];trackHeight=rowTrackdp[item.rowEnd-1]-rowTrackdp[item.rowStart-1];width=isNaN(+child.style.width)?trackWidth:+child.style.width;height=isNaN(+child.style.height)?trackHeight:+child.style.height;switch(justifyItems||child.style.justifySelf){case _constants.CENTER:x=colTrackdp[item.colStart-1]+trackWidth/2-width/2;break;case _constants.END:x=colTrackdp[item.colEnd-1]-width;break;case _constants.STRETCH:width=trackWidth;x=colTrackdp[item.colStart-1];break;default:x=colTrackdp[item.colStart-1]}switch(alignItems||child.style.alignSelf){case _constants.CENTER:y=rowTrackdp[item.rowStart-1]+trackHeight/2-height/2;break;case _constants.END:y=rowTrackdp[item.rowEnd-1]-height;break;case _constants.STRETCH:height=trackHeight;y=rowTrackdp[item.rowStart-1];break;default:y=rowTrackdp[item.rowStart-1]}x+=(0,_utils.pluckNumber)(item.style.paddingStart,item.style.padding,0);y+=(0,_utils.pluckNumber)(item.style.paddingTop,item.style.padding,0);child.layout={x:x,y:y,x2:x+width,y2:y+height,width:width,height:height}}));return this};return Grid}();var replaceWithAbsValue=function replaceWithAbsValue(styleTrack,calculatedTrack){if(styleTrack===void 0){styleTrack=\"\"}var trackSplitAr=(styleTrack.match(templateSplitRegex)||[]).filter((function(track){return track&&!!track.trim()})),trackWithAbsValue=\"\",counter=1;if(trackSplitAr.length&&!/repeat\\(/.test(styleTrack)){trackSplitAr.forEach((function(track){if(validSizes.indexOf(track)>-1||/[0-9]fr/.test(track)||minmaxRegex.test(track)||!isNaN(track)){trackWithAbsValue+=calculatedTrack[counter].calculatedStyle.baseSize+\" \";counter++}else{trackWithAbsValue+=track+\" \"}}))}else{calculatedTrack.forEach((function(track){if(isNaN(track.calculatedStyle.baseSize))return;trackWithAbsValue+=track.calculatedStyle.baseSize+\" \"}))}return trackWithAbsValue.trim()},updateDomTreeWithResolvedValues=function updateDomTreeWithResolvedValues(domTree,grid){var containerStyle=domTree.style,rowTracks=grid.getConfig(\"rowTracks\"),colTracks=grid.getConfig(\"colTracks\"),mapping=grid.getConfig(\"mapping\"),gridTemplateRows=containerStyle.gridTemplateRows,gridTemplateColumns=containerStyle.gridTemplateColumns,child,i,j,len,rowTrackSum,colTrackSum,rowStart,rowEnd,colStart,colEnd;domTree.style.gridTemplateRows=replaceWithAbsValue(gridTemplateRows,rowTracks);domTree.style.gridTemplateColumns=replaceWithAbsValue(gridTemplateColumns,colTracks);for(i=0,len=(domTree.children||[]).length;i<len;i++){child=domTree.children[i];if((0,_utils.getDisplayProperty)(child)){child.style.gridTemplateColumns=child.userGivenStyles.gridTemplateColumns;child.style.gridTemplateRows=child.userGivenStyles.gridTemplateRows;if(isNaN(child.userGivenStyles.width)){colStart=child.style.gridColumnStart;colEnd=child.style.gridColumnEnd;colStart=mapping.col.nameToLineMap[colStart];colEnd=mapping.col.nameToLineMap[colEnd];for(j=colStart,colTrackSum=0;j<colEnd;j++){colTrackSum+=colTracks[j].calculatedStyle.baseSize}child.style.width=colTrackSum}if(isNaN(child.userGivenStyles.height)){rowStart=child.style.gridRowStart;rowEnd=child.style.gridRowEnd;rowStart=mapping.row.nameToLineMap[rowStart];rowEnd=mapping.row.nameToLineMap[rowEnd];for(j=rowStart,rowTrackSum=0;j<rowEnd;j++){rowTrackSum+=rowTracks[j].calculatedStyle.baseSize}child.style.height=rowTrackSum}}}return domTree};function computeGridLayout(domTree,count){if(count===void 0){count=1}var i,len,style=domTree.style,child,grid;if(!domTree||!domTree.style){return}if(!domTree.userGivenStyles){domTree.style.width=isNaN(domTree.style.width)?\"auto\":domTree.style.width;domTree.style.height=isNaN(domTree.style.height)?\"auto\":domTree.style.height;style.paddingStart=(0,_utils.pluckNumber)(style.paddingStart,style.padding,0);style.paddingEnd=(0,_utils.pluckNumber)(style.paddingEnd,style.padding,0);style.paddingTop=(0,_utils.pluckNumber)(style.paddingTop,style.padding,0);style.paddingBottom=(0,_utils.pluckNumber)(style.paddingBottom,style.padding,0);domTree.userGivenStyles={gridTemplateColumns:domTree.style.gridTemplateColumns,gridTemplateRows:domTree.style.gridTemplateRows,width:domTree.style.width,height:domTree.style.height}}domTree.unResolvedChildren=[];for(i=0,len=domTree.children&&domTree.children.length;i<len;i++){child=domTree.children[i];if((0,_utils.getDisplayProperty)(child)){if(validNestedGrid(child)){this.compute(child)}else{domTree.unResolvedChildren.push(child)}}}grid=new Grid;grid.set(\"domTree\",domTree).set(\"parent\",this).compute();if(count<2){this.gridLayoutEngine(updateDomTreeWithResolvedValues(domTree,grid),2)}return domTree}"]},"metadata":{},"sourceType":"script"}