{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\04_06_2021\\\\henaknowledge\\\\frontend v3\\\\henaknowledgefrontend\\\\src\\\\Components\\\\Users\\\\AdminSection\\\\AdminExchange.js\",\n    _s = $RefreshSig$();\n\nimport axios from \"axios\";\nimport React, { useState, useEffect } from \"react\";\nimport Logo from \"../../../Logo/Logo\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nconst AdminExchange = props => {\n  _s();\n\n  const [user, SetUser] = useState({});\n  const [Code, SetCode] = useState(\"\");\n  const [userDoesNotExistError, SetuserDoesNotExistError] = useState(false);\n\n  const ChangeCodeHandler = e => {\n    SetCode(e.target.value);\n  };\n\n  const GetPersonDetailsHandler = e => {\n    e.preventDefault();\n    axios.get(`http://localhost:8080/Person/getPersonID?Code=${Code}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      }\n    }).then(res => {\n      if (res.data === 0) {\n        console.log(\"user does not exist\");\n        SetuserDoesNotExistError(true);\n      } else if (res.data !== 0) {\n        axios.get(`http://localhost:8080/Student/${res.data}`, {\n          headers: {\n            Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n          }\n        }).then(studentRes => {\n          SetUser(studentRes.data);\n        }).catch(error => {\n          console.log(\"this code belongs to a teacher\");\n          axios.get(`http://localhost:8080/Teacher/${res.data}`, {\n            headers: {\n              Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n            }\n          }).then(TeacherRes => {\n            console.log(TeacherRes.data);\n            SetUser(TeacherRes.data);\n          });\n        });\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      class: \"session\",\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"left\",\n        children: /*#__PURE__*/_jsxDEV(Logo, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          onSubmit: GetPersonDetailsHandler,\n          classNameName: \"log-in\",\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            children: \"Dash board\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n            children: \"Change points students and teachers can earn when they are active!\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), \"Enter the code:\", /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"floating-label\",\n            children: /*#__PURE__*/_jsxDEV(\"input\", {\n              type: \"text\",\n              value: Code,\n              onChange: ChangeCodeHandler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            className: \"LoginBtn\",\n            type: \"submit\",\n            children: \"Get Person details\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 72,\n            columnNumber: 13\n          }, this), userDoesNotExistError && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"There is no person with the specified code.\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this), \" \", /*#__PURE__*/_jsxDEV(\"p\", {\n              style: {\n                color: \"Red\"\n              },\n              children: \"please try again!\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 27\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), !userDoesNotExistError && user.role === \"Student\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Student details: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Full name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 17\n            }, this), user.firstName, \" \", user.lastName, /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Email: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 17\n            }, this), user.email, /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Points: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 17\n            }, this), user.points]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, this), !userDoesNotExistError && user.role === \"Teacher\" && /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [\"Teacher details: \", /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 34\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Full name: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, this), user.firstName, \" \", user.lastName, /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Email: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 17\n            }, this), user.email, /*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Points: \"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), user.points]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(AdminExchange, \"aTdd8J4mzja3fMxcDmNOBjV8TYM=\");\n\n_c = AdminExchange;\nexport default AdminExchange;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminExchange\");","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/src/Components/Users/AdminSection/AdminExchange.js"],"names":["axios","React","useState","useEffect","Logo","AdminExchange","props","user","SetUser","Code","SetCode","userDoesNotExistError","SetuserDoesNotExistError","ChangeCodeHandler","e","target","value","GetPersonDetailsHandler","preventDefault","get","headers","Authorization","localStorage","getItem","then","res","data","console","log","studentRes","catch","error","TeacherRes","color","role","firstName","lastName","email","points"],"mappings":"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","sourcesContent":["import axios from \"axios\";\r\nimport React, { useState, useEffect } from \"react\";\r\nimport Logo from \"../../../Logo/Logo\";\r\n\r\nconst AdminExchange = (props) => {\r\n  const [user, SetUser] = useState({});\r\n  const [Code, SetCode] = useState(\"\");\r\n  const [userDoesNotExistError, SetuserDoesNotExistError] = useState(false);\r\n  const ChangeCodeHandler = (e) => {\r\n    SetCode(e.target.value);\r\n  };\r\n\r\n  const GetPersonDetailsHandler = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .get(`http://localhost:8080/Person/getPersonID?Code=${Code}`, {\r\n        headers: {\r\n          Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n        },\r\n      })\r\n      .then((res) => {\r\n        if (res.data === 0) {\r\n          console.log(\"user does not exist\");\r\n          SetuserDoesNotExistError(true);\r\n        } else if (res.data !== 0) {\r\n          axios\r\n            .get(`http://localhost:8080/Student/${res.data}`, {\r\n              headers: {\r\n                Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n              },\r\n            })\r\n            .then((studentRes) => {\r\n              SetUser(studentRes.data);\r\n            })\r\n            .catch((error) => {\r\n                console.log(\"this code belongs to a teacher\")\r\n              axios\r\n                .get(`http://localhost:8080/Teacher/${res.data}`, {\r\n                  headers: {\r\n                    Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n                  },\r\n                })\r\n                .then((TeacherRes) => {\r\n                  console.log(TeacherRes.data);\r\n                  SetUser(TeacherRes.data);\r\n                });\r\n            });\r\n        }\r\n      });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <div class=\"session\">\r\n        <div class=\"left\">\r\n          <Logo />\r\n        </div>\r\n\r\n        <div>\r\n          <form onSubmit={GetPersonDetailsHandler} classNameName=\"log-in\">\r\n            <h1>Dash board</h1>\r\n            <p>\r\n              Change points students and teachers can earn when they are active!\r\n            </p>\r\n            Enter the code:\r\n            <div class=\"floating-label\">\r\n              <input type=\"text\" value={Code} onChange={ChangeCodeHandler} />\r\n            </div>\r\n            <button className=\"LoginBtn\" type=\"submit\">\r\n              Get Person details\r\n            </button>\r\n            <br></br>\r\n            {userDoesNotExistError  && (\r\n              <div>\r\n                <h2>There is no person with the specified code.</h2>\r\n                <br></br> <p style={{ color: \"Red\" }}>please try again!</p>\r\n              </div>\r\n            )}\r\n            {!userDoesNotExistError && user.role === \"Student\" && (\r\n              <div>\r\n                Student details: <br></br>\r\n                <h2>Full name: </h2>\r\n                {user.firstName} {user.lastName}\r\n                <h2>Email: </h2>\r\n                {user.email}\r\n                <h2>Points: </h2>\r\n                {user.points}\r\n              </div>\r\n            )}\r\n            {!userDoesNotExistError && user.role === \"Teacher\" && (\r\n              <div>\r\n                Teacher details: <br></br>\r\n                <h2>Full name: </h2>\r\n                {user.firstName} {user.lastName}\r\n                <h2>Email: </h2>\r\n                {user.email}\r\n                <h2>Points: </h2>\r\n                {user.points}\r\n              </div>\r\n            )}\r\n          </form>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default AdminExchange;\r\n"]},"metadata":{},"sourceType":"module"}