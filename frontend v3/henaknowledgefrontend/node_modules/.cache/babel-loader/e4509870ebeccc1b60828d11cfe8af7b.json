{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\moham\\\\OneDrive\\\\Desktop\\\\29_05_2021\\\\henaknowledge\\\\frontend v3\\\\henaknowledgefrontend\\\\src\\\\Components\\\\Users\\\\Experience\\\\ExperienceCard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from \"react\";\nimport { NavLink, Link } from \"react-router-dom\";\nimport \"./experiencecard.css\";\nimport Experience from \"./Experience\";\nimport { useSelector } from \"react-redux\";\nimport axios from 'axios';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nlet urlteacher;\nlet urlstudent;\n\nconst ExperienceCard = props => {\n  _s();\n\n  const isLoggedin = useSelector(state => state.auth.isLoggedin);\n  const userType = useSelector(state => state.auth.userType);\n  const [fullName, SetFullname] = useState('');\n  urlstudent = `/Student/Experiences/${props.ExperienceID}`;\n  urlteacher = `/Teacher/Experiences/${props.ExperienceID}`;\n  useEffect(() => {\n    axios.get(`localhost:8080/Person/getFullName?PersonID=${props.PersonID}`, {\n      headers: {\n        Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`\n      }\n    }).then(res => {\n      SetFullname(res.data);\n    });\n  }, []);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        class: \"main-container\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"heading-container\",\n          children: [\" Written by \", fullName, \" \"]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          class: \"cardExp-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            class: \"cardExp card-1\",\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              class: \"cardExp__icon\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 40,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"cardExp__exit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n              class: \"cardExp__title\",\n              children: props.title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n              class: \"cardExp__apply\",\n              children: [isLoggedin && userType === \"Student\" && /*#__PURE__*/_jsxDEV(NavLink, {\n                to: urlstudent,\n                children: \"Check it out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, this), isLoggedin && userType === \"Teacher\" && /*#__PURE__*/_jsxDEV(NavLink, {\n                to: urlteacher,\n                children: \"Check it out\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 45,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n};\n\n_s(ExperienceCard, \"S8DUG2E7z23NOGomH+XV4FM9b24=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ExperienceCard;\nexport default ExperienceCard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ExperienceCard\");","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/29_05_2021/henaknowledge/frontend v3/henaknowledgefrontend/src/Components/Users/Experience/ExperienceCard.js"],"names":["React","useEffect","useState","NavLink","Link","Experience","useSelector","axios","urlteacher","urlstudent","ExperienceCard","props","isLoggedin","state","auth","userType","fullName","SetFullname","ExperienceID","get","PersonID","headers","Authorization","localStorage","getItem","then","res","data","title"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,SAAf,EAA0BC,QAA1B,QAAyC,OAAzC;AACA,SAASC,OAAT,EAAkBC,IAAlB,QAA8B,kBAA9B;AACA,OAAO,sBAAP;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,KAAP,MAAkB,OAAlB;;;AAGA,IAAIC,UAAJ;AACA,IAAIC,UAAJ;;AACA,MAAMC,cAAc,GAAIC,KAAD,IAAW;AAAA;;AAChC,QAAMC,UAAU,GAAGN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWF,UAAvB,CAA9B;AACA,QAAMG,QAAQ,GAAGT,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACC,IAAN,CAAWC,QAAvB,CAA5B;AACA,QAAM,CAACC,QAAD,EAAWC,WAAX,IAA0Bf,QAAQ,CAAC,EAAD,CAAxC;AACAO,EAAAA,UAAU,GAAI,wBAAuBE,KAAK,CAACO,YAAa,EAAxD;AACAV,EAAAA,UAAU,GAAI,wBAAuBG,KAAK,CAACO,YAAa,EAAxD;AAEAjB,EAAAA,SAAS,CAAC,MAAM;AACdM,IAAAA,KAAK,CACFY,GADH,CAEK,8CAA6CR,KAAK,CAACS,QAAS,EAFjE,EAGI;AACEC,MAAAA,OAAO,EAAE;AACPC,QAAAA,aAAa,EAAG,UAASC,YAAY,CAACC,OAAb,CAAqB,KAArB,CAA4B;AAD9C;AADX,KAHJ,EAQIC,IARJ,CAQUC,GAAD,IAAO;AACZT,MAAAA,WAAW,CAACS,GAAG,CAACC,IAAL,CAAX;AACD,KAVH;AAWD,GAZQ,EAYN,EAZM,CAAT;AAeA,sBACE;AAAA,2BACE;AAAA,6BACE;AAAK,QAAA,KAAK,EAAC,gBAAX;AAAA,gCACE;AAAK,UAAA,KAAK,EAAC,mBAAX;AAAA,qCAA4CX,QAA5C;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE;AAAK,UAAA,KAAK,EAAC,mBAAX;AAAA,iCACE;AAAK,YAAA,KAAK,EAAC,gBAAX;AAAA,oCACE;AAAK,cAAA,KAAK,EAAC;AAAX;AAAA;AAAA;AAAA;AAAA,oBADF,eAGE;AAAG,cAAA,KAAK,EAAC;AAAT;AAAA;AAAA;AAAA;AAAA,oBAHF,eAKE;AAAI,cAAA,KAAK,EAAC,gBAAV;AAAA,wBAA4BL,KAAK,CAACiB;AAAlC;AAAA;AAAA;AAAA;AAAA,oBALF,eAME;AAAG,cAAA,KAAK,EAAC,gBAAT;AAAA,yBACGhB,UAAU,IAAIG,QAAQ,KAAK,SAA3B,iBACC,QAAC,OAAD;AAAS,gBAAA,EAAE,EAAEN,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAFJ,EAMGG,UAAU,IAAIG,QAAQ,KAAK,SAA3B,iBACC,QAAC,OAAD;AAAS,gBAAA,EAAE,EAAEP,UAAb;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,sBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBANF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AA8BD,CApDD;;GAAME,c;UACeJ,W,EACFA,W;;;KAFbI,c;AAsDN,eAAeA,cAAf","sourcesContent":["import React, {useEffect, useState} from \"react\";\r\nimport { NavLink, Link } from \"react-router-dom\";\r\nimport \"./experiencecard.css\";\r\nimport Experience from \"./Experience\";\r\nimport { useSelector } from \"react-redux\";\r\nimport axios from 'axios';\r\n\r\n\r\nlet urlteacher;\r\nlet urlstudent;\r\nconst ExperienceCard = (props) => {\r\n  const isLoggedin = useSelector((state) => state.auth.isLoggedin);\r\n  const userType = useSelector((state) => state.auth.userType);\r\n  const [fullName, SetFullname] = useState('')\r\n  urlstudent = `/Student/Experiences/${props.ExperienceID}`;\r\n  urlteacher = `/Teacher/Experiences/${props.ExperienceID}`;\r\n\r\n  useEffect(() => {\r\n    axios\r\n      .get(\r\n        `localhost:8080/Person/getFullName?PersonID=${props.PersonID}`,\r\n        {\r\n          headers: {\r\n            Authorization: `Bearer ${localStorage.getItem(\"jwt\")}`,\r\n          },\r\n        }\r\n      ).then((res)=>{\r\n        SetFullname(res.data)\r\n      })\r\n  }, []);\r\n\r\n\r\n  return (\r\n    <>\r\n      <div>\r\n        <div class=\"main-container\">\r\n          <div class=\"heading-container\"> Written by {fullName} </div>\r\n          <div class=\"cardExp-container\">\r\n            <div class=\"cardExp card-1\">\r\n              <div class=\"cardExp__icon\">\r\n              </div>\r\n              <p class=\"cardExp__exit\">\r\n              </p>\r\n              <h2 class=\"cardExp__title\">{props.title}</h2>\r\n              <p class=\"cardExp__apply\">\r\n                {isLoggedin && userType === \"Student\" && (\r\n                  <NavLink to={urlstudent}>\r\n                    Check it out \r\n                  </NavLink>\r\n                )}\r\n                {isLoggedin && userType === \"Teacher\" && (\r\n                  <NavLink to={urlteacher}>\r\n                    Check it out\r\n                  </NavLink>\r\n                )}\r\n              </p>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ExperienceCard;\r\n"]},"metadata":{},"sourceType":"module"}