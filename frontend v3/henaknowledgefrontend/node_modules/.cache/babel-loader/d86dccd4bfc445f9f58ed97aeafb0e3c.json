{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _defineProperty2 = _interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));\n\nvar _lib = _interopRequireDefault(require(\"./lib\"));\n\nvar _containerManager = _interopRequireDefault(require(\"./container-manager\"));\n\nfunction ownKeys(object, enumerableOnly) {\n  var keys = Object.keys(object);\n\n  if (Object.getOwnPropertySymbols) {\n    var symbols = Object.getOwnPropertySymbols(object);\n    if (enumerableOnly) symbols = symbols.filter(function (sym) {\n      return Object.getOwnPropertyDescriptor(object, sym).enumerable;\n    });\n    keys.push.apply(keys, symbols);\n  }\n\n  return keys;\n}\n\nfunction _objectSpread(target) {\n  for (var i = 1; i < arguments.length; i++) {\n    var source = arguments[i] != null ? arguments[i] : {};\n\n    if (i % 2) {\n      ownKeys(Object(source), true).forEach(function (key) {\n        (0, _defineProperty2.default)(target, key, source[key]);\n      });\n    } else if (Object.getOwnPropertyDescriptors) {\n      Object.defineProperties(target, Object.getOwnPropertyDescriptors(source));\n    } else {\n      ownKeys(Object(source)).forEach(function (key) {\n        Object.defineProperty(target, key, Object.getOwnPropertyDescriptor(source, key));\n      });\n    }\n  }\n\n  return target;\n}\n\nvar slLib = _lib.default.init(window),\n    doc = slLib.win.document,\n    M = slLib.win.Math,\n    max = M.max,\n    round = M.round,\n    htmlSplCharSpace = {\n  \" \": \"&nbsp;\"\n},\n    documentSupport = slLib.getDocumentSupport(),\n    SVG_BBOX_CORRECTION = documentSupport.isWebKit ? 0 : 4.5;\n\nfunction SmartLabelManager(container, useEllipses, options) {\n  var wrapper,\n      prop,\n      max,\n      isBrowserLess = false,\n      canvas = window.document.createElement(\"canvas\");\n  options = options || {};\n  options.maxCacheLimit = isFinite(max = options.maxCacheLimit) ? max : slLib.maxDefaultCacheLimit;\n\n  if (typeof container === \"string\") {\n    container = doc.getElementById(container);\n  }\n\n  wrapper = slLib.createContainer(container);\n  wrapper.innerHTML = slLib.testStrAvg;\n\n  if (documentSupport.isHeadLess || !documentSupport.isIE && !wrapper.offsetHeight && !wrapper.offsetWidth) {\n    isBrowserLess = true;\n  }\n\n  wrapper.innerHTML = \"\";\n\n  for (prop in slLib.parentContainerStyle) {\n    wrapper.style[prop] = slLib.parentContainerStyle[prop];\n  }\n\n  this.parentContainer = wrapper;\n  this.ctx = canvas && canvas.getContext && canvas.getContext(\"2d\");\n  this._containerManager = new _containerManager.default(wrapper, isBrowserLess, 10);\n  this._showNoEllipses = !useEllipses;\n  this._init = true;\n  this.style = {};\n  this.oldStyle = {};\n  this.options = options;\n  this.setStyle();\n}\n\nfunction getAbbrTagIndices(abbrRegex, abbrEndRegex, text, tagText, endtagText) {\n  var tagindices = [],\n      result,\n      dummyNode,\n      testAbbr,\n      endtagindices = [];\n\n  while (result = abbrRegex.exec(text)) {\n    dummyNode = document.createElement(\"p\");\n    testAbbr = result[0] + \"Dummy</abbr>\";\n    dummyNode.innerHTML = testAbbr;\n    tagindices.push({\n      tagName: result[0],\n      index: result.index,\n      title: dummyNode.childNodes[0].title ? dummyNode.childNodes[0].title : \"\",\n      endTagName: endtagText\n    });\n  }\n\n  while (result = abbrEndRegex.exec(text)) {\n    endtagindices.push({\n      tagName: endtagText,\n      index: result.index\n    });\n  }\n\n  return {\n    tag: tagindices,\n    endtag: endtagindices\n  };\n}\n\nfunction getStyles(el) {\n  var output = {};\n\n  if (!el || !el.style || !el.style.cssText) {\n    return output;\n  }\n\n  var camelize = function camelize(str) {\n    return str.replace(/(?:^|[-])(\\w)/g, function (a, c) {\n      c = a.substr(0, 1) === \"-\" ? c.toUpperCase() : c;\n      return c ? c : \"\";\n    });\n  };\n\n  var style = el.style.cssText.split(\";\");\n\n  for (var i = 0; i < style.length; ++i) {\n    var rule = style[i].trim();\n\n    if (rule) {\n      var ruleParts = rule.split(\":\");\n      var key = camelize(ruleParts[0].trim());\n      output[key] = ruleParts[1].trim();\n    }\n  }\n\n  return output;\n}\n\nfunction getSpanTagIndices(spanRegex, spanEndRegex, text, tagText, endtagText) {\n  var tagindices = [],\n      result,\n      dummyNode,\n      testAbbr,\n      styleObj,\n      endtagindices = [];\n\n  while (result = spanRegex.exec(text)) {\n    dummyNode = document.createElement(\"p\");\n    testAbbr = result[0] + \"Dummy</span>\";\n    dummyNode.innerHTML = testAbbr;\n    styleObj = getStyles(dummyNode.childNodes[0]);\n    tagindices.push({\n      tagName: result[0],\n      index: result.index,\n      style: styleObj ? styleObj : \"\",\n      endTagName: endtagText\n    });\n  }\n\n  while (result = spanEndRegex.exec(text)) {\n    endtagindices.push({\n      tagName: endtagText,\n      index: result.index\n    });\n  }\n\n  return {\n    tag: tagindices,\n    endtag: endtagindices\n  };\n}\n\nfunction getAnchorTagIndices(anchorRegex, anchorEndRegex, text, tagText, endtagText) {\n  var tagindices = [],\n      result,\n      dummyNode,\n      testAbbr,\n      endtagindices = [];\n\n  while (result = anchorRegex.exec(text)) {\n    dummyNode = document.createElement(\"p\");\n    testAbbr = result[0] + \"</a>\";\n    dummyNode.innerHTML = testAbbr;\n    tagindices.push({\n      tagName: result[0],\n      index: result.index,\n      href: dummyNode.childNodes[0].href ? dummyNode.childNodes[0].href : \"\",\n      target: dummyNode.childNodes[0].target ? dummyNode.childNodes[0].target : \"\",\n      hreflang: dummyNode.childNodes[0].hreflang ? dummyNode.childNodes[0].hreflang : \"\",\n      referrerpolicy: dummyNode.childNodes[0].referrerpolicy ? dummyNode.childNodes[0].referrerpolicy : \"\",\n      rel: dummyNode.childNodes[0].rel ? dummyNode.childNodes[0].rel : \"\",\n      endTagName: endtagText\n    });\n  }\n\n  while (result = anchorEndRegex.exec(text)) {\n    endtagindices.push({\n      tagName: endtagText,\n      index: result.index\n    });\n  }\n\n  return {\n    tag: tagindices,\n    endtag: endtagindices\n  };\n}\n\nfunction getTagIndices(tagRegex, endTagRegex, text, tagText, endtagText) {\n  var tagindices = [],\n      result,\n      endtagindices = [];\n\n  if (tagRegex) {\n    while (result = tagRegex.exec(text)) {\n      tagindices.push({\n        tagName: tagText,\n        index: result.index,\n        endTagName: endtagText\n      });\n    }\n  }\n\n  if (endTagRegex) {\n    while (result = endTagRegex.exec(text)) {\n      endtagindices.push({\n        tagName: endtagText,\n        index: result.index\n      });\n    }\n  }\n\n  return {\n    tag: tagindices,\n    endtag: endtagindices\n  };\n}\n\nfunction sortTags(u, b, em, strike, sub, sup, abbr, a, sp, str, it, del, s, br) {\n  var i,\n      j,\n      tagArr = [u, b, em, strike, sub, sup, abbr, a, sp, str, it, del, s, br],\n      res = [];\n\n  for (j = 0; j < tagArr.length; j++) {\n    for (var key in tagArr[j]) {\n      if (tagArr[j][key].length) {\n        for (i = 0; i < tagArr[j][key].length; i++) {\n          res.push(tagArr[j][key][i]);\n        }\n      }\n    }\n  }\n\n  res = res.sort(function (a, b) {\n    return a.index - b.index;\n  });\n  return res;\n}\n\nfunction getSortedBRTagIndices(text) {\n  var brRegex = /<br\\s*\\/?>/g,\n      brTagIndices = getTagIndices(brRegex, undefined, text, \"<br />\", \"\"),\n      sortedIndices = sortTags({}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, {}, brTagIndices);\n  return sortedIndices;\n}\n\nfunction getSortedTagIndices(text) {\n  var underlineRegex = /<u>/g,\n      underlineEndRegex = /<\\/u>/g,\n      boldRegex = /<b>/g,\n      boldEndRegex = /<\\/b>/g,\n      strongRegex = /<strong>/g,\n      strongEndRegex = /<\\/strong>/g,\n      emphasisRegex = /<em>/g,\n      emphasisEndRegex = /<\\/em>/g,\n      italicRegex = /<i>/g,\n      italicEndRegex = /<\\/i>/g,\n      delRegex = /<del>/g,\n      delEndRegex = /<\\/del>/g,\n      sRegex = /<s>/g,\n      sEndRegex = /<\\/s>/g,\n      strikeRegex = /<strike>/g,\n      strikeEndRegex = /<\\/strike>/g,\n      subscriptRegex = /<sub>/g,\n      subscriptEndRegex = /<\\/sub>/g,\n      superscriptRegex = /<sup>/g,\n      superscriptEndRegex = /<\\/sup>/g,\n      abbrRegex = /<abbr[\\s]+([^>]+)>/g,\n      abbrEndRegex = /<\\/abbr>/g,\n      spanRegex = /<span[\\s]+([^>]+)>/g,\n      spanEndRegex = /<\\/span>/g,\n      anchorRegex = /<a[\\s]+([^>]+)>/g,\n      anchorEndRegex = /<\\/a>/g,\n      brRegex = /<br\\s*\\/?>/g,\n      underlinetagIndices = getTagIndices(underlineRegex, underlineEndRegex, text, \"<u>\", \"</u>\"),\n      boldtagIndices = getTagIndices(boldRegex, boldEndRegex, text, \"<b>\", \"</b>\"),\n      emtagIndices = getTagIndices(emphasisRegex, emphasisEndRegex, text, \"<em>\", \"</em>\"),\n      strikeTagIndices = getTagIndices(strikeRegex, strikeEndRegex, text, \"<strike>\", \"</strike>\"),\n      subscriptTagIndices = getTagIndices(subscriptRegex, subscriptEndRegex, text, \"<sub>\", \"</sub>\"),\n      superscriptTagIndices = getTagIndices(superscriptRegex, superscriptEndRegex, text, \"<sup>\", \"</sup>\"),\n      abbrTagIndices = getAbbrTagIndices(abbrRegex, abbrEndRegex, text, \"<abbr>\", \"</abbr>\"),\n      anchorTagIndices = getAnchorTagIndices(anchorRegex, anchorEndRegex, text, \"<a>\", \"</a>\"),\n      spanTagIndices = getSpanTagIndices(spanRegex, spanEndRegex, text, \"<span>\", \"</span>\"),\n      strongTagIndices = getTagIndices(strongRegex, strongEndRegex, text, \"<strong>\", \"</strong>\"),\n      italicTagIndices = getTagIndices(italicRegex, italicEndRegex, text, \"<i>\", \"</i>\"),\n      delTagIndices = getTagIndices(delRegex, delEndRegex, text, \"<del>\", \"</del>\"),\n      sTagIndices = getTagIndices(sRegex, sEndRegex, text, \"<s>\", \"</s>\"),\n      brTagIndices = getTagIndices(brRegex, undefined, text, \"<br />\", \"\"),\n      sortedIndices = sortTags(underlinetagIndices, boldtagIndices, emtagIndices, strikeTagIndices, subscriptTagIndices, superscriptTagIndices, abbrTagIndices, anchorTagIndices, spanTagIndices, strongTagIndices, italicTagIndices, delTagIndices, sTagIndices, brTagIndices);\n  return sortedIndices;\n}\n\nfunction spliceSlice(str, index, count, add) {\n  if (index < 0) {\n    index = str.length + index;\n\n    if (index < 0) {\n      index = 0;\n    }\n  }\n\n  return str.slice(0, index) + (add || \"\") + str.slice(index + count);\n}\n\nfunction getResolvedTags(text, tagIndices, brTagIndex, charOffset) {\n  var i,\n      startPtr,\n      endPtr,\n      resultText = text,\n      newBrIndex = brTagIndex.index,\n      beforeTagindex = brTagIndex.index,\n      afterTagindex = brTagIndex.index + 6;\n\n  if (!tagIndices.length) {\n    return {\n      text: text,\n      charOffset: charOffset\n    };\n  }\n\n  startPtr = 0;\n  endPtr = tagIndices.length - 1;\n\n  if (tagIndices[startPtr].endTagName) {\n    afterTagindex = beforeTagindex + tagIndices[startPtr].endTagName.length + 6;\n  }\n\n  while (startPtr <= endPtr) {\n    if (tagIndices[startPtr].endTagName) {\n      if (startPtr === endPtr) {\n        resultText = spliceSlice(resultText, beforeTagindex, 0, tagIndices[startPtr].endTagName);\n        resultText = spliceSlice(resultText, afterTagindex, 0, tagIndices[startPtr].tagName);\n        newBrIndex = newBrIndex + tagIndices[startPtr].endTagName.length;\n        beforeTagindex = newBrIndex - tagIndices[startPtr].endTagName.length;\n        afterTagindex = newBrIndex + tagIndices[startPtr].endTagName.length + 6 + tagIndices[startPtr].tagName.length;\n        charOffset += tagIndices[startPtr].endTagName.length;\n        charOffset += tagIndices[startPtr].tagName.length;\n        startPtr++;\n        endPtr--;\n      } else if (tagIndices[startPtr].endTagName !== tagIndices[endPtr].tagName) {\n        for (i = startPtr; i <= endPtr; i++) {\n          if (tagIndices[i + 1]) {\n            if (tagIndices[startPtr].endTagName === tagIndices[i + 1].tagName) {\n              startPtr = i + 2;\n              break;\n            }\n          }\n        }\n\n        if (i > endPtr) {\n          resultText = spliceSlice(resultText, beforeTagindex, 0, tagIndices[startPtr].endTagName);\n          resultText = spliceSlice(resultText, beforeTagindex + tagIndices[startPtr].endTagName.length + 6, 0, tagIndices[startPtr].tagName);\n          newBrIndex = newBrIndex + tagIndices[startPtr].endTagName.length;\n          beforeTagindex = beforeTagindex + tagIndices[startPtr].endTagName.length;\n          afterTagindex = newBrIndex + tagIndices[startPtr].endTagName.length + 6 + tagIndices[startPtr].tagName.length;\n          charOffset += tagIndices[startPtr].endTagName.length;\n          charOffset += tagIndices[startPtr].tagName.length;\n          startPtr++;\n        }\n      } else {\n        startPtr++;\n        endPtr--;\n      }\n    } else {\n      startPtr++;\n      endPtr--;\n    }\n  }\n\n  return {\n    text: resultText,\n    charOffset: charOffset,\n    newBrIndex: newBrIndex\n  };\n}\n\nfunction resolveTags(text) {\n  var brTagIndices = getSortedBRTagIndices(text),\n      i,\n      charOffset = 0,\n      resultObj = {},\n      tagIndex,\n      textSnippet,\n      startIndex = 0,\n      tagIndices;\n\n  if (!text) {\n    return \"\";\n  }\n\n  if (!brTagIndices.length) {\n    return text;\n  }\n\n  tagIndex = brTagIndices[0].index;\n\n  for (i = 0; i < brTagIndices.length; i++) {\n    if (resultObj.charOffset && resultObj.charOffset > 0) {\n      tagIndex = brTagIndices[i].index + resultObj.charOffset;\n      brTagIndices[i].index = tagIndex;\n    } else {\n      tagIndex = brTagIndices[i].index;\n    }\n\n    textSnippet = text.substring(startIndex, tagIndex);\n    tagIndices = getSortedTagIndices(textSnippet);\n    charOffset = resultObj.charOffset ? resultObj.charOffset : charOffset;\n    resultObj = getResolvedTags(text, tagIndices, brTagIndices[i], charOffset);\n\n    if (resultObj.newBrIndex) {\n      startIndex = resultObj.newBrIndex + 6;\n    }\n\n    text = resultObj.text;\n  }\n\n  return text;\n}\n\nfunction resolveSingleLineText(text, tagIndices) {\n  var i,\n      startPtr = 0,\n      resultText = text,\n      endPtr = tagIndices.length - 1,\n      strEnd = text.length;\n\n  if (!tagIndices.length) {\n    return text;\n  }\n\n  while (startPtr <= endPtr) {\n    if (tagIndices[startPtr].endTagName) {\n      if (startPtr === endPtr) {\n        resultText = spliceSlice(resultText, strEnd, 0, tagIndices[startPtr].endTagName);\n        startPtr++;\n        endPtr--;\n      } else if (tagIndices[startPtr].endTagName !== tagIndices[endPtr].tagName) {\n        for (i = startPtr; i <= endPtr; i++) {\n          if (tagIndices[i + 1]) {\n            if (tagIndices[startPtr].endTagName === tagIndices[i + 1].tagName) {\n              startPtr = i + 2;\n              break;\n            }\n          }\n        }\n\n        if (i > endPtr) {\n          resultText = spliceSlice(resultText, strEnd, 0, tagIndices[startPtr].endTagName);\n          startPtr++;\n        }\n      } else {\n        startPtr++;\n        endPtr--;\n      }\n    } else {\n      startPtr++;\n      endPtr--;\n    }\n  }\n\n  return resultText;\n}\n\nfunction mergeTags(_oriText, _tempText) {\n  var oriText = _oriText,\n      tempText = _tempText,\n      resultText = \"\",\n      tagIndices,\n      dummyText = \"\",\n      i = 0,\n      oriPtr,\n      tempPtr;\n\n  if (oriText === tempText) {\n    return oriText;\n  } else if (oriText === \"\" && tempText !== \"\") {\n    return tempText;\n  } else if (tempText === \"\" && oriText !== \"\") {\n    return oriText;\n  }\n\n  oriPtr = 0;\n  tempPtr = 0;\n\n  while (oriPtr < oriText.length) {\n    if (oriText[oriPtr] && !tempText[tempPtr]) {\n      resultText += oriText.substring(oriPtr, oriText.length);\n      break;\n    } else if (tempText[tempPtr] && !oriText[oriPtr]) {\n      resultText += tempText.substring(tempPtr, tempText.length);\n      break;\n    } else {\n      if (oriText[oriPtr] === tempText[tempPtr]) {\n        if (oriText[oriPtr] === \"<\") {\n          dummyText = oriText[oriPtr];\n          i = oriPtr + 1;\n\n          while (i < oriText.length) {\n            if (oriText[i] === \">\") {\n              dummyText += oriText[i];\n              break;\n            }\n\n            dummyText += oriText[i];\n            i++;\n          }\n\n          if (i >= oriText.length) {\n            resultText += oriText[oriPtr];\n            oriPtr++;\n            tempPtr++;\n          } else {\n            tagIndices = getSortedTagIndices(dummyText);\n\n            if (tagIndices && tagIndices.length) {\n              resultText += dummyText;\n              oriPtr += dummyText.length;\n            } else {\n              resultText += dummyText;\n              oriPtr += dummyText.length;\n              tempPtr += dummyText.length;\n            }\n          }\n        } else {\n          resultText += oriText[oriPtr];\n          oriPtr++;\n          tempPtr++;\n        }\n      } else {\n        if (oriText[oriPtr] === \"<\") {\n          dummyText = oriText[oriPtr];\n          i = oriPtr + 1;\n\n          while (i < oriText.length) {\n            if (oriText[i] === \">\") {\n              dummyText += oriText[i];\n              break;\n            }\n\n            dummyText += oriText[i];\n            i++;\n          }\n\n          if (i >= oriText.length) {\n            resultText += oriText[oriPtr];\n            oriPtr++;\n            tempPtr++;\n          } else {\n            tagIndices = getSortedTagIndices(dummyText);\n\n            if (tagIndices && tagIndices.length) {\n              resultText += dummyText;\n              oriPtr += dummyText.length;\n            } else {\n              resultText += dummyText;\n              oriPtr += dummyText.length;\n              tempPtr += dummyText.length;\n            }\n          }\n        } else if (tempText[tempPtr] === \"<\") {\n          dummyText = tempText[tempPtr];\n          i = tempPtr + 1;\n\n          while (i < tempText.length) {\n            if (tempText[i] === \">\") {\n              dummyText += tempText[i];\n              break;\n            }\n\n            dummyText += tempText[i];\n            i++;\n          }\n\n          if (i >= tempText.length) {\n            resultText += tempText[tempPtr];\n            oriPtr++;\n            tempPtr++;\n          } else {\n            tagIndices = getSortedTagIndices(dummyText);\n\n            if (tagIndices && tagIndices.length) {\n              resultText += dummyText;\n              tempPtr += dummyText.length;\n            } else {\n              resultText += dummyText;\n              oriPtr += dummyText.length;\n              tempPtr += dummyText.length;\n            }\n          }\n        } else if (oriText[oriPtr] === \" \") {\n          oriPtr++;\n        } else if (tempText[tempPtr] === \" \") {\n          tempPtr++;\n        }\n      }\n    }\n  }\n\n  return resultText;\n}\n\nfunction doMergeTextWithTags(oriText, tempText) {\n  var resultText = oriText,\n      tagIndices = getSortedTagIndices(oriText),\n      brTagIndices = getSortedBRTagIndices(tempText),\n      oribrTagIndices = getSortedBRTagIndices(oriText),\n      j,\n      keyIndex,\n      dummyText = tempText,\n      i,\n      count = 0;\n\n  if (oriText === tempText) {\n    return oriText;\n  }\n\n  if (oribrTagIndices.length) {\n    for (i = 0; i < oribrTagIndices.length; i++) {\n      count = 0;\n      j = oribrTagIndices[i].index;\n\n      while (oriText[j] !== \">\") {\n        count++;\n        j++;\n      }\n\n      oriText = spliceSlice(oriText, oribrTagIndices[i].index, count + 1, \"\");\n\n      if (oribrTagIndices[i + 1]) {\n        keyIndex = i + 1;\n        oribrTagIndices[i + 1].index -= keyIndex * (count + 1);\n      }\n    }\n\n    if (brTagIndices.length) {\n      for (i = 0; i < brTagIndices.length; i++) {\n        count = 0;\n        j = brTagIndices[i].index;\n\n        while (dummyText[j] !== \">\") {\n          count++;\n          j++;\n        }\n\n        dummyText = spliceSlice(dummyText, brTagIndices[i].index, count + 1, \"<br />\");\n\n        if (brTagIndices[i + 1]) {\n          keyIndex = i + 1;\n          brTagIndices[i + 1].index -= keyIndex * (count + 1);\n          brTagIndices[i + 1].index += keyIndex * 6;\n        }\n      }\n    }\n\n    tempText = dummyText;\n    resultText = oriText;\n    tagIndices = getSortedTagIndices(oriText);\n    brTagIndices = getSortedBRTagIndices(tempText);\n  }\n\n  if (!tagIndices.length) {\n    return tempText;\n  } else if (!brTagIndices.length) {\n    return resolveSingleLineText(oriText, tagIndices);\n  } else {\n    resultText = mergeTags(oriText, tempText);\n    resultText = resolveTags(resultText);\n  }\n\n  return resultText;\n}\n\nSmartLabelManager.textToLines = function (smartlabel) {\n  smartlabel = smartlabel || {};\n\n  if (!smartlabel.text) {\n    smartlabel.text = \"\";\n  } else if (typeof smartlabel.text !== \"string\") {\n    smartlabel.text = smartlabel.text.toString();\n  }\n\n  smartlabel.lines = smartlabel.text.split(/\\n|<br\\s*?\\/?>/gi);\n  return smartlabel;\n};\n\nSmartLabelManager.prototype._calCharDimWithCache = function (text, calculateDifference, length) {\n  if (text === void 0) {\n    text = \"\";\n  }\n\n  if (!this._init) {\n    return false;\n  }\n\n  var size,\n      tw,\n      twi,\n      cachedStyle,\n      asymmetricDifference,\n      maxAdvancedCacheLimit = this.options.maxCacheLimit,\n      style = this.style || {},\n      cache,\n      advancedCacheKey,\n      cacheName,\n      cacheInitName;\n  cache = this._advancedCache = this._advancedCache || (this._advancedCache = {});\n  advancedCacheKey = this._advancedCacheKey || (this._advancedCacheKey = []);\n  cacheName = text + style.fontSize + style.fontFamily + style.fontWeight + style.fontStyle;\n  cacheInitName = text + \"init\" + style.fontSize + style.fontFamily + style.fontWeight + style.fontStyle;\n\n  if (!this.ctx && htmlSplCharSpace[text]) {\n    text = htmlSplCharSpace[text];\n  }\n\n  if (!calculateDifference) {\n    asymmetricDifference = 0;\n  } else {\n    if ((asymmetricDifference = cache[cacheInitName]) === undefined) {\n      tw = this._getDimention(text.repeat ? text.repeat(length) : Array(length + 1).join(text)).width;\n      twi = this._getDimention(text).width;\n      asymmetricDifference = cache[cacheInitName] = (tw - length * twi) / (length + 1);\n      advancedCacheKey.push(cacheInitName);\n\n      if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n        delete cache[advancedCacheKey.shift()];\n      }\n    }\n  }\n\n  if (cachedStyle = cache[cacheName]) {\n    return {\n      width: cachedStyle.width,\n      height: cachedStyle.height\n    };\n  }\n\n  size = this._getDimention(text);\n  size.width += asymmetricDifference;\n  cache[cacheName] = {\n    width: size.width,\n    height: size.height\n  };\n  advancedCacheKey.push(cacheName);\n\n  if (advancedCacheKey.length > maxAdvancedCacheLimit) {\n    delete cache[advancedCacheKey.shift()];\n  }\n\n  return size;\n};\n\nSmartLabelManager.prototype._getDimention = function (text) {\n  if (this.requireDiv || !this.ctx) {\n    return slLib._getDimentionUsingDiv(text, this);\n  } else {\n    return slLib._getDimentionUsingCanvas(text, this);\n  }\n};\n\nSmartLabelManager.prototype._getWidthFn = function () {\n  var sl = this,\n      contObj = sl._containerObj,\n      svgText = contObj.svgText;\n\n  if (svgText) {\n    return function (str) {\n      var bbox, width;\n      svgText.textContent = str;\n      bbox = svgText.getBBox();\n      width = bbox.width - SVG_BBOX_CORRECTION;\n\n      if (width < 1) {\n        width = bbox.width;\n      }\n\n      return width;\n    };\n  } else {\n    return function (str) {\n      if (sl.requireDiv || !sl.ctx) {\n        return slLib._getDimentionUsingDiv(str, sl).width;\n      } else {\n        return slLib._getDimentionUsingCanvas(str, sl).width;\n      }\n    };\n  }\n};\n\nSmartLabelManager.prototype._isSameStyle = function () {\n  var sl = this,\n      oldStyle = sl.oldStyle || {},\n      style = sl.style;\n\n  if (style.fontSize !== oldStyle.fontSize || style.fontFamily !== oldStyle.fontFamily || style.fontStyle !== oldStyle.fontStyle || style.fontWeight !== oldStyle.fontWeight || style.fontVariant !== oldStyle.fontVariant) {\n    return false;\n  }\n\n  return true;\n};\n\nSmartLabelManager.prototype._setStyleOfCanvas = function () {\n  if (this._isSameStyle()) {\n    return;\n  }\n\n  var sl = this,\n      style = sl.style,\n      hashString,\n      sCont,\n      fontStyle = style.fontStyle,\n      fontVariant = style.fontVariant,\n      fontWeight = style.fontWeight,\n      fontSize = style.fontSize,\n      fontFamily = style.fontFamily;\n  fontSize += fontSize.indexOf(\"px\") === -1 ? \"px\" : \"\";\n  hashString = fontStyle + \" \" + fontVariant + \" \" + fontWeight + \" \" + fontSize + \" \" + fontFamily;\n  sl.ctx.font = hashString;\n  sCont = this._containerObj = this._containerManager.get(style);\n\n  if (this._containerObj) {\n    this._container = sCont.node;\n    this._context = sCont.context;\n    this._cache = sCont.charCache;\n    this._lineHeight = sCont.lineHeight;\n    this._styleNotSet = false;\n  } else {\n    this._styleNotSet = true;\n  }\n\n  sCont.ellipsesWidth = sl._calCharDimWithCache(\"...\", false).width;\n  sCont.dotWidth = sl._calCharDimWithCache(\".\", false).width;\n  sCont.lineHeight = this._lineHeight = sCont.lineHeight || slLib._getCleanHeight(style.lineHeight);\n  this.oldStyle = style;\n};\n\nSmartLabelManager.prototype._setStyleOfDiv = function () {\n  var sCont,\n      style = this.style;\n  this._containerObj = sCont = this._containerManager.get(style);\n\n  if (!sCont.node) {\n    this._containerManager._makeDivNode(this._containerObj);\n  }\n\n  if (this._containerObj) {\n    this._container = sCont.node;\n    this._context = sCont.context;\n    this._cache = sCont.charCache;\n    this._lineHeight = sCont.lineHeight;\n    this._styleNotSet = false;\n  } else {\n    this._styleNotSet = true;\n  }\n};\n\nSmartLabelManager.prototype._updateStyle = function () {\n  return this.requireDiv || !this.ctx ? this._setStyleOfDiv() : this._setStyleOfCanvas();\n};\n\nSmartLabelManager.prototype.setStyle = function (style) {\n  this.style = slLib.parseStyle(style);\n  slLib.setLineHeight(this.style);\n  return this;\n};\n\nSmartLabelManager.prototype.useEllipsesOnOverflow = function (useEllipses) {\n  if (!this._init) {\n    return this;\n  }\n\n  this._showNoEllipses = !useEllipses;\n  return this;\n};\n\nSmartLabelManager.prototype.getSmartText = function (text, maxWidth, maxHeight, noWrap) {\n  if (!this._init) {\n    return false;\n  }\n\n  if (text === undefined || text === null) {\n    text = \"\";\n  } else if (typeof text !== \"string\") {\n    text = text.toString();\n  }\n\n  var len,\n      trimStr,\n      tempArr,\n      tmpText,\n      maxWidthWithEll,\n      toolText,\n      oriWidth,\n      oriHeight,\n      newCharIndex,\n      nearestChar,\n      tempChar,\n      getWidth,\n      initialLeft,\n      initialTop,\n      getOriSizeImproveObj,\n      spanArr,\n      x,\n      y,\n      minWidth,\n      elem,\n      chr,\n      elemRightMostPoint,\n      elemLowestPoint,\n      lastBR,\n      removeFromIndex,\n      removeFromIndexForEllipses,\n      hasHTMLTag = false,\n      maxStrWidth = 0,\n      lastDash = -1,\n      lastSpace = -1,\n      lastIndexBroken = -1,\n      strWidth = 0,\n      strHeight = 0,\n      oriTextArr = [],\n      resolvedText = \"\",\n      i = 0,\n      originalText,\n      ellipsesStr = this._showNoEllipses ? \"\" : \"...\",\n      lineHeight,\n      context,\n      container,\n      sCont,\n      ellipsesWidth,\n      dotWidth,\n      canvas = this.ctx,\n      characterArr = [],\n      dashIndex = -1,\n      spaceIndex = -1,\n      lastLineBreak = -1,\n      hasOnlyBrTag,\n      dimentionObj,\n      fastTrim = function fastTrim(str) {\n    str = str.replace(/^\\s\\s*/, \"\");\n    var ws = /\\s/,\n        i = str.length;\n\n    while (ws.test(str.charAt(i -= 1))) {}\n\n    return str.slice(0, i + 1);\n  },\n      smartLabel = {\n    text: text,\n    maxWidth: maxWidth,\n    maxHeight: maxHeight,\n    width: null,\n    height: null,\n    oriTextWidth: null,\n    oriTextHeight: null,\n    oriText: text,\n    isTruncated: false\n  };\n\n  hasHTMLTag = slLib.xmlTagRegEx.test(text) || slLib.nbspRegex.test(text);\n  hasOnlyBrTag = slLib._hasOnlyBRTag(text);\n  this.requireDiv = hasHTMLTag && !hasOnlyBrTag;\n\n  this._updateStyle();\n\n  lineHeight = this._lineHeight;\n  context = this._context;\n  container = this._container;\n  sCont = this._containerObj;\n  ellipsesWidth = sCont.ellipsesWidth;\n  dotWidth = sCont.dotWidth;\n  toolText = text.replace(slLib.spanAdditionRegx, \"$2\");\n  getWidth = this._getWidthFn();\n\n  if (lineHeight - maxHeight <= 1 && lineHeight - maxHeight >= 0) {\n    maxHeight *= 1.2;\n  }\n\n  if (canvas || container) {\n    if (!documentSupport.isBrowserLess) {\n      tmpText = text = text.replace(slLib.ltgtquotRegex, function (match) {\n        switch (match) {\n          case \"&lt;\":\n            return \"<\";\n\n          case \"&gt;\":\n            return \">\";\n\n          case \"&quot;\":\n            return '\"';\n\n          case \"&#034;\":\n            return '\"';\n\n          case \"&#039;\":\n            return \"'\";\n        }\n      });\n      originalText = text;\n      tmpText = text = tmpText.replace(/<u>/g, \"\").replace(/<\\/u>/g, \"\").replace(/<b>/g, \"\").replace(/<\\/b>/g, \"\").replace(/<strong>/g, \"\").replace(/<\\/strong>/g, \"\").replace(/<em>/g, \"\").replace(/<\\/em>/g, \"\").replace(/<i>/g, \"\").replace(/<\\/i>/g, \"\").replace(/<strike>/g, \"\").replace(/<\\/strike>/g, \"\").replace(/<s>/g, \"\").replace(/<\\/s>/g, \"\").replace(/<del>/g, \"\").replace(/<\\/del>/g, \"\").replace(/<sub>/g, \"\").replace(/<\\/sub>/g, \"\").replace(/<sup>/g, \"\").replace(/<\\/sup>/g, \"\").replace(/<a[\\s]+([^>]+)>/g, \"\").replace(/<\\/a>/g, \"\").replace(/<abbr[\\s]+([^>]+)>/g, \"\").replace(/<\\/abbr>/g, \"\").replace(/<span[\\s]+([^>]+)>/g, \"\").replace(/<\\/span>/g, \"\");\n\n      if (!hasHTMLTag) {\n        tmpText = text = text.replace(slLib.ltgtquotRegex, function (match) {\n          switch (match) {\n            case \"&lt;\":\n              return \"<\";\n\n            case \"&gt;\":\n              return \">\";\n\n            case \"&quot;\":\n              return '\"';\n\n            case \"&#034;\":\n              return '\"';\n\n            case \"&#039;\":\n              return \"'\";\n          }\n        });\n        tmpText = text = tmpText.replace(/<u>/g, \"\").replace(/<\\/u>/g, \"\").replace(/<b>/g, \"\").replace(/<\\/b>/g, \"\").replace(/<strong>/g, \"\").replace(/<\\/strong>/g, \"\").replace(/<em>/g, \"\").replace(/<\\/em>/g, \"\").replace(/<i>/g, \"\").replace(/<\\/i>/g, \"\").replace(/<strike>/g, \"\").replace(/<\\/strike>/g, \"\").replace(/<s>/g, \"\").replace(/<\\/s>/g, \"\").replace(/<del>/g, \"\").replace(/<\\/del>/g, \"\").replace(/<sub>/g, \"\").replace(/<\\/sub>/g, \"\").replace(/<sup>/g, \"\").replace(/<\\/sup>/g, \"\").replace(/<a[\\s]+([^>]+)>/g, \"\").replace(/<\\/a>/g, \"\").replace(/<abbr[\\s]+([^>]+)>/g, \"\").replace(/<\\/abbr>/g, \"\").replace(/<span[\\s]+([^>]+)>/g, \"\").replace(/<\\/span>/g, \"\");\n        getOriSizeImproveObj = this.getSize(tmpText, true, {\n          hasHTMLTag: hasHTMLTag,\n          hasOnlyBrTag: hasOnlyBrTag,\n          cleanText: true\n        });\n        smartLabel.oriTextWidth = oriWidth = getOriSizeImproveObj.width;\n        smartLabel.oriTextHeight = oriHeight = getOriSizeImproveObj.height;\n      } else if (hasOnlyBrTag) {\n        text = text.replace(slLib.brRegex, \"<br />\");\n        dimentionObj = slLib._getDimentionOfMultiLineText(text, this);\n        smartLabel.oriTextWidth = oriWidth = dimentionObj.width;\n        smartLabel.oriTextHeight = oriHeight = dimentionObj.height;\n      } else {\n        container.innerHTML = text;\n        smartLabel.oriTextWidth = oriWidth = container.offsetWidth;\n        smartLabel.oriTextHeight = oriHeight = container.offsetHeight;\n      }\n\n      if (oriHeight <= maxHeight && oriWidth <= maxWidth) {\n        resolvedText = doMergeTextWithTags(originalText, text);\n        smartLabel.text = resolvedText;\n        smartLabel.width = smartLabel.oriTextWidth = oriWidth;\n        smartLabel.height = smartLabel.oriTextHeight = oriHeight;\n        return smartLabel;\n      }\n\n      if (lineHeight > maxHeight) {\n        smartLabel.text = \"\";\n        smartLabel.width = smartLabel.oriTextWidth = 0;\n        smartLabel.height = smartLabel.oriTextHeight = 0;\n        return smartLabel;\n      }\n    }\n\n    text = fastTrim(text).replace(/(\\s+)/g, \" \");\n    maxWidthWithEll = this._showNoEllipses ? maxWidth : maxWidth - ellipsesWidth;\n\n    if (!hasHTMLTag || hasOnlyBrTag) {\n      oriTextArr = slLib._getTextArray(text);\n      len = oriTextArr.length;\n      trimStr = \"\";\n      tempArr = [];\n      tempChar = oriTextArr[0];\n\n      if (this._cache[tempChar]) {\n        minWidth = this._cache[tempChar].width;\n      } else {\n        minWidth = getWidth(tempChar);\n        this._cache[tempChar] = {\n          width: minWidth\n        };\n      }\n\n      if (maxWidthWithEll > minWidth && !hasOnlyBrTag) {\n        tempArr = text.substr(0, slLib.getNearestBreakIndex(text, maxWidthWithEll, this)).split(\"\");\n      } else if (minWidth > maxWidth) {\n        smartLabel.text = \"\";\n        smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n        return smartLabel;\n      } else if (ellipsesStr) {\n        maxWidthWithEll = maxWidth - 2 * dotWidth;\n\n        if (maxWidthWithEll > minWidth) {\n          ellipsesStr = \"..\";\n        } else {\n          maxWidthWithEll = maxWidth - dotWidth;\n\n          if (maxWidthWithEll > minWidth) {\n            ellipsesStr = \".\";\n          } else {\n            maxWidthWithEll = 0;\n            ellipsesStr = \"\";\n          }\n        }\n      }\n\n      i = tempArr.length;\n      strWidth = getWidth(tempArr.join(\"\"));\n      strHeight = this._lineHeight;\n\n      if (noWrap) {\n        for (; i < len; i += 1) {\n          tempChar = tempArr[i] = oriTextArr[i];\n\n          if (tempArr[i] === \"<br />\") {\n            strHeight += this._lineHeight;\n            lastIndexBroken = i;\n            maxStrWidth = max(maxStrWidth, strWidth);\n            strWidth = 0;\n            trimStr = null;\n            continue;\n          }\n\n          if (this._cache[tempChar]) {\n            minWidth = this._cache[tempChar].width;\n          } else {\n            if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n              minWidth = getWidth(tempChar);\n            }\n\n            this._cache[tempChar] = {\n              width: minWidth\n            };\n          }\n\n          strWidth += minWidth;\n\n          if (strWidth > maxWidthWithEll) {\n            if (!trimStr) {\n              trimStr = tempArr.slice(0, -1).join(\"\");\n            }\n\n            if (strWidth > maxWidth) {\n              smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n              smartLabel.tooltext = smartLabel.oriText;\n              smartLabel.width = max(maxStrWidth, strWidth);\n              smartLabel.height = strHeight;\n              smartLabel.isTruncated = true;\n              return smartLabel;\n            }\n          }\n        }\n\n        smartLabel.text = tempArr.join(\"\");\n        smartLabel.width = max(maxStrWidth, strWidth);\n        smartLabel.height = strHeight;\n        return smartLabel;\n      } else {\n        for (; i < len; i += 1) {\n          tempChar = tempArr[i] = oriTextArr[i];\n\n          if (tempChar === \" \" && !context) {\n            tempChar = this.ctx ? \" \" : \"&nbsp;\";\n          }\n\n          if (tempArr[i] === \"<br />\") {\n            maxStrWidth = max(maxStrWidth, strWidth);\n            strHeight += this._lineHeight;\n\n            if (strHeight <= maxHeight) {\n              lastIndexBroken = i;\n              strWidth = 0;\n              trimStr = null;\n              continue;\n            } else if (strHeight > maxHeight) {\n              trimStr = tempArr.slice(0, -1).join(\"\");\n              smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n              smartLabel.tooltext = toolText;\n              smartLabel.width = maxStrWidth;\n              smartLabel.height = strHeight - this._lineHeight;\n              smartLabel.isTruncated = true;\n              return smartLabel;\n            }\n          }\n\n          if (this._cache[tempChar]) {\n            minWidth = this._cache[tempChar].width;\n          } else {\n            if (!getOriSizeImproveObj || !(minWidth = getOriSizeImproveObj.detailObj[tempChar])) {\n              minWidth = getWidth(tempChar);\n            }\n\n            this._cache[tempChar] = {\n              width: minWidth\n            };\n          }\n\n          strWidth += minWidth;\n\n          if (strWidth > maxWidthWithEll) {\n            if (!trimStr) {\n              trimStr = tempArr.slice(0, -1).join(\"\");\n            }\n\n            if (strWidth > maxWidth) {\n              if (oriTextArr[i + 1] === \"<br />\") {\n                continue;\n              }\n\n              lastSpace = slLib._findLastIndex(oriTextArr.slice(0, tempArr.length), \" \");\n              lastDash = slLib._findLastIndex(oriTextArr.slice(0, tempArr.length), \"-\");\n\n              if (lastSpace > lastIndexBroken) {\n                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(\"\"));\n                tempArr.splice(lastSpace, 1, \"<br />\");\n                lastIndexBroken = lastSpace;\n                newCharIndex = lastSpace + 1;\n              } else if (lastDash > lastIndexBroken) {\n                if (lastDash === tempArr.length - 1) {\n                  strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(\"\"));\n                  tempArr.splice(lastDash, 1, \"<br />-\");\n                } else {\n                  strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastSpace).join(\"\"));\n                  tempArr.splice(lastDash, 1, \"-<br />\");\n                }\n\n                lastIndexBroken = lastDash;\n                newCharIndex = lastDash + 1;\n              } else {\n                tempArr.splice(tempArr.length - 1, 1, \"<br />\" + oriTextArr[i]);\n                lastLineBreak = tempArr.length - 2;\n                strWidth = getWidth(tempArr.slice(lastIndexBroken + 1, lastLineBreak + 1).join(\"\"));\n                lastIndexBroken = lastLineBreak;\n                newCharIndex = i;\n              }\n\n              strHeight += this._lineHeight;\n\n              if (strHeight > maxHeight) {\n                smartLabel.text = fastTrim(trimStr) + ellipsesStr;\n                smartLabel.tooltext = smartLabel.oriText;\n                smartLabel.width = maxWidth;\n                smartLabel.height = strHeight - this._lineHeight;\n                smartLabel.isTruncated = true;\n                return smartLabel;\n              } else {\n                maxStrWidth = max(maxStrWidth, strWidth);\n                trimStr = null;\n\n                if (!hasOnlyBrTag) {\n                  nearestChar = slLib.getNearestBreakIndex(text.substr(newCharIndex), maxWidthWithEll, this);\n                  strWidth = getWidth(text.substr(newCharIndex, nearestChar || 1));\n\n                  if (tempArr.length < newCharIndex + nearestChar) {\n                    tempArr = tempArr.concat(text.substr(tempArr.length, newCharIndex + nearestChar - tempArr.length).split(\"\"));\n                    i = tempArr.length - 1;\n                  }\n                } else {\n                  strWidth = slLib._getDimentionOfMultiLineText(tempArr.slice(lastIndexBroken + 1).join(\"\"), this).width;\n                }\n              }\n            }\n          }\n        }\n\n        maxStrWidth = max(maxStrWidth, strWidth);\n        resolvedText = doMergeTextWithTags(originalText, tempArr.join(\"\"));\n        smartLabel.text = resolvedText;\n        smartLabel.width = maxStrWidth;\n        smartLabel.height = strHeight;\n        return smartLabel;\n      }\n    } else {\n      toolText = text.replace(slLib.spanAdditionRegx, \"$2\");\n      text = text.replace(slLib.spanAdditionRegx, slLib.spanAdditionReplacer);\n      text = text.replace(/(<br\\s*\\/*\\>)/g, '<span class=\"' + [slLib.classNameWithTag, \" \", slLib.classNameWithTagBR].join(\"\") + '\">$1</span>');\n      container.innerHTML = text;\n      spanArr = container[documentSupport.childRetriverFn](documentSupport.childRetriverString);\n\n      for (x = 0, y = spanArr.length; x < y; x += 1) {\n        elem = spanArr[x];\n\n        if (documentSupport.noClassTesting || slLib.classNameReg.test(elem.className)) {\n          chr = elem.innerHTML;\n\n          if (chr !== \"\") {\n            if (chr === \" \") {\n              spaceIndex = characterArr.length;\n            } else if (chr === \"-\") {\n              dashIndex = characterArr.length;\n            }\n\n            characterArr.push({\n              spaceIdx: spaceIndex,\n              dashIdx: dashIndex,\n              elem: elem\n            });\n            oriTextArr.push(chr);\n          }\n        }\n      }\n\n      i = 0;\n      len = characterArr.length;\n      minWidth = len && characterArr[0].elem.offsetWidth;\n\n      if (minWidth > maxWidth || !len) {\n        smartLabel.text = \"\";\n        smartLabel.width = smartLabel.oriTextWidth = smartLabel.height = smartLabel.oriTextHeight = 0;\n        return smartLabel;\n      } else if (minWidth > maxWidthWithEll && !this._showNoEllipses) {\n        maxWidthWithEll = maxWidth - 2 * dotWidth;\n\n        if (maxWidthWithEll > minWidth) {\n          ellipsesStr = \"..\";\n        } else {\n          maxWidthWithEll = maxWidth - dotWidth;\n\n          if (maxWidthWithEll > minWidth) {\n            ellipsesStr = \".\";\n          } else {\n            maxWidthWithEll = 0;\n            ellipsesStr = \"\";\n          }\n        }\n      }\n\n      initialLeft = characterArr[0].elem.offsetLeft;\n      initialTop = characterArr[0].elem.offsetTop;\n\n      if (noWrap) {\n        for (; i < len; i += 1) {\n          elem = characterArr[i].elem;\n          elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n\n          if (elemRightMostPoint > maxWidthWithEll) {\n            if (!removeFromIndexForEllipses) {\n              removeFromIndexForEllipses = i;\n            }\n\n            if (container.offsetWidth > maxWidth) {\n              removeFromIndex = i;\n              i = len;\n            }\n          }\n        }\n      } else {\n        for (; i < len; i += 1) {\n          elem = characterArr[i].elem;\n          elemLowestPoint = elem.offsetHeight + (elem.offsetTop - initialTop);\n          elemRightMostPoint = elem.offsetLeft - initialLeft + elem.offsetWidth;\n          lastBR = null;\n\n          if (elemRightMostPoint > maxWidthWithEll) {\n            if (!removeFromIndexForEllipses) {\n              removeFromIndexForEllipses = i;\n            }\n\n            if (elemRightMostPoint > maxWidth) {\n              lastSpace = characterArr[i].spaceIdx;\n              lastDash = characterArr[i].dashIdx;\n\n              if (lastSpace > lastIndexBroken) {\n                characterArr[lastSpace].elem.innerHTML = \"<br/>\";\n                lastIndexBroken = lastSpace;\n              } else if (lastDash > lastIndexBroken) {\n                if (lastDash === i) {\n                  characterArr[lastDash].elem.innerHTML = \"<br/>-\";\n                } else {\n                  characterArr[lastDash].elem.innerHTML = \"-<br/>\";\n                }\n\n                lastIndexBroken = lastDash;\n              } else {\n                elem.parentNode.insertBefore(lastBR = doc.createElement(\"br\"), elem);\n              }\n\n              if (elem.offsetHeight + elem.offsetTop > maxHeight) {\n                if (lastBR) {\n                  lastBR.parentNode.removeChild(lastBR);\n                } else if (lastIndexBroken === lastDash) {\n                  characterArr[lastDash].elem.innerHTML = \"-\";\n                } else {\n                  characterArr[lastSpace].elem.innerHTML = \" \";\n                }\n\n                removeFromIndex = i;\n                i = len;\n              } else {\n                removeFromIndexForEllipses = null;\n              }\n            }\n          } else {\n            if (elemLowestPoint > maxHeight) {\n              removeFromIndex = i;\n              i = len;\n            }\n          }\n        }\n      }\n\n      if (removeFromIndex < len) {\n        smartLabel.isTruncated = true;\n        removeFromIndexForEllipses = removeFromIndexForEllipses ? removeFromIndexForEllipses : removeFromIndex;\n\n        for (i = len - 1; i >= removeFromIndexForEllipses; i -= 1) {\n          elem = characterArr[i].elem;\n          elem.parentNode.removeChild(elem);\n        }\n\n        for (; i >= 0; i -= 1) {\n          elem = characterArr[i].elem;\n\n          if (slLib.classNameBrReg.test(elem.className)) {\n            elem.parentNode.removeChild(elem);\n          } else {\n            i = 0;\n          }\n        }\n      }\n\n      smartLabel.text = container.innerHTML.replace(slLib.spanRemovalRegx, \"$1\").replace(/\\&amp\\;/g, \"&\");\n\n      if (smartLabel.isTruncated) {\n        smartLabel.text += ellipsesStr;\n        smartLabel.tooltext = toolText;\n      }\n    }\n\n    smartLabel.height = container.offsetHeight;\n    smartLabel.width = container.offsetWidth;\n    return smartLabel;\n  } else {\n    smartLabel.error = new Error(\"Body Tag Missing!\");\n    return smartLabel;\n  }\n};\n\nSmartLabelManager.prototype.getSize = function (text, detailedCalculationFlag, config) {\n  if (text === void 0) {\n    text = \"\";\n  }\n\n  if (detailedCalculationFlag === void 0) {\n    detailedCalculationFlag = true;\n  }\n\n  if (config === void 0) {\n    config = {};\n  }\n\n  if (!this._init) {\n    return false;\n  }\n\n  if (text === undefined || text === null) {\n    text = \"\";\n  } else if (typeof text !== \"string\") {\n    text = text.toString();\n  }\n\n  var textArr,\n      letter,\n      lSize,\n      i,\n      l,\n      cumulativeSize = 0,\n      height = 0,\n      container,\n      indiSizeStore = {},\n      hasHTMLTag = config.hasHTMLTag,\n      hasOnlyBrTag = config.hasOnlyBrTag;\n\n  if (typeof hasHTMLTag === \"undefined\") {\n    hasHTMLTag = slLib.xmlTagRegEx.test(text) || slLib.nbspRegex.test(text);\n  }\n\n  if (typeof hasOnlyBrTag === \"undefined\") {\n    hasOnlyBrTag = slLib._hasOnlyBRTag(text);\n  }\n\n  this.requireDiv = hasHTMLTag && !hasOnlyBrTag;\n\n  if (!config.cleanText) {\n    text = text.replace(slLib.ltgtquotRegex, function (match) {\n      switch (match) {\n        case \"&lt;\":\n          return \"<\";\n\n        case \"&gt;\":\n          return \">\";\n\n        case \"&quot;\":\n          return '\"';\n\n        case \"&#034;\":\n          return '\"';\n\n        case \"&#039;\":\n          return \"'\";\n      }\n    });\n    text = text.replace(/<u>/g, \"\").replace(/<\\/u>/g, \"\").replace(/<b>/g, \"\").replace(/<\\/b>/g, \"\").replace(/<strong>/g, \"\").replace(/<\\/strong>/g, \"\").replace(/<em>/g, \"\").replace(/<\\/em>/g, \"\").replace(/<i>/g, \"\").replace(/<\\/i>/g, \"\").replace(/<strike>/g, \"\").replace(/<\\/strike>/g, \"\").replace(/<s>/g, \"\").replace(/<\\/s>/g, \"\").replace(/<del>/g, \"\").replace(/<\\/del>/g, \"\").replace(/<sub>/g, \"\").replace(/<\\/sub>/g, \"\").replace(/<sup>/g, \"\").replace(/<\\/sup>/g, \"\").replace(/<a[\\s]+([^>]+)>/g, \"\").replace(/<\\/a>/g, \"\").replace(/<abbr[\\s]+([^>]+)>/g, \"\").replace(/<\\/abbr>/g, \"\").replace(/<span[\\s]+([^>]+)>/g, \"\").replace(/<\\/span>/g, \"\");\n  }\n\n  this._updateStyle();\n\n  container = this._container;\n\n  if (!detailedCalculationFlag) {\n    return this._calCharDimWithCache(text);\n  } else {\n    textArr = text.split(\"\");\n\n    for (i = 0, l = textArr.length; i < l; i++) {\n      letter = textArr[i];\n      lSize = this._calCharDimWithCache(letter, false, textArr.length);\n      height = max(height, lSize.height);\n      cumulativeSize += lSize.width;\n      indiSizeStore[letter] = lSize.width;\n    }\n  }\n\n  if (hasOnlyBrTag) {\n    return _objectSpread(_objectSpread({}, slLib._getDimentionOfMultiLineText(text, this)), {}, {\n      detailObj: indiSizeStore\n    });\n  }\n\n  if (hasHTMLTag) {\n    container.innerHTML = text;\n    return {\n      width: container.offsetWidth,\n      height: container.offsetHeight,\n      detailObj: indiSizeStore\n    };\n  }\n\n  return {\n    width: round(cumulativeSize),\n    height: height,\n    detailObj: indiSizeStore\n  };\n};\n\nSmartLabelManager.prototype.getOriSize = function (text, detailedCalculationFlag, config) {\n  if (text === void 0) {\n    text = \"\";\n  }\n\n  if (detailedCalculationFlag === void 0) {\n    detailedCalculationFlag = true;\n  }\n\n  if (config === void 0) {\n    config = {};\n  }\n\n  return this.getSize(text, detailedCalculationFlag, config);\n};\n\nSmartLabelManager.prototype.dispose = function () {\n  if (!this._init) {\n    return this;\n  }\n\n  if (this._containerManager && this._containerManager.dispose) {\n    this._containerManager.dispose();\n  }\n\n  delete this._container;\n  delete this._context;\n  delete this._cache;\n  delete this._containerManager;\n  delete this._containerObj;\n  delete this.id;\n  delete this.style;\n  delete this.parentContainer;\n  delete this._showNoEllipses;\n  return this;\n};\n\nvar _default = SmartLabelManager;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/core/src/_internal/vendors/fusioncharts-smartlabel/src/SmartlabelManager.js"],"names":["_interopRequireDefault","require","exports","__esModule","default","_defineProperty2","_lib","_containerManager","ownKeys","object","enumerableOnly","keys","Object","getOwnPropertySymbols","symbols","filter","sym","getOwnPropertyDescriptor","enumerable","push","apply","_objectSpread","target","i","arguments","length","source","forEach","key","getOwnPropertyDescriptors","defineProperties","defineProperty","slLib","init","window","doc","win","document","M","Math","max","round","htmlSplCharSpace","documentSupport","getDocumentSupport","SVG_BBOX_CORRECTION","isWebKit","SmartLabelManager","container","useEllipses","options","wrapper","prop","isBrowserLess","canvas","createElement","maxCacheLimit","isFinite","maxDefaultCacheLimit","getElementById","createContainer","innerHTML","testStrAvg","isHeadLess","isIE","offsetHeight","offsetWidth","parentContainerStyle","style","parentContainer","ctx","getContext","_showNoEllipses","_init","oldStyle","setStyle","getAbbrTagIndices","abbrRegex","abbrEndRegex","text","tagText","endtagText","tagindices","result","dummyNode","testAbbr","endtagindices","exec","tagName","index","title","childNodes","endTagName","tag","endtag","getStyles","el","output","cssText","camelize","str","replace","a","c","substr","toUpperCase","split","rule","trim","ruleParts","getSpanTagIndices","spanRegex","spanEndRegex","styleObj","getAnchorTagIndices","anchorRegex","anchorEndRegex","href","hreflang","referrerpolicy","rel","getTagIndices","tagRegex","endTagRegex","sortTags","u","b","em","strike","sub","sup","abbr","sp","it","del","s","br","j","tagArr","res","sort","getSortedBRTagIndices","brRegex","brTagIndices","undefined","sortedIndices","getSortedTagIndices","underlineRegex","underlineEndRegex","boldRegex","boldEndRegex","strongRegex","strongEndRegex","emphasisRegex","emphasisEndRegex","italicRegex","italicEndRegex","delRegex","delEndRegex","sRegex","sEndRegex","strikeRegex","strikeEndRegex","subscriptRegex","subscriptEndRegex","superscriptRegex","superscriptEndRegex","underlinetagIndices","boldtagIndices","emtagIndices","strikeTagIndices","subscriptTagIndices","superscriptTagIndices","abbrTagIndices","anchorTagIndices","spanTagIndices","strongTagIndices","italicTagIndices","delTagIndices","sTagIndices","spliceSlice","count","add","slice","getResolvedTags","tagIndices","brTagIndex","charOffset","startPtr","endPtr","resultText","newBrIndex","beforeTagindex","afterTagindex","resolveTags","resultObj","tagIndex","textSnippet","startIndex","substring","resolveSingleLineText","strEnd","mergeTags","_oriText","_tempText","oriText","tempText","dummyText","oriPtr","tempPtr","doMergeTextWithTags","oribrTagIndices","keyIndex","textToLines","smartlabel","toString","lines","prototype","_calCharDimWithCache","calculateDifference","size","tw","twi","cachedStyle","asymmetricDifference","maxAdvancedCacheLimit","cache","advancedCacheKey","cacheName","cacheInitName","_advancedCache","_advancedCacheKey","fontSize","fontFamily","fontWeight","fontStyle","_getDimention","repeat","Array","join","width","shift","height","requireDiv","_getDimentionUsingDiv","_getDimentionUsingCanvas","_getWidthFn","sl","contObj","_containerObj","svgText","bbox","textContent","getBBox","_isSameStyle","fontVariant","_setStyleOfCanvas","hashString","sCont","indexOf","font","get","_container","node","_context","context","_cache","charCache","_lineHeight","lineHeight","_styleNotSet","ellipsesWidth","dotWidth","_getCleanHeight","_setStyleOfDiv","_makeDivNode","_updateStyle","parseStyle","setLineHeight","useEllipsesOnOverflow","getSmartText","maxWidth","maxHeight","noWrap","len","trimStr","tempArr","tmpText","maxWidthWithEll","toolText","oriWidth","oriHeight","newCharIndex","nearestChar","tempChar","getWidth","initialLeft","initialTop","getOriSizeImproveObj","spanArr","x","y","minWidth","elem","chr","elemRightMostPoint","elemLowestPoint","lastBR","removeFromIndex","removeFromIndexForEllipses","hasHTMLTag","maxStrWidth","lastDash","lastSpace","lastIndexBroken","strWidth","strHeight","oriTextArr","resolvedText","originalText","ellipsesStr","characterArr","dashIndex","spaceIndex","lastLineBreak","hasOnlyBrTag","dimentionObj","fastTrim","ws","test","charAt","smartLabel","oriTextWidth","oriTextHeight","isTruncated","xmlTagRegEx","nbspRegex","_hasOnlyBRTag","spanAdditionRegx","ltgtquotRegex","match","getSize","cleanText","_getDimentionOfMultiLineText","_getTextArray","getNearestBreakIndex","detailObj","tooltext","_findLastIndex","splice","concat","spanAdditionReplacer","classNameWithTag","classNameWithTagBR","childRetriverFn","childRetriverString","noClassTesting","classNameReg","className","spaceIdx","dashIdx","offsetLeft","offsetTop","parentNode","insertBefore","removeChild","classNameBrReg","spanRemovalRegx","error","Error","detailedCalculationFlag","config","textArr","letter","lSize","l","cumulativeSize","indiSizeStore","getOriSize","dispose","id","_default"],"mappings":"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","sourcesContent":["\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=void 0;var _defineProperty2=_interopRequireDefault(require(\"@babel/runtime/helpers/defineProperty\"));var _lib=_interopRequireDefault(require(\"./lib\"));var _containerManager=_interopRequireDefault(require(\"./container-manager\"));function ownKeys(object,enumerableOnly){var keys=Object.keys(object);if(Object.getOwnPropertySymbols){var symbols=Object.getOwnPropertySymbols(object);if(enumerableOnly)symbols=symbols.filter((function(sym){return Object.getOwnPropertyDescriptor(object,sym).enumerable}));keys.push.apply(keys,symbols)}return keys}function _objectSpread(target){for(var i=1;i<arguments.length;i++){var source=arguments[i]!=null?arguments[i]:{};if(i%2){ownKeys(Object(source),true).forEach((function(key){(0,_defineProperty2.default)(target,key,source[key])}))}else if(Object.getOwnPropertyDescriptors){Object.defineProperties(target,Object.getOwnPropertyDescriptors(source))}else{ownKeys(Object(source)).forEach((function(key){Object.defineProperty(target,key,Object.getOwnPropertyDescriptor(source,key))}))}}return target}var slLib=_lib.default.init(window),doc=slLib.win.document,M=slLib.win.Math,max=M.max,round=M.round,htmlSplCharSpace={\" \":\"&nbsp;\"},documentSupport=slLib.getDocumentSupport(),SVG_BBOX_CORRECTION=documentSupport.isWebKit?0:4.5;function SmartLabelManager(container,useEllipses,options){var wrapper,prop,max,isBrowserLess=false,canvas=window.document.createElement(\"canvas\");options=options||{};options.maxCacheLimit=isFinite(max=options.maxCacheLimit)?max:slLib.maxDefaultCacheLimit;if(typeof container===\"string\"){container=doc.getElementById(container)}wrapper=slLib.createContainer(container);wrapper.innerHTML=slLib.testStrAvg;if(documentSupport.isHeadLess||!documentSupport.isIE&&!wrapper.offsetHeight&&!wrapper.offsetWidth){isBrowserLess=true}wrapper.innerHTML=\"\";for(prop in slLib.parentContainerStyle){wrapper.style[prop]=slLib.parentContainerStyle[prop]}this.parentContainer=wrapper;this.ctx=canvas&&canvas.getContext&&canvas.getContext(\"2d\");this._containerManager=new _containerManager.default(wrapper,isBrowserLess,10);this._showNoEllipses=!useEllipses;this._init=true;this.style={};this.oldStyle={};this.options=options;this.setStyle()}function getAbbrTagIndices(abbrRegex,abbrEndRegex,text,tagText,endtagText){var tagindices=[],result,dummyNode,testAbbr,endtagindices=[];while(result=abbrRegex.exec(text)){dummyNode=document.createElement(\"p\");testAbbr=result[0]+\"Dummy</abbr>\";dummyNode.innerHTML=testAbbr;tagindices.push({tagName:result[0],index:result.index,title:dummyNode.childNodes[0].title?dummyNode.childNodes[0].title:\"\",endTagName:endtagText})}while(result=abbrEndRegex.exec(text)){endtagindices.push({tagName:endtagText,index:result.index})}return{tag:tagindices,endtag:endtagindices}}function getStyles(el){var output={};if(!el||!el.style||!el.style.cssText){return output}var camelize=function camelize(str){return str.replace(/(?:^|[-])(\\w)/g,(function(a,c){c=a.substr(0,1)===\"-\"?c.toUpperCase():c;return c?c:\"\"}))};var style=el.style.cssText.split(\";\");for(var i=0;i<style.length;++i){var rule=style[i].trim();if(rule){var ruleParts=rule.split(\":\");var key=camelize(ruleParts[0].trim());output[key]=ruleParts[1].trim()}}return output}function getSpanTagIndices(spanRegex,spanEndRegex,text,tagText,endtagText){var tagindices=[],result,dummyNode,testAbbr,styleObj,endtagindices=[];while(result=spanRegex.exec(text)){dummyNode=document.createElement(\"p\");testAbbr=result[0]+\"Dummy</span>\";dummyNode.innerHTML=testAbbr;styleObj=getStyles(dummyNode.childNodes[0]);tagindices.push({tagName:result[0],index:result.index,style:styleObj?styleObj:\"\",endTagName:endtagText})}while(result=spanEndRegex.exec(text)){endtagindices.push({tagName:endtagText,index:result.index})}return{tag:tagindices,endtag:endtagindices}}function getAnchorTagIndices(anchorRegex,anchorEndRegex,text,tagText,endtagText){var tagindices=[],result,dummyNode,testAbbr,endtagindices=[];while(result=anchorRegex.exec(text)){dummyNode=document.createElement(\"p\");testAbbr=result[0]+\"</a>\";dummyNode.innerHTML=testAbbr;tagindices.push({tagName:result[0],index:result.index,href:dummyNode.childNodes[0].href?dummyNode.childNodes[0].href:\"\",target:dummyNode.childNodes[0].target?dummyNode.childNodes[0].target:\"\",hreflang:dummyNode.childNodes[0].hreflang?dummyNode.childNodes[0].hreflang:\"\",referrerpolicy:dummyNode.childNodes[0].referrerpolicy?dummyNode.childNodes[0].referrerpolicy:\"\",rel:dummyNode.childNodes[0].rel?dummyNode.childNodes[0].rel:\"\",endTagName:endtagText})}while(result=anchorEndRegex.exec(text)){endtagindices.push({tagName:endtagText,index:result.index})}return{tag:tagindices,endtag:endtagindices}}function getTagIndices(tagRegex,endTagRegex,text,tagText,endtagText){var tagindices=[],result,endtagindices=[];if(tagRegex){while(result=tagRegex.exec(text)){tagindices.push({tagName:tagText,index:result.index,endTagName:endtagText})}}if(endTagRegex){while(result=endTagRegex.exec(text)){endtagindices.push({tagName:endtagText,index:result.index})}}return{tag:tagindices,endtag:endtagindices}}function sortTags(u,b,em,strike,sub,sup,abbr,a,sp,str,it,del,s,br){var i,j,tagArr=[u,b,em,strike,sub,sup,abbr,a,sp,str,it,del,s,br],res=[];for(j=0;j<tagArr.length;j++){for(var key in tagArr[j]){if(tagArr[j][key].length){for(i=0;i<tagArr[j][key].length;i++){res.push(tagArr[j][key][i])}}}}res=res.sort((function(a,b){return a.index-b.index}));return res}function getSortedBRTagIndices(text){var brRegex=/<br\\s*\\/?>/g,brTagIndices=getTagIndices(brRegex,undefined,text,\"<br />\",\"\"),sortedIndices=sortTags({},{},{},{},{},{},{},{},{},{},{},{},{},brTagIndices);return sortedIndices}function getSortedTagIndices(text){var underlineRegex=/<u>/g,underlineEndRegex=/<\\/u>/g,boldRegex=/<b>/g,boldEndRegex=/<\\/b>/g,strongRegex=/<strong>/g,strongEndRegex=/<\\/strong>/g,emphasisRegex=/<em>/g,emphasisEndRegex=/<\\/em>/g,italicRegex=/<i>/g,italicEndRegex=/<\\/i>/g,delRegex=/<del>/g,delEndRegex=/<\\/del>/g,sRegex=/<s>/g,sEndRegex=/<\\/s>/g,strikeRegex=/<strike>/g,strikeEndRegex=/<\\/strike>/g,subscriptRegex=/<sub>/g,subscriptEndRegex=/<\\/sub>/g,superscriptRegex=/<sup>/g,superscriptEndRegex=/<\\/sup>/g,abbrRegex=/<abbr[\\s]+([^>]+)>/g,abbrEndRegex=/<\\/abbr>/g,spanRegex=/<span[\\s]+([^>]+)>/g,spanEndRegex=/<\\/span>/g,anchorRegex=/<a[\\s]+([^>]+)>/g,anchorEndRegex=/<\\/a>/g,brRegex=/<br\\s*\\/?>/g,underlinetagIndices=getTagIndices(underlineRegex,underlineEndRegex,text,\"<u>\",\"</u>\"),boldtagIndices=getTagIndices(boldRegex,boldEndRegex,text,\"<b>\",\"</b>\"),emtagIndices=getTagIndices(emphasisRegex,emphasisEndRegex,text,\"<em>\",\"</em>\"),strikeTagIndices=getTagIndices(strikeRegex,strikeEndRegex,text,\"<strike>\",\"</strike>\"),subscriptTagIndices=getTagIndices(subscriptRegex,subscriptEndRegex,text,\"<sub>\",\"</sub>\"),superscriptTagIndices=getTagIndices(superscriptRegex,superscriptEndRegex,text,\"<sup>\",\"</sup>\"),abbrTagIndices=getAbbrTagIndices(abbrRegex,abbrEndRegex,text,\"<abbr>\",\"</abbr>\"),anchorTagIndices=getAnchorTagIndices(anchorRegex,anchorEndRegex,text,\"<a>\",\"</a>\"),spanTagIndices=getSpanTagIndices(spanRegex,spanEndRegex,text,\"<span>\",\"</span>\"),strongTagIndices=getTagIndices(strongRegex,strongEndRegex,text,\"<strong>\",\"</strong>\"),italicTagIndices=getTagIndices(italicRegex,italicEndRegex,text,\"<i>\",\"</i>\"),delTagIndices=getTagIndices(delRegex,delEndRegex,text,\"<del>\",\"</del>\"),sTagIndices=getTagIndices(sRegex,sEndRegex,text,\"<s>\",\"</s>\"),brTagIndices=getTagIndices(brRegex,undefined,text,\"<br />\",\"\"),sortedIndices=sortTags(underlinetagIndices,boldtagIndices,emtagIndices,strikeTagIndices,subscriptTagIndices,superscriptTagIndices,abbrTagIndices,anchorTagIndices,spanTagIndices,strongTagIndices,italicTagIndices,delTagIndices,sTagIndices,brTagIndices);return sortedIndices}function spliceSlice(str,index,count,add){if(index<0){index=str.length+index;if(index<0){index=0}}return str.slice(0,index)+(add||\"\")+str.slice(index+count)}function getResolvedTags(text,tagIndices,brTagIndex,charOffset){var i,startPtr,endPtr,resultText=text,newBrIndex=brTagIndex.index,beforeTagindex=brTagIndex.index,afterTagindex=brTagIndex.index+6;if(!tagIndices.length){return{text:text,charOffset:charOffset}}startPtr=0;endPtr=tagIndices.length-1;if(tagIndices[startPtr].endTagName){afterTagindex=beforeTagindex+tagIndices[startPtr].endTagName.length+6}while(startPtr<=endPtr){if(tagIndices[startPtr].endTagName){if(startPtr===endPtr){resultText=spliceSlice(resultText,beforeTagindex,0,tagIndices[startPtr].endTagName);resultText=spliceSlice(resultText,afterTagindex,0,tagIndices[startPtr].tagName);newBrIndex=newBrIndex+tagIndices[startPtr].endTagName.length;beforeTagindex=newBrIndex-tagIndices[startPtr].endTagName.length;afterTagindex=newBrIndex+tagIndices[startPtr].endTagName.length+6+tagIndices[startPtr].tagName.length;charOffset+=tagIndices[startPtr].endTagName.length;charOffset+=tagIndices[startPtr].tagName.length;startPtr++;endPtr--}else if(tagIndices[startPtr].endTagName!==tagIndices[endPtr].tagName){for(i=startPtr;i<=endPtr;i++){if(tagIndices[i+1]){if(tagIndices[startPtr].endTagName===tagIndices[i+1].tagName){startPtr=i+2;break}}}if(i>endPtr){resultText=spliceSlice(resultText,beforeTagindex,0,tagIndices[startPtr].endTagName);resultText=spliceSlice(resultText,beforeTagindex+tagIndices[startPtr].endTagName.length+6,0,tagIndices[startPtr].tagName);newBrIndex=newBrIndex+tagIndices[startPtr].endTagName.length;beforeTagindex=beforeTagindex+tagIndices[startPtr].endTagName.length;afterTagindex=newBrIndex+tagIndices[startPtr].endTagName.length+6+tagIndices[startPtr].tagName.length;charOffset+=tagIndices[startPtr].endTagName.length;charOffset+=tagIndices[startPtr].tagName.length;startPtr++}}else{startPtr++;endPtr--}}else{startPtr++;endPtr--}}return{text:resultText,charOffset:charOffset,newBrIndex:newBrIndex}}function resolveTags(text){var brTagIndices=getSortedBRTagIndices(text),i,charOffset=0,resultObj={},tagIndex,textSnippet,startIndex=0,tagIndices;if(!text){return\"\"}if(!brTagIndices.length){return text}tagIndex=brTagIndices[0].index;for(i=0;i<brTagIndices.length;i++){if(resultObj.charOffset&&resultObj.charOffset>0){tagIndex=brTagIndices[i].index+resultObj.charOffset;brTagIndices[i].index=tagIndex}else{tagIndex=brTagIndices[i].index}textSnippet=text.substring(startIndex,tagIndex);tagIndices=getSortedTagIndices(textSnippet);charOffset=resultObj.charOffset?resultObj.charOffset:charOffset;resultObj=getResolvedTags(text,tagIndices,brTagIndices[i],charOffset);if(resultObj.newBrIndex){startIndex=resultObj.newBrIndex+6}text=resultObj.text}return text}function resolveSingleLineText(text,tagIndices){var i,startPtr=0,resultText=text,endPtr=tagIndices.length-1,strEnd=text.length;if(!tagIndices.length){return text}while(startPtr<=endPtr){if(tagIndices[startPtr].endTagName){if(startPtr===endPtr){resultText=spliceSlice(resultText,strEnd,0,tagIndices[startPtr].endTagName);startPtr++;endPtr--}else if(tagIndices[startPtr].endTagName!==tagIndices[endPtr].tagName){for(i=startPtr;i<=endPtr;i++){if(tagIndices[i+1]){if(tagIndices[startPtr].endTagName===tagIndices[i+1].tagName){startPtr=i+2;break}}}if(i>endPtr){resultText=spliceSlice(resultText,strEnd,0,tagIndices[startPtr].endTagName);startPtr++}}else{startPtr++;endPtr--}}else{startPtr++;endPtr--}}return resultText}function mergeTags(_oriText,_tempText){var oriText=_oriText,tempText=_tempText,resultText=\"\",tagIndices,dummyText=\"\",i=0,oriPtr,tempPtr;if(oriText===tempText){return oriText}else if(oriText===\"\"&&tempText!==\"\"){return tempText}else if(tempText===\"\"&&oriText!==\"\"){return oriText}oriPtr=0;tempPtr=0;while(oriPtr<oriText.length){if(oriText[oriPtr]&&!tempText[tempPtr]){resultText+=oriText.substring(oriPtr,oriText.length);break}else if(tempText[tempPtr]&&!oriText[oriPtr]){resultText+=tempText.substring(tempPtr,tempText.length);break}else{if(oriText[oriPtr]===tempText[tempPtr]){if(oriText[oriPtr]===\"<\"){dummyText=oriText[oriPtr];i=oriPtr+1;while(i<oriText.length){if(oriText[i]===\">\"){dummyText+=oriText[i];break}dummyText+=oriText[i];i++}if(i>=oriText.length){resultText+=oriText[oriPtr];oriPtr++;tempPtr++}else{tagIndices=getSortedTagIndices(dummyText);if(tagIndices&&tagIndices.length){resultText+=dummyText;oriPtr+=dummyText.length}else{resultText+=dummyText;oriPtr+=dummyText.length;tempPtr+=dummyText.length}}}else{resultText+=oriText[oriPtr];oriPtr++;tempPtr++}}else{if(oriText[oriPtr]===\"<\"){dummyText=oriText[oriPtr];i=oriPtr+1;while(i<oriText.length){if(oriText[i]===\">\"){dummyText+=oriText[i];break}dummyText+=oriText[i];i++}if(i>=oriText.length){resultText+=oriText[oriPtr];oriPtr++;tempPtr++}else{tagIndices=getSortedTagIndices(dummyText);if(tagIndices&&tagIndices.length){resultText+=dummyText;oriPtr+=dummyText.length}else{resultText+=dummyText;oriPtr+=dummyText.length;tempPtr+=dummyText.length}}}else if(tempText[tempPtr]===\"<\"){dummyText=tempText[tempPtr];i=tempPtr+1;while(i<tempText.length){if(tempText[i]===\">\"){dummyText+=tempText[i];break}dummyText+=tempText[i];i++}if(i>=tempText.length){resultText+=tempText[tempPtr];oriPtr++;tempPtr++}else{tagIndices=getSortedTagIndices(dummyText);if(tagIndices&&tagIndices.length){resultText+=dummyText;tempPtr+=dummyText.length}else{resultText+=dummyText;oriPtr+=dummyText.length;tempPtr+=dummyText.length}}}else if(oriText[oriPtr]===\" \"){oriPtr++}else if(tempText[tempPtr]===\" \"){tempPtr++}}}}return resultText}function doMergeTextWithTags(oriText,tempText){var resultText=oriText,tagIndices=getSortedTagIndices(oriText),brTagIndices=getSortedBRTagIndices(tempText),oribrTagIndices=getSortedBRTagIndices(oriText),j,keyIndex,dummyText=tempText,i,count=0;if(oriText===tempText){return oriText}if(oribrTagIndices.length){for(i=0;i<oribrTagIndices.length;i++){count=0;j=oribrTagIndices[i].index;while(oriText[j]!==\">\"){count++;j++}oriText=spliceSlice(oriText,oribrTagIndices[i].index,count+1,\"\");if(oribrTagIndices[i+1]){keyIndex=i+1;oribrTagIndices[i+1].index-=keyIndex*(count+1)}}if(brTagIndices.length){for(i=0;i<brTagIndices.length;i++){count=0;j=brTagIndices[i].index;while(dummyText[j]!==\">\"){count++;j++}dummyText=spliceSlice(dummyText,brTagIndices[i].index,count+1,\"<br />\");if(brTagIndices[i+1]){keyIndex=i+1;brTagIndices[i+1].index-=keyIndex*(count+1);brTagIndices[i+1].index+=keyIndex*6}}}tempText=dummyText;resultText=oriText;tagIndices=getSortedTagIndices(oriText);brTagIndices=getSortedBRTagIndices(tempText)}if(!tagIndices.length){return tempText}else if(!brTagIndices.length){return resolveSingleLineText(oriText,tagIndices)}else{resultText=mergeTags(oriText,tempText);resultText=resolveTags(resultText)}return resultText}SmartLabelManager.textToLines=function(smartlabel){smartlabel=smartlabel||{};if(!smartlabel.text){smartlabel.text=\"\"}else if(typeof smartlabel.text!==\"string\"){smartlabel.text=smartlabel.text.toString()}smartlabel.lines=smartlabel.text.split(/\\n|<br\\s*?\\/?>/gi);return smartlabel};SmartLabelManager.prototype._calCharDimWithCache=function(text,calculateDifference,length){if(text===void 0){text=\"\"}if(!this._init){return false}var size,tw,twi,cachedStyle,asymmetricDifference,maxAdvancedCacheLimit=this.options.maxCacheLimit,style=this.style||{},cache,advancedCacheKey,cacheName,cacheInitName;cache=this._advancedCache=this._advancedCache||(this._advancedCache={});advancedCacheKey=this._advancedCacheKey||(this._advancedCacheKey=[]);cacheName=text+style.fontSize+style.fontFamily+style.fontWeight+style.fontStyle;cacheInitName=text+\"init\"+style.fontSize+style.fontFamily+style.fontWeight+style.fontStyle;if(!this.ctx&&htmlSplCharSpace[text]){text=htmlSplCharSpace[text]}if(!calculateDifference){asymmetricDifference=0}else{if((asymmetricDifference=cache[cacheInitName])===undefined){tw=this._getDimention(text.repeat?text.repeat(length):Array(length+1).join(text)).width;twi=this._getDimention(text).width;asymmetricDifference=cache[cacheInitName]=(tw-length*twi)/(length+1);advancedCacheKey.push(cacheInitName);if(advancedCacheKey.length>maxAdvancedCacheLimit){delete cache[advancedCacheKey.shift()]}}}if(cachedStyle=cache[cacheName]){return{width:cachedStyle.width,height:cachedStyle.height}}size=this._getDimention(text);size.width+=asymmetricDifference;cache[cacheName]={width:size.width,height:size.height};advancedCacheKey.push(cacheName);if(advancedCacheKey.length>maxAdvancedCacheLimit){delete cache[advancedCacheKey.shift()]}return size};SmartLabelManager.prototype._getDimention=function(text){if(this.requireDiv||!this.ctx){return slLib._getDimentionUsingDiv(text,this)}else{return slLib._getDimentionUsingCanvas(text,this)}};SmartLabelManager.prototype._getWidthFn=function(){var sl=this,contObj=sl._containerObj,svgText=contObj.svgText;if(svgText){return function(str){var bbox,width;svgText.textContent=str;bbox=svgText.getBBox();width=bbox.width-SVG_BBOX_CORRECTION;if(width<1){width=bbox.width}return width}}else{return function(str){if(sl.requireDiv||!sl.ctx){return slLib._getDimentionUsingDiv(str,sl).width}else{return slLib._getDimentionUsingCanvas(str,sl).width}}}};SmartLabelManager.prototype._isSameStyle=function(){var sl=this,oldStyle=sl.oldStyle||{},style=sl.style;if(style.fontSize!==oldStyle.fontSize||style.fontFamily!==oldStyle.fontFamily||style.fontStyle!==oldStyle.fontStyle||style.fontWeight!==oldStyle.fontWeight||style.fontVariant!==oldStyle.fontVariant){return false}return true};SmartLabelManager.prototype._setStyleOfCanvas=function(){if(this._isSameStyle()){return}var sl=this,style=sl.style,hashString,sCont,fontStyle=style.fontStyle,fontVariant=style.fontVariant,fontWeight=style.fontWeight,fontSize=style.fontSize,fontFamily=style.fontFamily;fontSize+=fontSize.indexOf(\"px\")===-1?\"px\":\"\";hashString=fontStyle+\" \"+fontVariant+\" \"+fontWeight+\" \"+fontSize+\" \"+fontFamily;sl.ctx.font=hashString;sCont=this._containerObj=this._containerManager.get(style);if(this._containerObj){this._container=sCont.node;this._context=sCont.context;this._cache=sCont.charCache;this._lineHeight=sCont.lineHeight;this._styleNotSet=false}else{this._styleNotSet=true}sCont.ellipsesWidth=sl._calCharDimWithCache(\"...\",false).width;sCont.dotWidth=sl._calCharDimWithCache(\".\",false).width;sCont.lineHeight=this._lineHeight=sCont.lineHeight||slLib._getCleanHeight(style.lineHeight);this.oldStyle=style};SmartLabelManager.prototype._setStyleOfDiv=function(){var sCont,style=this.style;this._containerObj=sCont=this._containerManager.get(style);if(!sCont.node){this._containerManager._makeDivNode(this._containerObj)}if(this._containerObj){this._container=sCont.node;this._context=sCont.context;this._cache=sCont.charCache;this._lineHeight=sCont.lineHeight;this._styleNotSet=false}else{this._styleNotSet=true}};SmartLabelManager.prototype._updateStyle=function(){return this.requireDiv||!this.ctx?this._setStyleOfDiv():this._setStyleOfCanvas()};SmartLabelManager.prototype.setStyle=function(style){this.style=slLib.parseStyle(style);slLib.setLineHeight(this.style);return this};SmartLabelManager.prototype.useEllipsesOnOverflow=function(useEllipses){if(!this._init){return this}this._showNoEllipses=!useEllipses;return this};SmartLabelManager.prototype.getSmartText=function(text,maxWidth,maxHeight,noWrap){if(!this._init){return false}if(text===undefined||text===null){text=\"\"}else if(typeof text!==\"string\"){text=text.toString()}var len,trimStr,tempArr,tmpText,maxWidthWithEll,toolText,oriWidth,oriHeight,newCharIndex,nearestChar,tempChar,getWidth,initialLeft,initialTop,getOriSizeImproveObj,spanArr,x,y,minWidth,elem,chr,elemRightMostPoint,elemLowestPoint,lastBR,removeFromIndex,removeFromIndexForEllipses,hasHTMLTag=false,maxStrWidth=0,lastDash=-1,lastSpace=-1,lastIndexBroken=-1,strWidth=0,strHeight=0,oriTextArr=[],resolvedText=\"\",i=0,originalText,ellipsesStr=this._showNoEllipses?\"\":\"...\",lineHeight,context,container,sCont,ellipsesWidth,dotWidth,canvas=this.ctx,characterArr=[],dashIndex=-1,spaceIndex=-1,lastLineBreak=-1,hasOnlyBrTag,dimentionObj,fastTrim=function fastTrim(str){str=str.replace(/^\\s\\s*/,\"\");var ws=/\\s/,i=str.length;while(ws.test(str.charAt(i-=1))){}return str.slice(0,i+1)},smartLabel={text:text,maxWidth:maxWidth,maxHeight:maxHeight,width:null,height:null,oriTextWidth:null,oriTextHeight:null,oriText:text,isTruncated:false};hasHTMLTag=slLib.xmlTagRegEx.test(text)||slLib.nbspRegex.test(text);hasOnlyBrTag=slLib._hasOnlyBRTag(text);this.requireDiv=hasHTMLTag&&!hasOnlyBrTag;this._updateStyle();lineHeight=this._lineHeight;context=this._context;container=this._container;sCont=this._containerObj;ellipsesWidth=sCont.ellipsesWidth;dotWidth=sCont.dotWidth;toolText=text.replace(slLib.spanAdditionRegx,\"$2\");getWidth=this._getWidthFn();if(lineHeight-maxHeight<=1&&lineHeight-maxHeight>=0){maxHeight*=1.2}if(canvas||container){if(!documentSupport.isBrowserLess){tmpText=text=text.replace(slLib.ltgtquotRegex,(function(match){switch(match){case\"&lt;\":return\"<\";case\"&gt;\":return\">\";case\"&quot;\":return'\"';case\"&#034;\":return'\"';case\"&#039;\":return\"'\"}}));originalText=text;tmpText=text=tmpText.replace(/<u>/g,\"\").replace(/<\\/u>/g,\"\").replace(/<b>/g,\"\").replace(/<\\/b>/g,\"\").replace(/<strong>/g,\"\").replace(/<\\/strong>/g,\"\").replace(/<em>/g,\"\").replace(/<\\/em>/g,\"\").replace(/<i>/g,\"\").replace(/<\\/i>/g,\"\").replace(/<strike>/g,\"\").replace(/<\\/strike>/g,\"\").replace(/<s>/g,\"\").replace(/<\\/s>/g,\"\").replace(/<del>/g,\"\").replace(/<\\/del>/g,\"\").replace(/<sub>/g,\"\").replace(/<\\/sub>/g,\"\").replace(/<sup>/g,\"\").replace(/<\\/sup>/g,\"\").replace(/<a[\\s]+([^>]+)>/g,\"\").replace(/<\\/a>/g,\"\").replace(/<abbr[\\s]+([^>]+)>/g,\"\").replace(/<\\/abbr>/g,\"\").replace(/<span[\\s]+([^>]+)>/g,\"\").replace(/<\\/span>/g,\"\");if(!hasHTMLTag){tmpText=text=text.replace(slLib.ltgtquotRegex,(function(match){switch(match){case\"&lt;\":return\"<\";case\"&gt;\":return\">\";case\"&quot;\":return'\"';case\"&#034;\":return'\"';case\"&#039;\":return\"'\"}}));tmpText=text=tmpText.replace(/<u>/g,\"\").replace(/<\\/u>/g,\"\").replace(/<b>/g,\"\").replace(/<\\/b>/g,\"\").replace(/<strong>/g,\"\").replace(/<\\/strong>/g,\"\").replace(/<em>/g,\"\").replace(/<\\/em>/g,\"\").replace(/<i>/g,\"\").replace(/<\\/i>/g,\"\").replace(/<strike>/g,\"\").replace(/<\\/strike>/g,\"\").replace(/<s>/g,\"\").replace(/<\\/s>/g,\"\").replace(/<del>/g,\"\").replace(/<\\/del>/g,\"\").replace(/<sub>/g,\"\").replace(/<\\/sub>/g,\"\").replace(/<sup>/g,\"\").replace(/<\\/sup>/g,\"\").replace(/<a[\\s]+([^>]+)>/g,\"\").replace(/<\\/a>/g,\"\").replace(/<abbr[\\s]+([^>]+)>/g,\"\").replace(/<\\/abbr>/g,\"\").replace(/<span[\\s]+([^>]+)>/g,\"\").replace(/<\\/span>/g,\"\");getOriSizeImproveObj=this.getSize(tmpText,true,{hasHTMLTag:hasHTMLTag,hasOnlyBrTag:hasOnlyBrTag,cleanText:true});smartLabel.oriTextWidth=oriWidth=getOriSizeImproveObj.width;smartLabel.oriTextHeight=oriHeight=getOriSizeImproveObj.height}else if(hasOnlyBrTag){text=text.replace(slLib.brRegex,\"<br />\");dimentionObj=slLib._getDimentionOfMultiLineText(text,this);smartLabel.oriTextWidth=oriWidth=dimentionObj.width;smartLabel.oriTextHeight=oriHeight=dimentionObj.height}else{container.innerHTML=text;smartLabel.oriTextWidth=oriWidth=container.offsetWidth;smartLabel.oriTextHeight=oriHeight=container.offsetHeight}if(oriHeight<=maxHeight&&oriWidth<=maxWidth){resolvedText=doMergeTextWithTags(originalText,text);smartLabel.text=resolvedText;smartLabel.width=smartLabel.oriTextWidth=oriWidth;smartLabel.height=smartLabel.oriTextHeight=oriHeight;return smartLabel}if(lineHeight>maxHeight){smartLabel.text=\"\";smartLabel.width=smartLabel.oriTextWidth=0;smartLabel.height=smartLabel.oriTextHeight=0;return smartLabel}}text=fastTrim(text).replace(/(\\s+)/g,\" \");maxWidthWithEll=this._showNoEllipses?maxWidth:maxWidth-ellipsesWidth;if(!hasHTMLTag||hasOnlyBrTag){oriTextArr=slLib._getTextArray(text);len=oriTextArr.length;trimStr=\"\";tempArr=[];tempChar=oriTextArr[0];if(this._cache[tempChar]){minWidth=this._cache[tempChar].width}else{minWidth=getWidth(tempChar);this._cache[tempChar]={width:minWidth}}if(maxWidthWithEll>minWidth&&!hasOnlyBrTag){tempArr=text.substr(0,slLib.getNearestBreakIndex(text,maxWidthWithEll,this)).split(\"\")}else if(minWidth>maxWidth){smartLabel.text=\"\";smartLabel.width=smartLabel.oriTextWidth=smartLabel.height=smartLabel.oriTextHeight=0;return smartLabel}else if(ellipsesStr){maxWidthWithEll=maxWidth-2*dotWidth;if(maxWidthWithEll>minWidth){ellipsesStr=\"..\"}else{maxWidthWithEll=maxWidth-dotWidth;if(maxWidthWithEll>minWidth){ellipsesStr=\".\"}else{maxWidthWithEll=0;ellipsesStr=\"\"}}}i=tempArr.length;strWidth=getWidth(tempArr.join(\"\"));strHeight=this._lineHeight;if(noWrap){for(;i<len;i+=1){tempChar=tempArr[i]=oriTextArr[i];if(tempArr[i]===\"<br />\"){strHeight+=this._lineHeight;lastIndexBroken=i;maxStrWidth=max(maxStrWidth,strWidth);strWidth=0;trimStr=null;continue}if(this._cache[tempChar]){minWidth=this._cache[tempChar].width}else{if(!getOriSizeImproveObj||!(minWidth=getOriSizeImproveObj.detailObj[tempChar])){minWidth=getWidth(tempChar)}this._cache[tempChar]={width:minWidth}}strWidth+=minWidth;if(strWidth>maxWidthWithEll){if(!trimStr){trimStr=tempArr.slice(0,-1).join(\"\")}if(strWidth>maxWidth){smartLabel.text=fastTrim(trimStr)+ellipsesStr;smartLabel.tooltext=smartLabel.oriText;smartLabel.width=max(maxStrWidth,strWidth);smartLabel.height=strHeight;smartLabel.isTruncated=true;return smartLabel}}}smartLabel.text=tempArr.join(\"\");smartLabel.width=max(maxStrWidth,strWidth);smartLabel.height=strHeight;return smartLabel}else{for(;i<len;i+=1){tempChar=tempArr[i]=oriTextArr[i];if(tempChar===\" \"&&!context){tempChar=this.ctx?\" \":\"&nbsp;\"}if(tempArr[i]===\"<br />\"){maxStrWidth=max(maxStrWidth,strWidth);strHeight+=this._lineHeight;if(strHeight<=maxHeight){lastIndexBroken=i;strWidth=0;trimStr=null;continue}else if(strHeight>maxHeight){trimStr=tempArr.slice(0,-1).join(\"\");smartLabel.text=fastTrim(trimStr)+ellipsesStr;smartLabel.tooltext=toolText;smartLabel.width=maxStrWidth;smartLabel.height=strHeight-this._lineHeight;smartLabel.isTruncated=true;return smartLabel}}if(this._cache[tempChar]){minWidth=this._cache[tempChar].width}else{if(!getOriSizeImproveObj||!(minWidth=getOriSizeImproveObj.detailObj[tempChar])){minWidth=getWidth(tempChar)}this._cache[tempChar]={width:minWidth}}strWidth+=minWidth;if(strWidth>maxWidthWithEll){if(!trimStr){trimStr=tempArr.slice(0,-1).join(\"\")}if(strWidth>maxWidth){if(oriTextArr[i+1]===\"<br />\"){continue}lastSpace=slLib._findLastIndex(oriTextArr.slice(0,tempArr.length),\" \");lastDash=slLib._findLastIndex(oriTextArr.slice(0,tempArr.length),\"-\");if(lastSpace>lastIndexBroken){strWidth=getWidth(tempArr.slice(lastIndexBroken+1,lastSpace).join(\"\"));tempArr.splice(lastSpace,1,\"<br />\");lastIndexBroken=lastSpace;newCharIndex=lastSpace+1}else if(lastDash>lastIndexBroken){if(lastDash===tempArr.length-1){strWidth=getWidth(tempArr.slice(lastIndexBroken+1,lastSpace).join(\"\"));tempArr.splice(lastDash,1,\"<br />-\")}else{strWidth=getWidth(tempArr.slice(lastIndexBroken+1,lastSpace).join(\"\"));tempArr.splice(lastDash,1,\"-<br />\")}lastIndexBroken=lastDash;newCharIndex=lastDash+1}else{tempArr.splice(tempArr.length-1,1,\"<br />\"+oriTextArr[i]);lastLineBreak=tempArr.length-2;strWidth=getWidth(tempArr.slice(lastIndexBroken+1,lastLineBreak+1).join(\"\"));lastIndexBroken=lastLineBreak;newCharIndex=i}strHeight+=this._lineHeight;if(strHeight>maxHeight){smartLabel.text=fastTrim(trimStr)+ellipsesStr;smartLabel.tooltext=smartLabel.oriText;smartLabel.width=maxWidth;smartLabel.height=strHeight-this._lineHeight;smartLabel.isTruncated=true;return smartLabel}else{maxStrWidth=max(maxStrWidth,strWidth);trimStr=null;if(!hasOnlyBrTag){nearestChar=slLib.getNearestBreakIndex(text.substr(newCharIndex),maxWidthWithEll,this);strWidth=getWidth(text.substr(newCharIndex,nearestChar||1));if(tempArr.length<newCharIndex+nearestChar){tempArr=tempArr.concat(text.substr(tempArr.length,newCharIndex+nearestChar-tempArr.length).split(\"\"));i=tempArr.length-1}}else{strWidth=slLib._getDimentionOfMultiLineText(tempArr.slice(lastIndexBroken+1).join(\"\"),this).width}}}}}maxStrWidth=max(maxStrWidth,strWidth);resolvedText=doMergeTextWithTags(originalText,tempArr.join(\"\"));smartLabel.text=resolvedText;smartLabel.width=maxStrWidth;smartLabel.height=strHeight;return smartLabel}}else{toolText=text.replace(slLib.spanAdditionRegx,\"$2\");text=text.replace(slLib.spanAdditionRegx,slLib.spanAdditionReplacer);text=text.replace(/(<br\\s*\\/*\\>)/g,'<span class=\"'+[slLib.classNameWithTag,\" \",slLib.classNameWithTagBR].join(\"\")+'\">$1</span>');container.innerHTML=text;spanArr=container[documentSupport.childRetriverFn](documentSupport.childRetriverString);for(x=0,y=spanArr.length;x<y;x+=1){elem=spanArr[x];if(documentSupport.noClassTesting||slLib.classNameReg.test(elem.className)){chr=elem.innerHTML;if(chr!==\"\"){if(chr===\" \"){spaceIndex=characterArr.length}else if(chr===\"-\"){dashIndex=characterArr.length}characterArr.push({spaceIdx:spaceIndex,dashIdx:dashIndex,elem:elem});oriTextArr.push(chr)}}}i=0;len=characterArr.length;minWidth=len&&characterArr[0].elem.offsetWidth;if(minWidth>maxWidth||!len){smartLabel.text=\"\";smartLabel.width=smartLabel.oriTextWidth=smartLabel.height=smartLabel.oriTextHeight=0;return smartLabel}else if(minWidth>maxWidthWithEll&&!this._showNoEllipses){maxWidthWithEll=maxWidth-2*dotWidth;if(maxWidthWithEll>minWidth){ellipsesStr=\"..\"}else{maxWidthWithEll=maxWidth-dotWidth;if(maxWidthWithEll>minWidth){ellipsesStr=\".\"}else{maxWidthWithEll=0;ellipsesStr=\"\"}}}initialLeft=characterArr[0].elem.offsetLeft;initialTop=characterArr[0].elem.offsetTop;if(noWrap){for(;i<len;i+=1){elem=characterArr[i].elem;elemRightMostPoint=elem.offsetLeft-initialLeft+elem.offsetWidth;if(elemRightMostPoint>maxWidthWithEll){if(!removeFromIndexForEllipses){removeFromIndexForEllipses=i}if(container.offsetWidth>maxWidth){removeFromIndex=i;i=len}}}}else{for(;i<len;i+=1){elem=characterArr[i].elem;elemLowestPoint=elem.offsetHeight+(elem.offsetTop-initialTop);elemRightMostPoint=elem.offsetLeft-initialLeft+elem.offsetWidth;lastBR=null;if(elemRightMostPoint>maxWidthWithEll){if(!removeFromIndexForEllipses){removeFromIndexForEllipses=i}if(elemRightMostPoint>maxWidth){lastSpace=characterArr[i].spaceIdx;lastDash=characterArr[i].dashIdx;if(lastSpace>lastIndexBroken){characterArr[lastSpace].elem.innerHTML=\"<br/>\";lastIndexBroken=lastSpace}else if(lastDash>lastIndexBroken){if(lastDash===i){characterArr[lastDash].elem.innerHTML=\"<br/>-\"}else{characterArr[lastDash].elem.innerHTML=\"-<br/>\"}lastIndexBroken=lastDash}else{elem.parentNode.insertBefore(lastBR=doc.createElement(\"br\"),elem)}if(elem.offsetHeight+elem.offsetTop>maxHeight){if(lastBR){lastBR.parentNode.removeChild(lastBR)}else if(lastIndexBroken===lastDash){characterArr[lastDash].elem.innerHTML=\"-\"}else{characterArr[lastSpace].elem.innerHTML=\" \"}removeFromIndex=i;i=len}else{removeFromIndexForEllipses=null}}}else{if(elemLowestPoint>maxHeight){removeFromIndex=i;i=len}}}}if(removeFromIndex<len){smartLabel.isTruncated=true;removeFromIndexForEllipses=removeFromIndexForEllipses?removeFromIndexForEllipses:removeFromIndex;for(i=len-1;i>=removeFromIndexForEllipses;i-=1){elem=characterArr[i].elem;elem.parentNode.removeChild(elem)}for(;i>=0;i-=1){elem=characterArr[i].elem;if(slLib.classNameBrReg.test(elem.className)){elem.parentNode.removeChild(elem)}else{i=0}}}smartLabel.text=container.innerHTML.replace(slLib.spanRemovalRegx,\"$1\").replace(/\\&amp\\;/g,\"&\");if(smartLabel.isTruncated){smartLabel.text+=ellipsesStr;smartLabel.tooltext=toolText}}smartLabel.height=container.offsetHeight;smartLabel.width=container.offsetWidth;return smartLabel}else{smartLabel.error=new Error(\"Body Tag Missing!\");return smartLabel}};SmartLabelManager.prototype.getSize=function(text,detailedCalculationFlag,config){if(text===void 0){text=\"\"}if(detailedCalculationFlag===void 0){detailedCalculationFlag=true}if(config===void 0){config={}}if(!this._init){return false}if(text===undefined||text===null){text=\"\"}else if(typeof text!==\"string\"){text=text.toString()}var textArr,letter,lSize,i,l,cumulativeSize=0,height=0,container,indiSizeStore={},hasHTMLTag=config.hasHTMLTag,hasOnlyBrTag=config.hasOnlyBrTag;if(typeof hasHTMLTag===\"undefined\"){hasHTMLTag=slLib.xmlTagRegEx.test(text)||slLib.nbspRegex.test(text)}if(typeof hasOnlyBrTag===\"undefined\"){hasOnlyBrTag=slLib._hasOnlyBRTag(text)}this.requireDiv=hasHTMLTag&&!hasOnlyBrTag;if(!config.cleanText){text=text.replace(slLib.ltgtquotRegex,(function(match){switch(match){case\"&lt;\":return\"<\";case\"&gt;\":return\">\";case\"&quot;\":return'\"';case\"&#034;\":return'\"';case\"&#039;\":return\"'\"}}));text=text.replace(/<u>/g,\"\").replace(/<\\/u>/g,\"\").replace(/<b>/g,\"\").replace(/<\\/b>/g,\"\").replace(/<strong>/g,\"\").replace(/<\\/strong>/g,\"\").replace(/<em>/g,\"\").replace(/<\\/em>/g,\"\").replace(/<i>/g,\"\").replace(/<\\/i>/g,\"\").replace(/<strike>/g,\"\").replace(/<\\/strike>/g,\"\").replace(/<s>/g,\"\").replace(/<\\/s>/g,\"\").replace(/<del>/g,\"\").replace(/<\\/del>/g,\"\").replace(/<sub>/g,\"\").replace(/<\\/sub>/g,\"\").replace(/<sup>/g,\"\").replace(/<\\/sup>/g,\"\").replace(/<a[\\s]+([^>]+)>/g,\"\").replace(/<\\/a>/g,\"\").replace(/<abbr[\\s]+([^>]+)>/g,\"\").replace(/<\\/abbr>/g,\"\").replace(/<span[\\s]+([^>]+)>/g,\"\").replace(/<\\/span>/g,\"\")}this._updateStyle();container=this._container;if(!detailedCalculationFlag){return this._calCharDimWithCache(text)}else{textArr=text.split(\"\");for(i=0,l=textArr.length;i<l;i++){letter=textArr[i];lSize=this._calCharDimWithCache(letter,false,textArr.length);height=max(height,lSize.height);cumulativeSize+=lSize.width;indiSizeStore[letter]=lSize.width}}if(hasOnlyBrTag){return _objectSpread(_objectSpread({},slLib._getDimentionOfMultiLineText(text,this)),{},{detailObj:indiSizeStore})}if(hasHTMLTag){container.innerHTML=text;return{width:container.offsetWidth,height:container.offsetHeight,detailObj:indiSizeStore}}return{width:round(cumulativeSize),height:height,detailObj:indiSizeStore}};SmartLabelManager.prototype.getOriSize=function(text,detailedCalculationFlag,config){if(text===void 0){text=\"\"}if(detailedCalculationFlag===void 0){detailedCalculationFlag=true}if(config===void 0){config={}}return this.getSize(text,detailedCalculationFlag,config)};SmartLabelManager.prototype.dispose=function(){if(!this._init){return this}if(this._containerManager&&this._containerManager.dispose){this._containerManager.dispose()}delete this._container;delete this._context;delete this._cache;delete this._containerManager;delete this._containerObj;delete this.id;delete this.style;delete this.parentContainer;delete this._showNoEllipses;return this};var _default=SmartLabelManager;exports.default=_default;"]},"metadata":{},"sourceType":"script"}