{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.yearObj = exports.default = void 0;\n\nvar _timeIntervalYear = _interopRequireDefault(require(\"./time-interval-year.js\"));\n\nvar _durations = require(\"./durations.js\");\n\nvar _timeIntervalclip = require(\"./time-intervalclip\");\n\nvar yearObj = {\n  name: \"year\",\n  floor: function floor(d, clippedDates, timeUniverse) {\n    var yearFloor;\n    d.setMonth(0, 1);\n    yearFloor = new Date(Number((0, _timeIntervalclip.getFloor)(new Date(Number(d.setHours(0, 0, 0, 0))), clippedDates, timeUniverse)));\n    return yearFloor;\n  },\n  offset: function offset(d, s, clippedDates, timeUniverse) {\n    var isPositiveOffset = s > 0,\n        dateObj = {\n      date: new Date(Number(d))\n    },\n        cloneDate = new Date(Number(dateObj.date));\n    return new Date(Number(isPositiveOffset ? (0, _timeIntervalclip.clampDownDateWithinClip)(dateObj.date, new Date(Number(cloneDate.setFullYear(cloneDate.getFullYear() + s))), clippedDates, timeUniverse) : (0, _timeIntervalclip.clampUpDateWithinClip)(dateObj.date, new Date(Number(cloneDate.setFullYear(cloneDate.getFullYear() + s))), clippedDates, timeUniverse)));\n  },\n  count: function count(s, e, clippedDates) {\n    var clipArray = (0, _timeIntervalclip.getValidDatesWithin)(clippedDates, s, e),\n        clipDuration = 0,\n        clipDates = (0, _timeIntervalclip.getClampRangesAround)(clippedDates, e);\n    clipArray = (0, _timeIntervalclip.getClipArray)(clipDates, clipArray);\n    clipArray.forEach(function (date) {\n      clipDuration += Number(date.to) - Number(date.from);\n    });\n    return e.getFullYear() - s.getFullYear() - Math.floor(clipDuration / _durations.durationYear);\n  },\n  field: function field(d, clippedDates, timeUniverse) {\n    var dateObj = {\n      date: new Date(Number(d))\n    },\n        cloneDate = new Date(Number(dateObj.date)),\n        clipArray = [],\n        floorDate,\n        clipDuration = 0;\n    cloneDate.setFullYear(0);\n    floorDate = (0, _timeIntervalclip.getFloor)(new Date(Number(cloneDate)), clippedDates, timeUniverse);\n    clipArray = (0, _timeIntervalclip.getValidDatesWithin)(clippedDates, new Date(Number(floorDate)), dateObj.date);\n    clipArray.forEach(function (date) {\n      clipDuration += Number(date.to) - Number(date.from);\n    });\n    return d.getFullYear() - floorDate.getFullYear() - Math.floor(clipDuration / _durations.durationYear);\n  }\n},\n    year = new _timeIntervalYear.default(yearObj);\nexports.yearObj = yearObj;\nvar _default = year;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/utils/src/time-intervals/year.js"],"names":["_interopRequireDefault","require","exports","__esModule","yearObj","default","_timeIntervalYear","_durations","_timeIntervalclip","name","floor","d","clippedDates","timeUniverse","yearFloor","setMonth","Date","Number","getFloor","setHours","offset","s","isPositiveOffset","dateObj","date","cloneDate","clampDownDateWithinClip","setFullYear","getFullYear","clampUpDateWithinClip","count","e","clipArray","getValidDatesWithin","clipDuration","clipDates","getClampRangesAround","getClipArray","forEach","to","from","Math","durationYear","field","floorDate","year","_default"],"mappings":"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","sourcesContent":["\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.yearObj=exports.default=void 0;var _timeIntervalYear=_interopRequireDefault(require(\"./time-interval-year.js\"));var _durations=require(\"./durations.js\");var _timeIntervalclip=require(\"./time-intervalclip\");var yearObj={name:\"year\",floor:function floor(d,clippedDates,timeUniverse){var yearFloor;d.setMonth(0,1);yearFloor=new Date(Number((0,_timeIntervalclip.getFloor)(new Date(Number(d.setHours(0,0,0,0))),clippedDates,timeUniverse)));return yearFloor},offset:function offset(d,s,clippedDates,timeUniverse){var isPositiveOffset=s>0,dateObj={date:new Date(Number(d))},cloneDate=new Date(Number(dateObj.date));return new Date(Number(isPositiveOffset?(0,_timeIntervalclip.clampDownDateWithinClip)(dateObj.date,new Date(Number(cloneDate.setFullYear(cloneDate.getFullYear()+s))),clippedDates,timeUniverse):(0,_timeIntervalclip.clampUpDateWithinClip)(dateObj.date,new Date(Number(cloneDate.setFullYear(cloneDate.getFullYear()+s))),clippedDates,timeUniverse)))},count:function count(s,e,clippedDates){var clipArray=(0,_timeIntervalclip.getValidDatesWithin)(clippedDates,s,e),clipDuration=0,clipDates=(0,_timeIntervalclip.getClampRangesAround)(clippedDates,e);clipArray=(0,_timeIntervalclip.getClipArray)(clipDates,clipArray);clipArray.forEach((function(date){clipDuration+=Number(date.to)-Number(date.from)}));return e.getFullYear()-s.getFullYear()-Math.floor(clipDuration/_durations.durationYear)},field:function field(d,clippedDates,timeUniverse){var dateObj={date:new Date(Number(d))},cloneDate=new Date(Number(dateObj.date)),clipArray=[],floorDate,clipDuration=0;cloneDate.setFullYear(0);floorDate=(0,_timeIntervalclip.getFloor)(new Date(Number(cloneDate)),clippedDates,timeUniverse);clipArray=(0,_timeIntervalclip.getValidDatesWithin)(clippedDates,new Date(Number(floorDate)),dateObj.date);clipArray.forEach((function(date){clipDuration+=Number(date.to)-Number(date.from)}));return d.getFullYear()-floorDate.getFullYear()-Math.floor(clipDuration/_durations.durationYear)}},year=new _timeIntervalYear.default(yearObj);exports.yearObj=yearObj;var _default=year;exports.default=_default;"]},"metadata":{},"sourceType":"script"}