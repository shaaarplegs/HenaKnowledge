{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireWildcard = require(\"@babel/runtime/helpers/interopRequireWildcard\");\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _cartesian = _interopRequireWildcard(require(\"./cartesian\"));\n\nvar _lib = require(\"../lib\");\n\nvar _commonApi = require(\"./common-api\");\n\nvar _safeMax = _interopRequireDefault(require(\"@fusioncharts/utils/src/array/safe-max\"));\n\nvar ROTATED_LABEL_PADDING = 3,\n    ROTATED_LABEL_MIN_GAP = 10,\n    WWW_STR = \"WWW\",\n    W_STR = \"W\";\n\nvar CartesainLabelManager = function (_Cartesian) {\n  (0, _inheritsLoose2.default)(CartesainLabelManager, _Cartesian);\n\n  function CartesainLabelManager() {\n    return _Cartesian.apply(this, arguments) || this;\n  }\n\n  var _proto = CartesainLabelManager.prototype;\n\n  _proto._getHMaxLabelDimention = function _getHMaxLabelDimention(_maxHeight) {\n    var axis = this,\n        maxHeight = _maxHeight,\n        axisConfig = axis.config,\n        chart = axis.getFromEnv(\"chart\"),\n        chartConfig = chart.config,\n        smartLabel = chart.getFromEnv(\"smartLabel\"),\n        axisRange = axisConfig.axisRange,\n        labels = axisConfig.labels,\n        labelDisplay = axisConfig.labelDisplay,\n        slantLabel = axisConfig.slantLabel,\n        labelStyle = labels.style,\n        userMaxLabelHeight = axisConfig.maxLabelHeight,\n        increment = axis.getInterval(),\n        staggerLines = axisConfig.staggerLines,\n        labelStep = axisConfig.labelStep,\n        canvasLeft = chartConfig.canvasLeft,\n        canvasRight = chartConfig.canvasRight,\n        rWidthAdjstFactor = staggerLines - 2,\n        labelHeightAllotment,\n        sWidthAdjstFactor,\n        staggerLineAvailed,\n        max = axisRange.max,\n        min = axisRange.min,\n        maxTextSize = 0,\n        allCategories = axisConfig.tickValues && axisConfig.tickValues.tickValue,\n        allCategoryLen = allCategories && allCategories.length,\n        distributedColumns = chart.distributedColumns,\n        labelGap,\n        categoryLength = 0,\n        singleCategory,\n        overriddenStyle,\n        intervalWidth,\n        maxLabelObj = {\n      text: _lib.UNDEF,\n      width: 0,\n      style: _lib.UNDEF\n    },\n        maxLabelHeight = 0,\n        smartLabelText,\n        axisXPadding = 4,\n        getAllottedWidth,\n        getAllottedHeight,\n        confMeasurement,\n        updateCategoryMeta = _lib.stubFN,\n        finalRotationDecision = _lib.stubFN,\n        reCalculateStaggerLines = _lib.stubFN,\n        testString = WWW_STR,\n        W = W_STR,\n        minPxPerLabel = 60,\n        categoryAxisMeasurement = {},\n        maxText,\n        countValue,\n        firstValue,\n        firstLabel,\n        lastLabel,\n        i,\n        count,\n        text,\n        value,\n        numberFormatterFn,\n        retObj,\n        cumulativeSum = 0,\n        defTextPadding = 2,\n        reCalrequired = false,\n        skipCount = 0,\n        defaultSpanRadius = 2,\n        lastStepX,\n        forceHeight,\n        categoryCalculationInitiated = false,\n        refSmartText,\n        limit,\n        minIrrPx,\n        prevCategory,\n        lastMinIrrStep = Number.POSITIVE_INFINITY,\n        firstCategory,\n        lastCategory,\n        catLength,\n        isZoomed,\n        prevStyleStr,\n        currStyleStr,\n        ticks = axisConfig.ticks,\n        ln,\n        tick,\n        autoWrapLimit,\n        absMaxSmartText,\n        minIrrStep = Number.POSITIVE_INFINITY;\n\n    if (distributedColumns) {\n      for (i = 0; i < allCategoryLen; i++) {\n        if (allCategories[i + 1]) {\n          if (allCategories[i].x) {\n            allCategories[i].plotWidth = axis.getPixel(allCategories[i + 1].x - allCategories[i].x) - axis.getPixel(0);\n          }\n        } else {\n          allCategories[i].plotWidth = axis.getPixel(chartConfig.canvasRight - allCategories[i].x) - axis.getPixel(0);\n        }\n      }\n    }\n\n    if (axisConfig.tickValues && (!allCategories || allCategories.length === 0)) {\n      return {\n        width: 0,\n        height: 0\n      };\n    }\n\n    if (labelDisplay === \"rotate\") {\n      axisConfig.rotateLabels = 1;\n    }\n\n    if (!axisConfig.tickValues) {\n      axisConfig.irregularCatAxis = false;\n    }\n\n    axisConfig.sWidthAdjstFactor = sWidthAdjstFactor = rWidthAdjstFactor === 0 ? 1 : rWidthAdjstFactor === 1 ? 1.5 : rWidthAdjstFactor;\n    smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n    smartLabel.setStyle({\n      fontSize: labelStyle.fontSize,\n      fontFamily: labelStyle.fontFamily,\n      lineHeight: labelStyle.lineHeight,\n      fontWeight: labelStyle.fontWeight\n    });\n\n    function getMarginalDistance(x, position) {\n      switch (position.toLowerCase()) {\n        case \"left\":\n          return Math.abs(axis._getCustomPixel(x));\n\n        case \"right\":\n          return Math.abs(chartConfig.width - axis._getCustomPixel(x));\n      }\n    }\n\n    if (axisConfig.irregularCatAxis) {\n      allCategories.sort(function (m, n) {\n        return m.x - n.x;\n      });\n\n      for (i = 0, categoryLength = allCategories.length; i < categoryLength; i++) {\n        singleCategory = allCategories[i];\n\n        if (typeof lastStepX !== \"undefined\") {\n          minIrrStep = Math.abs(singleCategory.x - lastStepX);\n          minIrrPx = Math.abs(axis._getCustomPixel(min) - axis._getCustomPixel(min + minIrrStep));\n          smartLabel.setStyle(Object.assign({}, singleCategory.style));\n          refSmartText = smartLabel.getOriSize(W);\n          limit = refSmartText.width;\n\n          if (minIrrPx < limit * 1.2) {\n            singleCategory.label = _lib.BLANKSTRING;\n            minIrrStep = lastMinIrrStep;\n            continue;\n          }\n\n          prevCategory._individualIWR = minIrrPx;\n          singleCategory._individualIWL = minIrrPx;\n          lastMinIrrStep = minIrrStep;\n        }\n\n        prevCategory = singleCategory;\n        lastStepX = singleCategory.x;\n      }\n\n      if (minIrrStep === Number.POSITIVE_INFINITY) {\n        minIrrStep = Math.floor(Math.min(singleCategory.x, max - singleCategory.x));\n        minIrrStep = Math.max(minIrrStep, 2 * defaultSpanRadius);\n      }\n\n      for (i = 0, categoryLength = allCategories.length; i < categoryLength; i++) {\n        singleCategory = allCategories[i];\n\n        if (!i) {\n          singleCategory._individualIWL = Infinity;\n        }\n\n        if (i === categoryLength - 1) {\n          singleCategory._individualIWR = Infinity;\n        }\n\n        singleCategory.individualIW = Math.min(singleCategory._individualIWL, singleCategory._individualIWR);\n      }\n\n      intervalWidth = Math.abs(axis._getCustomPixel(min) - axis._getCustomPixel(min + minIrrStep));\n      intervalWidth = Math.min(2 * getMarginalDistance(allCategories[0].x, \"left\"), 2 * getMarginalDistance(allCategories[categoryLength - 1].x, \"right\"), intervalWidth);\n    } else {\n      intervalWidth = Math.abs(axis._getCustomPixel(min) - axis._getCustomPixel(min + increment));\n    }\n\n    maxHeight = userMaxLabelHeight || maxHeight;\n    categoryAxisMeasurement.__root__ = {\n      getHeight: function getHeight(itr) {\n        var cat = allCategories[itr],\n            lineHeight = cat._ovrStyle.lineHeight,\n            lineHeightInt = parseInt(lineHeight.replace(/(\\d+)px/, \"$1\"), 10);\n        return lineHeightInt;\n      },\n      getWidth: function getWidth() {\n        return maxHeight;\n      },\n      getCalculatedLabelStep: function getCalculatedLabelStep(allCatArr) {\n        var _i = 0,\n            _l = allCatArr.length,\n            _maxSpan = Number.NEGATIVE_INFINITY,\n            _maxCatObj = {},\n            styleStr,\n            style,\n            label,\n            _cat,\n            _catLabel,\n            key,\n            possibleLabelsNo,\n            labelCount = 0,\n            referenceSide,\n            slHeight,\n            rotateLabels = axisConfig.rotateLabels,\n            maxCategory,\n            isWrapIntended = labelDisplay === \"wrap\" || labelDisplay === \"auto\",\n            _fStep;\n\n        for (_i = 0; _i < _l; _i++) {\n          _cat = allCatArr[_i];\n          _cat.style = _cat.style || {};\n        }\n\n        if (axisConfig.irregularCatAxis) {\n          return axisConfig.labelStep;\n        }\n\n        for (_i = 0; _i < _l; _i++) {\n          _cat = allCatArr[_i];\n\n          if (!_cat) {\n            continue;\n          }\n\n          _cat.label || (_cat.label = \"\");\n          _catLabel = _cat.oriLabel || _cat.label;\n          overriddenStyle = {\n            fontSize: labelStyle.fontSize,\n            fontFamily: labelStyle.fontFamily,\n            lineHeight: labelStyle.lineHeight,\n            fontWeight: labelStyle.fontWeight\n          };\n          labelCount++;\n          _cat.style = _cat.style || {};\n          (0, _lib.extend2)(overriddenStyle, _cat.style);\n          styleStr = overriddenStyle.fontSize + overriddenStyle.fontFamily + overriddenStyle.lineHeight + overriddenStyle.fontWeight;\n\n          if (_maxCatObj[styleStr]) {\n            if (_catLabel.length > _maxCatObj[styleStr].label.length) {\n              _maxCatObj[styleStr].label = _catLabel;\n            }\n          } else {\n            _maxCatObj[styleStr] = {\n              label: _catLabel,\n              style: overriddenStyle\n            };\n          }\n        }\n\n        for (key in _maxCatObj) {\n          if (_maxCatObj.hasOwnProperty(key)) {\n            style = _maxCatObj[key].style;\n            label = _maxCatObj[key].label;\n            style.lineHeight = (0, _lib.setLineHeight)(style);\n            smartLabel.setStyle(style);\n            rotateLabels && (slHeight = parseInt(style.lineHeight, 10));\n            smartLabelText = smartLabel.getSmartText(label, _lib.UNDEF, slHeight);\n\n            if (rotateLabels === 0) {\n              referenceSide = smartLabelText.width > minPxPerLabel ? minPxPerLabel : smartLabelText.width;\n            } else {\n              referenceSide = smartLabelText.height;\n            }\n\n            if (referenceSide > _maxSpan) {\n              _maxSpan = referenceSide;\n              maxCategory = _maxCatObj[key];\n            }\n          }\n        }\n\n        if (isWrapIntended) {\n          _maxSpan = Math.min(autoWrapLimit, _maxSpan);\n        }\n\n        possibleLabelsNo = Math.floor(Math.abs(axis._getCustomPixel(max) - axis._getCustomPixel(min)) / _maxSpan);\n        _fStep = Math.max(Math.ceil(labelCount / possibleLabelsNo), axisConfig.labelStep);\n        intervalWidth = Math.abs(axis._getCustomPixel(min) - axis._getCustomPixel(min + _fStep));\n\n        if (isWrapIntended && rotateLabels === 0) {\n          smartLabel.setStyle(maxCategory.style);\n          var maxCharDim = (0, _safeMax.default)(Object.values(smartLabel.getOriSize(maxCategory.label).detailObj));\n\n          if (maxCharDim > intervalWidth - 2 * axisXPadding) {\n            _fStep += 1;\n            intervalWidth = Math.abs(axis._getCustomPixel(min) - axis._getCustomPixel(min + _fStep));\n            return _fStep;\n          }\n        }\n\n        if (labelCount <= possibleLabelsNo) {\n          return axisConfig.labelStep;\n        }\n\n        return _fStep;\n      }\n    };\n    categoryAxisMeasurement._inProp = {};\n\n    categoryAxisMeasurement.getCopyById = function (id) {\n      var cam = this,\n          propStore = cam._inProp,\n          root = cam.__root__,\n          copyStore = propStore.copyStore,\n          copyById;\n      copyStore = copyStore || {};\n      copyById = copyStore[id];\n\n      if (copyById) {\n        return copyById;\n      }\n\n      (0, _lib.extend2)(copyById = copyStore[id] = {}, root);\n      return copyById;\n    };\n\n    if (axisConfig.tickValues) {\n      switch (labelDisplay) {\n        case \"rotate\":\n          if (slantLabel) {\n            labels.rotation = 300;\n          } else {\n            labels.rotation = 270;\n          }\n\n          confMeasurement = categoryAxisMeasurement.getCopyById(\"rotate\");\n          break;\n\n        case \"stagger\":\n          confMeasurement = categoryAxisMeasurement.getCopyById(\"stagger\");\n\n          confMeasurement.getHeight = function (categoryIndex) {\n            var allCat, cat, catStyle, metrics;\n            allCat = axisConfig.tickValues.tickValue;\n            cat = allCat[categoryIndex];\n            catStyle = cat && cat.style || (cat.style = {});\n            overriddenStyle = {\n              fontSize: labelStyle.fontSize,\n              fontFamily: labelStyle.fontFamily,\n              lineHeight: labelStyle.lineHeight,\n              fontWeight: labelStyle.fontWeight\n            };\n            (0, _lib.extend2)(overriddenStyle, catStyle);\n            smartLabel.setStyle(overriddenStyle);\n            metrics = smartLabel.getOriSize(cat.label);\n            return metrics.height;\n          };\n\n          confMeasurement.getWidth = function (cat) {\n            axisXPadding = 1;\n            return cat.individualIW ? cat.individualIW : 2 * intervalWidth * sWidthAdjstFactor - axisXPadding;\n          };\n\n          reCalculateStaggerLines = function reCalculateStaggerLines(categories) {\n            var category,\n                categoryLen = categories.length,\n                lastElement,\n                defLineHeight,\n                lastCSum = 0,\n                index,\n                rSum,\n                calStaggerLines,\n                itrStep,\n                smartTestText;\n            smartLabel.setStyle(labelStyle);\n            smartTestText = smartLabel.getOriSize(testString);\n            defLineHeight = smartTestText.height;\n            lastElement = categories[categoryLen - 1];\n\n            if (Math.floor(lastElement._cumulativeSum) <= Math.ceil(categoryLen * (defLineHeight + defTextPadding))) {\n              calStaggerLines = Math.floor(maxHeight / defLineHeight);\n              staggerLines = calStaggerLines - staggerLines < 0 ? calStaggerLines : staggerLines;\n            } else {\n              calStaggerLines = Math.floor(maxHeight / (defLineHeight + 2 * defTextPadding));\n\n              do {\n                lastCSum = 0;\n                itrStep = calStaggerLines;\n\n                for (index = itrStep - 1, categoryLen = categories.length; index < categoryLen;) {\n                  if (categoryLen - index < calStaggerLines) {\n                    index = categoryLen - 1;\n                  }\n\n                  category = categories[index];\n                  rSum = category._cumulativeSum - lastCSum;\n\n                  if (~~rSum > -~maxHeight) {\n                    reCalrequired = true;\n                    break;\n                  } else {\n                    reCalrequired = false;\n                  }\n\n                  lastCSum = category._cumulativeSum;\n                  index += itrStep;\n                }\n              } while (calStaggerLines-- && reCalrequired);\n\n              calStaggerLines++;\n              staggerLines = Math.min(staggerLines, calStaggerLines);\n            }\n\n            axisConfig.drawnStaggerLines = staggerLines;\n          };\n\n          updateCategoryMeta = function updateCategoryMeta(categories) {\n            var category,\n                catStyle,\n                categoryLen,\n                catLineHeight,\n                index,\n                nonSkipCount = 0;\n\n            for (index = 0, categoryLen = categories.length; index < categoryLen; index++) {\n              category = categories[index];\n\n              if (category.stepSkipped) {\n                continue;\n              }\n\n              catStyle = category && category.style || {};\n\n              if (!(catLineHeight = catStyle.lineHeight)) {\n                catLineHeight = labelStyle.lineHeight;\n              }\n\n              staggerLineAvailed = nonSkipCount++ % staggerLines;\n\n              if (staggerLineAvailed) {\n                category.labelPadding = catLineHeight.replace(/px/i, \"\") * staggerLineAvailed;\n              } else {\n                category.labelPadding = 0;\n              }\n            }\n          };\n\n          break;\n\n        case \"none\":\n          confMeasurement = categoryAxisMeasurement.getCopyById(\"none\");\n          confMeasurement.getHeight = _lib.stubFN;\n          confMeasurement.getWidth = _lib.stubFN;\n          finalRotationDecision = _lib.stubFN;\n\n          if (axisConfig.rotateLabels) {\n            if (slantLabel) {\n              labels.rotation = 300;\n            } else {\n              labels.rotation = 270;\n            }\n\n            forceHeight = maxHeight;\n          }\n\n          confMeasurement.getCalculatedLabelStep = function () {\n            return axisConfig.labelStep;\n          };\n\n          break;\n\n        default:\n          confMeasurement = categoryAxisMeasurement.getCopyById(\"auto\");\n\n          confMeasurement.getHeight = function () {\n            return maxHeight;\n          };\n\n          confMeasurement.getWidth = function (cat) {\n            return cat.individualIW ? cat.individualIW : intervalWidth - 2 * axisXPadding;\n          };\n\n          smartLabel.setStyle(maxLabelObj.style);\n          absMaxSmartText = smartLabel.getOriSize(testString);\n          autoWrapLimit = absMaxSmartText.width;\n\n          finalRotationDecision = function finalRotationDecision(style, categories) {\n            var itr, categoryLen, category, catStyle;\n\n            if (axisConfig.irregularCatAxis) {\n              return;\n            }\n\n            smartLabel.setStyle(style);\n            absMaxSmartText = smartLabel.getOriSize(testString);\n            autoWrapLimit = absMaxSmartText.width;\n\n            if (autoWrapLimit >= intervalWidth && axisConfig.rotateLabels !== 0) {\n              labels.rotation = slantLabel ? 300 : 270;\n              labels.forceRotate = true;\n              confMeasurement = categoryAxisMeasurement.getCopyById(\"rotate\");\n              getAllottedWidth = confMeasurement.getWidth;\n              getAllottedHeight = confMeasurement.getHeight;\n              maxLabelObj.width = 0;\n\n              for (itr = 0, categoryLen = categories.length; itr < categoryLen; itr++) {\n                category = categories[itr];\n\n                if (!(category && (category.label || category.oriLabel)) || (0, _lib.pluckNumber)(category.showlabel, axisConfig.showLabels, 1) === 0 || category.stepSkipped === true) {\n                  continue;\n                }\n\n                catStyle = category._ovrStyle;\n                smartLabel.setStyle({\n                  fontSize: catStyle.fontSize,\n                  fontFamily: catStyle.fontFamily,\n                  lineHeight: catStyle.lineHeight,\n                  fontWeight: catStyle.fontWeight\n                });\n                smartLabelText = smartLabel.getSmartText(category.oriLabel, getAllottedWidth(category), getAllottedHeight(itr));\n                category.label = smartLabelText.text;\n                category.labelTooltext = smartLabelText.tooltext;\n                category._sLabel = smartLabelText;\n\n                if (maxLabelObj.width < smartLabelText.width) {\n                  maxLabelObj.text = smartLabelText.text;\n                  maxLabelObj.width = smartLabelText.width;\n                  maxLabelObj.height = smartLabelText.height;\n                  maxLabelObj.style = catStyle;\n                }\n              }\n\n              maxText = maxLabelObj.text;\n            }\n          };\n\n          break;\n      }\n\n      getAllottedWidth = confMeasurement.getWidth;\n      getAllottedHeight = confMeasurement.getHeight;\n      labelStep = axisConfig.labels.step = axisConfig.labelStep = axisConfig._oriLabelStep;\n      labelStep = axisConfig.labels.step = axisConfig.labelStep = confMeasurement.getCalculatedLabelStep(allCategories);\n      firstValue = (0, _cartesian.minimumEnquiry)(allCategories);\n\n      for (i = firstValue, countValue = 0, count = 0, categoryLength = allCategories.length; i < categoryLength; i++, countValue++) {\n        singleCategory = allCategories[i];\n\n        if (!(singleCategory && (singleCategory.label || singleCategory.oriLabel)) || (0, _lib.pluckNumber)(singleCategory.showlabel, axisConfig.showLabels, 1) === 0) {\n          continue;\n        }\n\n        categoryCalculationInitiated = true;\n        overriddenStyle = {\n          fontSize: labelStyle.fontSize,\n          fontFamily: labelStyle.fontFamily,\n          lineHeight: labelStyle.lineHeight,\n          fontWeight: labelStyle.fontWeight\n        };\n        (0, _lib.extend2)(overriddenStyle, singleCategory.style);\n        overriddenStyle.lineHeight = (0, _lib.setLineHeight)(overriddenStyle);\n        currStyleStr = overriddenStyle.fontSize + overriddenStyle.fontFamily + overriddenStyle.lineHeight + overriddenStyle.fontWeight;\n\n        if (currStyleStr !== prevStyleStr) {\n          smartLabel.setStyle(overriddenStyle);\n          prevStyleStr = currStyleStr;\n        }\n\n        if (countValue % labelStep) {\n          singleCategory.stepSkipped = true;\n          singleCategory.appliedSmartLabel = false;\n          skipCount++;\n          continue;\n        } else {\n          singleCategory.appliedSmartLabel = true;\n          singleCategory.stepSkipped = false;\n        }\n\n        singleCategory._ovrStyle = overriddenStyle;\n\n        if (allCategories[i].plotWidth) {\n          labelHeightAllotment = Math.max(labelDisplay === \"rotate\" ? allCategories[i].plotWidth - 2 * ROTATED_LABEL_PADDING : 0, getAllottedHeight(i));\n        } else {\n          if (labelDisplay === \"rotate\") {\n            if (i < categoryLength - 1) {\n              labelGap = axis.getPixel(i + 1) - axis.getPixel(i) - ROTATED_LABEL_MIN_GAP;\n            }\n          } else {\n            labelGap = 0;\n          }\n\n          if (labelDisplay === \"rotate\" && isNaN(+labelGap)) {\n            labelGap = chartConfig.canvasWidth / axis.getVisibleLength() - ROTATED_LABEL_PADDING;\n          }\n\n          labelHeightAllotment = Math.max(labelGap, getAllottedHeight(i));\n        }\n\n        smartLabelText = smartLabel.getSmartText(singleCategory.oriLabel || singleCategory.label, getAllottedWidth(singleCategory), labelHeightAllotment);\n        cumulativeSum += smartLabelText.height + defTextPadding;\n        axis.components.labels[count++] = {\n          config: {\n            width: smartLabelText.width,\n            height: smartLabelText.height,\n            props: {\n              label: {}\n            }\n          }\n        };\n        singleCategory._cumulativeSum = cumulativeSum;\n        singleCategory.oriLabel = singleCategory.oriLabel || singleCategory.label;\n        singleCategory.label = smartLabelText.text;\n        singleCategory.labelTooltext = smartLabelText.tooltext;\n        singleCategory._sLabel = smartLabelText;\n\n        if (maxLabelObj.width < smartLabelText.width) {\n          (0, _lib.extend2)(maxLabelObj, smartLabelText);\n          maxLabelObj.style = overriddenStyle;\n        }\n\n        if (maxLabelHeight < smartLabelText.height) {\n          maxLabelHeight = smartLabelText.height;\n        }\n      }\n\n      if (!categoryCalculationInitiated) {\n        return {\n          height: 0,\n          width: 0\n        };\n      }\n\n      reCalculateStaggerLines(allCategories, skipCount);\n      updateCategoryMeta(allCategories, skipCount);\n      finalRotationDecision(maxLabelObj.style, allCategories);\n      maxText = maxLabelObj.text || \"\";\n\n      if (axisConfig.xAxisLabelMode === \"mixed\") {\n        if (axisConfig.isPercent) {\n          numberFormatterFn = chart.getFromEnv(\"number-formatter\").percentValue;\n        } else {\n          numberFormatterFn = chart.getFromEnv(\"number-formatter\").xAxis;\n        }\n\n        maxTextSize = maxText.length;\n\n        for (i = 0, ln = ticks && ticks.length; i < ln; ++i) {\n          value = ticks[i];\n          text = \"\" + numberFormatterFn.call(chart.getFromEnv(\"number-formatter\"), value, axisConfig.axisIndex);\n\n          if (text.length > maxTextSize) {\n            maxText = text;\n            maxTextSize = text.length;\n          }\n        }\n      }\n\n      maxLabelObj.height = Math.max(maxLabelHeight, maxLabelObj.height || 0);\n      catLength = allCategories.length;\n\n      for (i = 0, categoryLength = allCategories.length; i < categoryLength; i++) {\n        firstCategory = allCategories[i];\n\n        if (firstCategory._sLabel) {\n          break;\n        }\n      }\n\n      for (categoryLength = allCategories.length, i = categoryLength - 1; i >= 0; i--) {\n        lastCategory = allCategories[i];\n\n        if (lastCategory._sLabel) {\n          break;\n        }\n      }\n\n      isZoomed = axis.getZoom() !== 1;\n\n      if (!labels.rotation && !isZoomed && firstCategory._sLabel) {\n        axisConfig.axisEndLabelDisplaySpace.left = Math.max(canvasLeft - (axis._getCustomPixel(firstCategory.x || 0) - firstCategory._sLabel.width / 2), 0);\n        axisConfig.axisEndLabelDisplaySpace.right = Math.max(axis._getCustomPixel(lastCategory.x || catLength - 1) + lastCategory._sLabel.width / 2 - canvasRight, 0);\n      } else {\n        axisConfig.axisEndLabelDisplaySpace.left = 0;\n        axisConfig.axisEndLabelDisplaySpace.right = 0;\n      }\n\n      retObj = maxLabelObj;\n    } else {\n      if (axisConfig.numberFormatterFn) {\n        numberFormatterFn = chart.getFromEnv(\"number-formatter\")[axisConfig.numberFormatterFn];\n      } else if (axisConfig.isPercent) {\n        numberFormatterFn = chart.getFromEnv(\"number-formatter\").percentValue;\n      } else {\n        numberFormatterFn = chart.getFromEnv(\"number-formatter\").xAxis;\n      }\n\n      for (i = 0, ln = ticks && ticks.length; i < ln; ++i) {\n        tick = ticks[i];\n        value = (0, _lib.toPrecision)(tick, 10);\n        text = \"\" + numberFormatterFn.call(chart.getFromEnv(\"number-formatter\"), value, axisConfig.axisIndex);\n\n        if (tick === min) {\n          firstLabel = text;\n        }\n\n        if (tick === max) {\n          lastLabel = text;\n        }\n\n        retObj = smartLabel.getOriSize(text);\n        axis.components.labels[i] = {\n          config: {\n            width: retObj.width,\n            height: retObj.height,\n            props: {\n              label: {}\n            }\n          }\n        };\n\n        if (text.length > maxTextSize) {\n          maxText = text;\n          maxTextSize = text.length;\n        }\n      }\n\n      smartLabel.setStyle({\n        fontSize: labelStyle.fontSize,\n        fontFamily: labelStyle.fontFamily,\n        lineHeight: labelStyle.lineHeight,\n        fontWeight: labelStyle.fontWeight\n      });\n      retObj = smartLabel.getOriSize(maxText || \"\");\n\n      if (labelDisplay === \"rotate\") {\n        labels.rotation = 270;\n      }\n\n      if (axisConfig.rotateLabels) {\n        if (slantLabel) {\n          labels.rotation = 300;\n        } else {\n          labels.rotation = 270;\n        }\n      }\n\n      if (!labels.rotation) {\n        firstLabel = smartLabel.getOriSize(firstLabel || \"\");\n        lastLabel = smartLabel.getOriSize(lastLabel || \"\");\n        axisConfig.axisEndLabelDisplaySpace.left = firstLabel.width / 2 + 2;\n        axisConfig.axisEndLabelDisplaySpace.right = lastLabel.width / 2 + 2;\n      }\n    }\n\n    if (axisConfig.tickValues && labelDisplay === \"stagger\") {\n      retObj.height = staggerLines * maxLabelObj.height;\n    }\n\n    retObj.width = forceHeight ? Math.min(forceHeight, retObj.width) : retObj.width;\n    retObj.width = (0, _lib.pluckNumber)(retObj.width);\n    retObj.maxWidth = (0, _lib.pluckNumber)(retObj.maxWidth);\n    return retObj;\n  };\n\n  _proto._getVMaxLabelDimention = function _getVMaxLabelDimention(_maxWidth) {\n    var axis = this,\n        maxWidth = _maxWidth,\n        axisConfig = axis.config,\n        chart = axis.getFromEnv(\"chart\"),\n        chartConfig = chart.config,\n        smartLabel = chart.getFromEnv(\"smartLabel\"),\n        labelStyle = axisConfig.labels.style,\n        useEllipsesWhenOverflow = axisConfig.useEllipsesWhenOverflow,\n        maxLabelWidthPercent = axisConfig.maxLabelWidthPercent,\n        minLabelWidthPercent = axisConfig.minLabelWidthPercent,\n        maxTextSize = 0,\n        categories = chart.getFromEnv(\"dataSource\").categories,\n        maxTextDimention = {\n      height: 0,\n      width: 0\n    },\n        maxText,\n        tempMaxWidth,\n        tempMinWidth,\n        i,\n        ln,\n        ticks = axisConfig.ticks,\n        value,\n        text,\n        allCategories,\n        categoryLength,\n        singleCategory,\n        smartLabelText,\n        numberFormatterFn,\n        categoriesStyle = {},\n        categoryStyle,\n        singleCategoryStyle;\n    smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);\n    smartLabel.setStyle({\n      fontSize: labelStyle.fontSize,\n      fontFamily: labelStyle.fontFamily,\n      lineHeight: labelStyle.lineHeight,\n      fontWeight: labelStyle.fontWeight\n    });\n\n    if (axisConfig.tickValues) {\n      if (categories) {\n        categoriesStyle = {\n          fontFamily: categories[0].font,\n          fontSize: categories[0].fontsize,\n          color: categories[0].fontcolor\n        };\n      }\n\n      if (maxLabelWidthPercent) {\n        tempMaxWidth = maxLabelWidthPercent / 100 * chartConfig.width;\n\n        if (tempMaxWidth < maxWidth) {\n          maxWidth = tempMaxWidth;\n        }\n      }\n\n      if (minLabelWidthPercent) {\n        tempMinWidth = minLabelWidthPercent / 100 * chartConfig.width;\n\n        if (tempMinWidth > maxWidth) {\n          maxWidth = tempMinWidth;\n        }\n      }\n\n      allCategories = axisConfig.tickValues.tickValue;\n\n      for (i = 0, categoryLength = allCategories.length; i < categoryLength; i++) {\n        singleCategory = allCategories[i];\n\n        if ((0, _lib.pluckNumber)(singleCategory.showlabel, axisConfig.showLabels) === 0) {\n          continue;\n        }\n\n        categoryStyle = {\n          fontFamily: (0, _lib.pluck)(singleCategory.font, singleCategory.labelfont, categoriesStyle.fontFamily, labelStyle.fontFamily),\n          fontSize: (0, _lib.pluck)(this.computeFontSize(singleCategory.fontsize), singleCategory.labelfontsize, categoriesStyle.fontSize, labelStyle.fontSize).toString().replace(/px/i, \"\") + \"px\",\n          fontWeight: labelStyle.fontWeight === \"normal\" ? (0, _lib.pluckNumber)(singleCategory.fontbold, singleCategory.labelfontbold, 0) ? \"bold\" : \"normal\" : labelStyle.fontWeight,\n          fontStyle: labelStyle.fontStyle === \"normal\" ? (0, _lib.pluckNumber)(singleCategory.fontitalic, singleCategory.labelfontitalic, 0) ? \"italic\" : \"normal\" : labelStyle.fontStyle\n        };\n        singleCategoryStyle = {\n          fontFamily: (0, _lib.pluck)(categoryStyle.fontFamily, categoriesStyle.fontFamily, labelStyle.fontFamily),\n          fontSize: (0, _lib.pluck)(categoryStyle.fontSize, categoriesStyle.fontSize, labelStyle.fontSize),\n          fontWeight: (0, _lib.pluck)(categoryStyle.fontWeight, labelStyle.fontWeight),\n          fontStyle: (0, _lib.pluck)(categoryStyle.fontStyle, labelStyle.fontStyle)\n        };\n        singleCategoryStyle.lineHeight = (0, _lib.setLineHeight)(singleCategoryStyle);\n        smartLabel.setStyle(singleCategoryStyle);\n        smartLabelText = smartLabel.getSmartText(singleCategory.oriLabel || singleCategory.label, maxWidth, labelStyle.lineHeight, useEllipsesWhenOverflow);\n        axis.components.labels[i] = {\n          config: {\n            width: smartLabelText.width,\n            height: smartLabelText.height,\n            props: {\n              label: {}\n            }\n          }\n        };\n        singleCategory.oriLabel = singleCategory.oriLabel || singleCategory.label;\n        singleCategory.label = text = smartLabelText.text;\n        singleCategory.labelTooltext = smartLabelText.tooltext;\n\n        if (smartLabelText.width > maxTextSize) {\n          maxTextDimention = smartLabelText;\n          maxTextSize = smartLabelText.width;\n        }\n      }\n\n      return maxTextDimention;\n    }\n\n    if (axisConfig.numberFormatterFn) {\n      numberFormatterFn = chart.getFromEnv(\"number-formatter\")[axisConfig.numberFormatterFn];\n    } else if (axisConfig.isPercent) {\n      numberFormatterFn = chart.getFromEnv(\"number-formatter\").yAxisPercentValue;\n    } else {\n      numberFormatterFn = chart.getFromEnv(\"number-formatter\").yAxis;\n    }\n\n    for (i = 0, ln = ticks && ticks.length; i < ln; ++i) {\n      value = (0, _lib.toPrecision)(ticks[i], 10);\n      text = \"\" + numberFormatterFn.call(chart.getFromEnv(\"number-formatter\"), value, axisConfig.axisIndex);\n      smartLabelText = smartLabel.getSmartText(text);\n      axis.components.labels[i] = {\n        config: {\n          width: smartLabelText.width,\n          height: smartLabelText.height,\n          props: {\n            label: {}\n          }\n        }\n      };\n\n      if (text.length > maxTextSize) {\n        maxText = text;\n        maxTextSize = text.length;\n      }\n    }\n\n    return smartLabel.getOriSize(maxText);\n  };\n\n  _proto.getCleanValue = function getCleanValue(num, abs) {\n    var axis = this,\n        numberFormatter = axis.getFromEnv(\"number-formatter\");\n    return numberFormatter.getCleanValue(num, abs);\n  };\n\n  _proto.generateMinorTicks = function generateMinorTicks() {\n    if (this) return [];\n  };\n\n  _proto.setCanvas = function setCanvas(data) {\n    var axis = this,\n        axisConfig = axis.config;\n    axisConfig.canvas = data;\n  };\n\n  _proto._adjustNumberFormatter = function _adjustNumberFormatter(interval) {\n    var axis = this,\n        axisConfig = axis.config,\n        axisIndex = axisConfig.axisIndex,\n        isVertical = axisConfig.isVertical,\n        chart = axis.getFromEnv(\"chart\"),\n        numberFormatter = chart.getFromEnv(\"number-formatter\"),\n        defaultDecimalPrecision = axisConfig._defaultDecimalPrecision,\n        defaultForceDecimal = axisConfig._defaultForceDecimal,\n        dec,\n        beforeZero = 0,\n        formatConfig;\n\n    if (isVertical || axisConfig.numberFormatterFn === \"yAxis\") {\n      formatConfig = (numberFormatter.Y[axisIndex] || numberFormatter.Y[0]).yAxisLabelConf;\n    } else {\n      formatConfig = numberFormatter.paramX;\n    }\n\n    defaultDecimalPrecision !== _lib.UNDEF ? formatConfig.decimalprecision = defaultDecimalPrecision : axisConfig._defaultDecimalPrecision = formatConfig.decimalprecision;\n    defaultForceDecimal !== _lib.UNDEF ? formatConfig.forcedecimals = defaultForceDecimal : axisConfig._defaultForceDecimal = formatConfig.forcedecimals;\n\n    if (parseInt(interval, 10) > 0) {\n      return;\n    }\n\n    dec = interval.toString().split(\".\")[1];\n\n    if (dec) {\n      beforeZero = dec.match(/^[0]*/)[0].length + 1;\n\n      if (beforeZero > formatConfig.decimalprecision) {\n        formatConfig.forcedecimals = 1;\n      }\n\n      formatConfig.decimalprecision = Math.max(beforeZero, formatConfig.decimalprecision);\n    }\n  };\n\n  _proto.setLabelConfig = function setLabelConfig(data) {\n    var axis = this,\n        axisConfig = axis.config,\n        labelConfig = axisConfig.labels,\n        prop;\n\n    for (prop in data) {\n      if (data.hasOwnProperty(prop)) {\n        labelConfig[prop] = data[prop];\n      }\n    }\n  };\n\n  return CartesainLabelManager;\n}(_cartesian.default);\n\nCartesainLabelManager.prototype._parseLabel = _commonApi._parseLabel;\nCartesainLabelManager.prototype._drawLabel = _commonApi._drawLabel;\nCartesainLabelManager.prototype.getTrendLineLimits = _commonApi.getTrendLineLimits;\nCartesainLabelManager.prototype.setAxisPadding = _commonApi.setAxisPadding;\nCartesainLabelManager.prototype.getLabel = _commonApi.getLabel;\nvar _default = CartesainLabelManager;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/core/src/axis/cartesian-label-manager.js"],"names":["_interopRequireWildcard","require","_interopRequireDefault","exports","__esModule","default","_inheritsLoose2","_cartesian","_lib","_commonApi","_safeMax","ROTATED_LABEL_PADDING","ROTATED_LABEL_MIN_GAP","WWW_STR","W_STR","CartesainLabelManager","_Cartesian","apply","arguments","_proto","prototype","_getHMaxLabelDimention","_maxHeight","axis","maxHeight","axisConfig","config","chart","getFromEnv","chartConfig","smartLabel","axisRange","labels","labelDisplay","slantLabel","labelStyle","style","userMaxLabelHeight","maxLabelHeight","increment","getInterval","staggerLines","labelStep","canvasLeft","canvasRight","rWidthAdjstFactor","labelHeightAllotment","sWidthAdjstFactor","staggerLineAvailed","max","min","maxTextSize","allCategories","tickValues","tickValue","allCategoryLen","length","distributedColumns","labelGap","categoryLength","singleCategory","overriddenStyle","intervalWidth","maxLabelObj","text","UNDEF","width","smartLabelText","axisXPadding","getAllottedWidth","getAllottedHeight","confMeasurement","updateCategoryMeta","stubFN","finalRotationDecision","reCalculateStaggerLines","testString","W","minPxPerLabel","categoryAxisMeasurement","maxText","countValue","firstValue","firstLabel","lastLabel","i","count","value","numberFormatterFn","retObj","cumulativeSum","defTextPadding","reCalrequired","skipCount","defaultSpanRadius","lastStepX","forceHeight","categoryCalculationInitiated","refSmartText","limit","minIrrPx","prevCategory","lastMinIrrStep","Number","POSITIVE_INFINITY","firstCategory","lastCategory","catLength","isZoomed","prevStyleStr","currStyleStr","ticks","ln","tick","autoWrapLimit","absMaxSmartText","minIrrStep","x","plotWidth","getPixel","height","rotateLabels","irregularCatAxis","useEllipsesOnOverflow","useEllipsesWhenOverflow","setStyle","fontSize","fontFamily","lineHeight","fontWeight","getMarginalDistance","position","toLowerCase","Math","abs","_getCustomPixel","sort","m","n","Object","assign","getOriSize","label","BLANKSTRING","_individualIWR","_individualIWL","floor","Infinity","individualIW","__root__","getHeight","itr","cat","_ovrStyle","lineHeightInt","parseInt","replace","getWidth","getCalculatedLabelStep","allCatArr","_i","_l","_maxSpan","NEGATIVE_INFINITY","_maxCatObj","styleStr","_cat","_catLabel","key","possibleLabelsNo","labelCount","referenceSide","slHeight","maxCategory","isWrapIntended","_fStep","oriLabel","extend2","hasOwnProperty","setLineHeight","getSmartText","ceil","maxCharDim","values","detailObj","_inProp","getCopyById","id","cam","propStore","root","copyStore","copyById","rotation","categoryIndex","allCat","catStyle","metrics","categories","category","categoryLen","lastElement","defLineHeight","lastCSum","index","rSum","calStaggerLines","itrStep","smartTestText","_cumulativeSum","drawnStaggerLines","catLineHeight","nonSkipCount","stepSkipped","labelPadding","forceRotate","pluckNumber","showlabel","showLabels","labelTooltext","tooltext","_sLabel","step","_oriLabelStep","minimumEnquiry","appliedSmartLabel","isNaN","canvasWidth","getVisibleLength","components","props","xAxisLabelMode","isPercent","percentValue","xAxis","call","axisIndex","getZoom","axisEndLabelDisplaySpace","left","right","toPrecision","maxWidth","_getVMaxLabelDimention","_maxWidth","maxLabelWidthPercent","minLabelWidthPercent","maxTextDimention","tempMaxWidth","tempMinWidth","categoriesStyle","categoryStyle","singleCategoryStyle","font","fontsize","color","fontcolor","pluck","labelfont","computeFontSize","labelfontsize","toString","fontbold","labelfontbold","fontStyle","fontitalic","labelfontitalic","yAxisPercentValue","yAxis","getCleanValue","num","numberFormatter","generateMinorTicks","setCanvas","data","canvas","_adjustNumberFormatter","interval","isVertical","defaultDecimalPrecision","_defaultDecimalPrecision","defaultForceDecimal","_defaultForceDecimal","dec","beforeZero","formatConfig","Y","yAxisLabelConf","paramX","decimalprecision","forcedecimals","split","match","setLabelConfig","labelConfig","prop","_parseLabel","_drawLabel","getTrendLineLimits","setAxisPadding","getLabel","_default"],"mappings":"AAAA;;AAAa,IAAIA,uBAAuB,GAACC,OAAO,CAAC,+CAAD,CAAnC;;AAAqF,IAAIC,sBAAsB,GAACD,OAAO,CAAC,8CAAD,CAAlC;;AAAmFE,OAAO,CAACC,UAAR,GAAmB,IAAnB;AAAwBD,OAAO,CAACE,OAAR,GAAgB,KAAK,CAArB;;AAAuB,IAAIC,eAAe,GAACJ,sBAAsB,CAACD,OAAO,CAAC,sCAAD,CAAR,CAA1C;;AAA4F,IAAIM,UAAU,GAACP,uBAAuB,CAACC,OAAO,CAAC,aAAD,CAAR,CAAtC;;AAA+D,IAAIO,IAAI,GAACP,OAAO,CAAC,QAAD,CAAhB;;AAA2B,IAAIQ,UAAU,GAACR,OAAO,CAAC,cAAD,CAAtB;;AAAuC,IAAIS,QAAQ,GAACR,sBAAsB,CAACD,OAAO,CAAC,wCAAD,CAAR,CAAnC;;AAAuF,IAAIU,qBAAqB,GAAC,CAA1B;AAAA,IAA4BC,qBAAqB,GAAC,EAAlD;AAAA,IAAqDC,OAAO,GAAC,KAA7D;AAAA,IAAmEC,KAAK,GAAC,GAAzE;;AAA6E,IAAIC,qBAAqB,GAAC,UAASC,UAAT,EAAoB;AAAC,GAAC,GAAEV,eAAe,CAACD,OAAnB,EAA4BU,qBAA5B,EAAkDC,UAAlD;;AAA8D,WAASD,qBAAT,GAAgC;AAAC,WAAOC,UAAU,CAACC,KAAX,CAAiB,IAAjB,EAAsBC,SAAtB,KAAkC,IAAzC;AAA8C;;AAAA,MAAIC,MAAM,GAACJ,qBAAqB,CAACK,SAAjC;;AAA2CD,EAAAA,MAAM,CAACE,sBAAP,GAA8B,SAASA,sBAAT,CAAgCC,UAAhC,EAA2C;AAAC,QAAIC,IAAI,GAAC,IAAT;AAAA,QAAcC,SAAS,GAACF,UAAxB;AAAA,QAAmCG,UAAU,GAACF,IAAI,CAACG,MAAnD;AAAA,QAA0DC,KAAK,GAACJ,IAAI,CAACK,UAAL,CAAgB,OAAhB,CAAhE;AAAA,QAAyFC,WAAW,GAACF,KAAK,CAACD,MAA3G;AAAA,QAAkHI,UAAU,GAACH,KAAK,CAACC,UAAN,CAAiB,YAAjB,CAA7H;AAAA,QAA4JG,SAAS,GAACN,UAAU,CAACM,SAAjL;AAAA,QAA2LC,MAAM,GAACP,UAAU,CAACO,MAA7M;AAAA,QAAoNC,YAAY,GAACR,UAAU,CAACQ,YAA5O;AAAA,QAAyPC,UAAU,GAACT,UAAU,CAACS,UAA/Q;AAAA,QAA0RC,UAAU,GAACH,MAAM,CAACI,KAA5S;AAAA,QAAkTC,kBAAkB,GAACZ,UAAU,CAACa,cAAhV;AAAA,QAA+VC,SAAS,GAAChB,IAAI,CAACiB,WAAL,EAAzW;AAAA,QAA4XC,YAAY,GAAChB,UAAU,CAACgB,YAApZ;AAAA,QAAiaC,SAAS,GAACjB,UAAU,CAACiB,SAAtb;AAAA,QAAgcC,UAAU,GAACd,WAAW,CAACc,UAAvd;AAAA,QAAkeC,WAAW,GAACf,WAAW,CAACe,WAA1f;AAAA,QAAsgBC,iBAAiB,GAACJ,YAAY,GAAC,CAAriB;AAAA,QAAuiBK,oBAAviB;AAAA,QAA4jBC,iBAA5jB;AAAA,QAA8kBC,kBAA9kB;AAAA,QAAimBC,GAAG,GAAClB,SAAS,CAACkB,GAA/mB;AAAA,QAAmnBC,GAAG,GAACnB,SAAS,CAACmB,GAAjoB;AAAA,QAAqoBC,WAAW,GAAC,CAAjpB;AAAA,QAAmpBC,aAAa,GAAC3B,UAAU,CAAC4B,UAAX,IAAuB5B,UAAU,CAAC4B,UAAX,CAAsBC,SAA9sB;AAAA,QAAwtBC,cAAc,GAACH,aAAa,IAAEA,aAAa,CAACI,MAApwB;AAAA,QAA2wBC,kBAAkB,GAAC9B,KAAK,CAAC8B,kBAApyB;AAAA,QAAuzBC,QAAvzB;AAAA,QAAg0BC,cAAc,GAAC,CAA/0B;AAAA,QAAi1BC,cAAj1B;AAAA,QAAg2BC,eAAh2B;AAAA,QAAg3BC,aAAh3B;AAAA,QAA83BC,WAAW,GAAC;AAACC,MAAAA,IAAI,EAACxD,IAAI,CAACyD,KAAX;AAAiBC,MAAAA,KAAK,EAAC,CAAvB;AAAyB9B,MAAAA,KAAK,EAAC5B,IAAI,CAACyD;AAApC,KAA14B;AAAA,QAAq7B3B,cAAc,GAAC,CAAp8B;AAAA,QAAs8B6B,cAAt8B;AAAA,QAAq9BC,YAAY,GAAC,CAAl+B;AAAA,QAAo+BC,gBAAp+B;AAAA,QAAq/BC,iBAAr/B;AAAA,QAAugCC,eAAvgC;AAAA,QAAuhCC,kBAAkB,GAAChE,IAAI,CAACiE,MAA/iC;AAAA,QAAsjCC,qBAAqB,GAAClE,IAAI,CAACiE,MAAjlC;AAAA,QAAwlCE,uBAAuB,GAACnE,IAAI,CAACiE,MAArnC;AAAA,QAA4nCG,UAAU,GAAC/D,OAAvoC;AAAA,QAA+oCgE,CAAC,GAAC/D,KAAjpC;AAAA,QAAupCgE,aAAa,GAAC,EAArqC;AAAA,QAAwqCC,uBAAuB,GAAC,EAAhsC;AAAA,QAAmsCC,OAAnsC;AAAA,QAA2sCC,UAA3sC;AAAA,QAAstCC,UAAttC;AAAA,QAAiuCC,UAAjuC;AAAA,QAA4uCC,SAA5uC;AAAA,QAAsvCC,CAAtvC;AAAA,QAAwvCC,KAAxvC;AAAA,QAA8vCtB,IAA9vC;AAAA,QAAmwCuB,KAAnwC;AAAA,QAAywCC,iBAAzwC;AAAA,QAA2xCC,MAA3xC;AAAA,QAAkyCC,aAAa,GAAC,CAAhzC;AAAA,QAAkzCC,cAAc,GAAC,CAAj0C;AAAA,QAAm0CC,aAAa,GAAC,KAAj1C;AAAA,QAAu1CC,SAAS,GAAC,CAAj2C;AAAA,QAAm2CC,iBAAiB,GAAC,CAAr3C;AAAA,QAAu3CC,SAAv3C;AAAA,QAAi4CC,WAAj4C;AAAA,QAA64CC,4BAA4B,GAAC,KAA16C;AAAA,QAAg7CC,YAAh7C;AAAA,QAA67CC,KAA77C;AAAA,QAAm8CC,QAAn8C;AAAA,QAA48CC,YAA58C;AAAA,QAAy9CC,cAAc,GAACC,MAAM,CAACC,iBAA/+C;AAAA,QAAigDC,aAAjgD;AAAA,QAA+gDC,YAA/gD;AAAA,QAA4hDC,SAA5hD;AAAA,QAAsiDC,QAAtiD;AAAA,QAA+iDC,YAA/iD;AAAA,QAA4jDC,YAA5jD;AAAA,QAAykDC,KAAK,GAACtF,UAAU,CAACsF,KAA1lD;AAAA,QAAgmDC,EAAhmD;AAAA,QAAmmDC,IAAnmD;AAAA,QAAwmDC,aAAxmD;AAAA,QAAsnDC,eAAtnD;AAAA,QAAsoDC,UAAU,GAACb,MAAM,CAACC,iBAAxpD;;AAA0qD,QAAG/C,kBAAH,EAAsB;AAAC,WAAI4B,CAAC,GAAC,CAAN,EAAQA,CAAC,GAAC9B,cAAV,EAAyB8B,CAAC,EAA1B,EAA6B;AAAC,YAAGjC,aAAa,CAACiC,CAAC,GAAC,CAAH,CAAhB,EAAsB;AAAC,cAAGjC,aAAa,CAACiC,CAAD,CAAb,CAAiBgC,CAApB,EAAsB;AAACjE,YAAAA,aAAa,CAACiC,CAAD,CAAb,CAAiBiC,SAAjB,GAA2B/F,IAAI,CAACgG,QAAL,CAAcnE,aAAa,CAACiC,CAAC,GAAC,CAAH,CAAb,CAAmBgC,CAAnB,GAAqBjE,aAAa,CAACiC,CAAD,CAAb,CAAiBgC,CAApD,IAAuD9F,IAAI,CAACgG,QAAL,CAAc,CAAd,CAAlF;AAAmG;AAAC,SAAlJ,MAAsJ;AAACnE,UAAAA,aAAa,CAACiC,CAAD,CAAb,CAAiBiC,SAAjB,GAA2B/F,IAAI,CAACgG,QAAL,CAAc1F,WAAW,CAACe,WAAZ,GAAwBQ,aAAa,CAACiC,CAAD,CAAb,CAAiBgC,CAAvD,IAA0D9F,IAAI,CAACgG,QAAL,CAAc,CAAd,CAArF;AAAsG;AAAC;AAAC;;AAAA,QAAG9F,UAAU,CAAC4B,UAAX,KAAwB,CAACD,aAAD,IAAgBA,aAAa,CAACI,MAAd,KAAuB,CAA/D,CAAH,EAAqE;AAAC,aAAM;AAACU,QAAAA,KAAK,EAAC,CAAP;AAASsD,QAAAA,MAAM,EAAC;AAAhB,OAAN;AAAyB;;AAAA,QAAGvF,YAAY,KAAG,QAAlB,EAA2B;AAACR,MAAAA,UAAU,CAACgG,YAAX,GAAwB,CAAxB;AAA0B;;AAAA,QAAG,CAAChG,UAAU,CAAC4B,UAAf,EAA0B;AAAC5B,MAAAA,UAAU,CAACiG,gBAAX,GAA4B,KAA5B;AAAkC;;AAAAjG,IAAAA,UAAU,CAACsB,iBAAX,GAA6BA,iBAAiB,GAACF,iBAAiB,KAAG,CAApB,GAAsB,CAAtB,GAAwBA,iBAAiB,KAAG,CAApB,GAAsB,GAAtB,GAA0BA,iBAAjG;AAAmHf,IAAAA,UAAU,CAAC6F,qBAAX,CAAiC9F,WAAW,CAAC+F,uBAA7C;AAAsE9F,IAAAA,UAAU,CAAC+F,QAAX,CAAoB;AAACC,MAAAA,QAAQ,EAAC3F,UAAU,CAAC2F,QAArB;AAA8BC,MAAAA,UAAU,EAAC5F,UAAU,CAAC4F,UAApD;AAA+DC,MAAAA,UAAU,EAAC7F,UAAU,CAAC6F,UAArF;AAAgGC,MAAAA,UAAU,EAAC9F,UAAU,CAAC8F;AAAtH,KAApB;;AAAuJ,aAASC,mBAAT,CAA6Bb,CAA7B,EAA+Bc,QAA/B,EAAwC;AAAC,cAAOA,QAAQ,CAACC,WAAT,EAAP;AAA+B,aAAI,MAAJ;AAAW,iBAAOC,IAAI,CAACC,GAAL,CAAS/G,IAAI,CAACgH,eAAL,CAAqBlB,CAArB,CAAT,CAAP;;AAAyC,aAAI,OAAJ;AAAY,iBAAOgB,IAAI,CAACC,GAAL,CAASzG,WAAW,CAACqC,KAAZ,GAAkB3C,IAAI,CAACgH,eAAL,CAAqBlB,CAArB,CAA3B,CAAP;AAA/F;AAA2J;;AAAA,QAAG5F,UAAU,CAACiG,gBAAd,EAA+B;AAACtE,MAAAA,aAAa,CAACoF,IAAd,CAAoB,UAASC,CAAT,EAAWC,CAAX,EAAa;AAAC,eAAOD,CAAC,CAACpB,CAAF,GAAIqB,CAAC,CAACrB,CAAb;AAAe,OAAjD;;AAAoD,WAAIhC,CAAC,GAAC,CAAF,EAAI1B,cAAc,GAACP,aAAa,CAACI,MAArC,EAA4C6B,CAAC,GAAC1B,cAA9C,EAA6D0B,CAAC,EAA9D,EAAiE;AAACzB,QAAAA,cAAc,GAACR,aAAa,CAACiC,CAAD,CAA5B;;AAAgC,YAAG,OAAOU,SAAP,KAAmB,WAAtB,EAAkC;AAACqB,UAAAA,UAAU,GAACiB,IAAI,CAACC,GAAL,CAAS1E,cAAc,CAACyD,CAAf,GAAiBtB,SAA1B,CAAX;AAAgDK,UAAAA,QAAQ,GAACiC,IAAI,CAACC,GAAL,CAAS/G,IAAI,CAACgH,eAAL,CAAqBrF,GAArB,IAA0B3B,IAAI,CAACgH,eAAL,CAAqBrF,GAAG,GAACkE,UAAzB,CAAnC,CAAT;AAAkFtF,UAAAA,UAAU,CAAC+F,QAAX,CAAoBc,MAAM,CAACC,MAAP,CAAc,EAAd,EAAiBhF,cAAc,CAACxB,KAAhC,CAApB;AAA4D8D,UAAAA,YAAY,GAACpE,UAAU,CAAC+G,UAAX,CAAsBhE,CAAtB,CAAb;AAAsCsB,UAAAA,KAAK,GAACD,YAAY,CAAChC,KAAnB;;AAAyB,cAAGkC,QAAQ,GAACD,KAAK,GAAC,GAAlB,EAAsB;AAACvC,YAAAA,cAAc,CAACkF,KAAf,GAAqBtI,IAAI,CAACuI,WAA1B;AAAsC3B,YAAAA,UAAU,GAACd,cAAX;AAA0B;AAAS;;AAAAD,UAAAA,YAAY,CAAC2C,cAAb,GAA4B5C,QAA5B;AAAqCxC,UAAAA,cAAc,CAACqF,cAAf,GAA8B7C,QAA9B;AAAuCE,UAAAA,cAAc,GAACc,UAAf;AAA0B;;AAAAf,QAAAA,YAAY,GAACzC,cAAb;AAA4BmC,QAAAA,SAAS,GAACnC,cAAc,CAACyD,CAAzB;AAA2B;;AAAA,UAAGD,UAAU,KAAGb,MAAM,CAACC,iBAAvB,EAAyC;AAACY,QAAAA,UAAU,GAACiB,IAAI,CAACa,KAAL,CAAWb,IAAI,CAACnF,GAAL,CAASU,cAAc,CAACyD,CAAxB,EAA0BpE,GAAG,GAACW,cAAc,CAACyD,CAA7C,CAAX,CAAX;AAAuED,QAAAA,UAAU,GAACiB,IAAI,CAACpF,GAAL,CAASmE,UAAT,EAAoB,IAAEtB,iBAAtB,CAAX;AAAoD;;AAAA,WAAIT,CAAC,GAAC,CAAF,EAAI1B,cAAc,GAACP,aAAa,CAACI,MAArC,EAA4C6B,CAAC,GAAC1B,cAA9C,EAA6D0B,CAAC,EAA9D,EAAiE;AAACzB,QAAAA,cAAc,GAACR,aAAa,CAACiC,CAAD,CAA5B;;AAAgC,YAAG,CAACA,CAAJ,EAAM;AAACzB,UAAAA,cAAc,CAACqF,cAAf,GAA8BE,QAA9B;AAAuC;;AAAA,YAAG9D,CAAC,KAAG1B,cAAc,GAAC,CAAtB,EAAwB;AAACC,UAAAA,cAAc,CAACoF,cAAf,GAA8BG,QAA9B;AAAuC;;AAAAvF,QAAAA,cAAc,CAACwF,YAAf,GAA4Bf,IAAI,CAACnF,GAAL,CAASU,cAAc,CAACqF,cAAxB,EAAuCrF,cAAc,CAACoF,cAAtD,CAA5B;AAAkG;;AAAAlF,MAAAA,aAAa,GAACuE,IAAI,CAACC,GAAL,CAAS/G,IAAI,CAACgH,eAAL,CAAqBrF,GAArB,IAA0B3B,IAAI,CAACgH,eAAL,CAAqBrF,GAAG,GAACkE,UAAzB,CAAnC,CAAd;AAAuFtD,MAAAA,aAAa,GAACuE,IAAI,CAACnF,GAAL,CAAS,IAAEgF,mBAAmB,CAAC9E,aAAa,CAAC,CAAD,CAAb,CAAiBiE,CAAlB,EAAoB,MAApB,CAA9B,EAA0D,IAAEa,mBAAmB,CAAC9E,aAAa,CAACO,cAAc,GAAC,CAAhB,CAAb,CAAgC0D,CAAjC,EAAmC,OAAnC,CAA/E,EAA2HvD,aAA3H,CAAd;AAAwJ,KAAz5C,MAA65C;AAACA,MAAAA,aAAa,GAACuE,IAAI,CAACC,GAAL,CAAS/G,IAAI,CAACgH,eAAL,CAAqBrF,GAArB,IAA0B3B,IAAI,CAACgH,eAAL,CAAqBrF,GAAG,GAACX,SAAzB,CAAnC,CAAd;AAAsF;;AAAAf,IAAAA,SAAS,GAACa,kBAAkB,IAAEb,SAA9B;AAAwCuD,IAAAA,uBAAuB,CAACsE,QAAxB,GAAiC;AAACC,MAAAA,SAAS,EAAC,SAASA,SAAT,CAAmBC,GAAnB,EAAuB;AAAC,YAAIC,GAAG,GAACpG,aAAa,CAACmG,GAAD,CAArB;AAAA,YAA2BvB,UAAU,GAACwB,GAAG,CAACC,SAAJ,CAAczB,UAApD;AAAA,YAA+D0B,aAAa,GAACC,QAAQ,CAAC3B,UAAU,CAAC4B,OAAX,CAAmB,SAAnB,EAA6B,IAA7B,CAAD,EAAoC,EAApC,CAArF;AAA6H,eAAOF,aAAP;AAAqB,OAArL;AAAsLG,MAAAA,QAAQ,EAAC,SAASA,QAAT,GAAmB;AAAC,eAAOrI,SAAP;AAAiB,OAApO;AAAqOsI,MAAAA,sBAAsB,EAAC,SAASA,sBAAT,CAAgCC,SAAhC,EAA0C;AAAC,YAAIC,EAAE,GAAC,CAAP;AAAA,YAASC,EAAE,GAACF,SAAS,CAACvG,MAAtB;AAAA,YAA6B0G,QAAQ,GAAC3D,MAAM,CAAC4D,iBAA7C;AAAA,YAA+DC,UAAU,GAAC,EAA1E;AAAA,YAA6EC,QAA7E;AAAA,YAAsFjI,KAAtF;AAAA,YAA4F0G,KAA5F;AAAA,YAAkGwB,IAAlG;AAAA,YAAuGC,SAAvG;AAAA,YAAiHC,GAAjH;AAAA,YAAqHC,gBAArH;AAAA,YAAsIC,UAAU,GAAC,CAAjJ;AAAA,YAAmJC,aAAnJ;AAAA,YAAiKC,QAAjK;AAAA,YAA0KnD,YAAY,GAAChG,UAAU,CAACgG,YAAlM;AAAA,YAA+MoD,WAA/M;AAAA,YAA2NC,cAAc,GAAC7I,YAAY,KAAG,MAAf,IAAuBA,YAAY,KAAG,MAAhR;AAAA,YAAuR8I,MAAvR;;AAA8R,aAAIf,EAAE,GAAC,CAAP,EAASA,EAAE,GAACC,EAAZ,EAAeD,EAAE,EAAjB,EAAoB;AAACM,UAAAA,IAAI,GAACP,SAAS,CAACC,EAAD,CAAd;AAAmBM,UAAAA,IAAI,CAAClI,KAAL,GAAWkI,IAAI,CAAClI,KAAL,IAAY,EAAvB;AAA0B;;AAAA,YAAGX,UAAU,CAACiG,gBAAd,EAA+B;AAAC,iBAAOjG,UAAU,CAACiB,SAAlB;AAA4B;;AAAA,aAAIsH,EAAE,GAAC,CAAP,EAASA,EAAE,GAACC,EAAZ,EAAeD,EAAE,EAAjB,EAAoB;AAACM,UAAAA,IAAI,GAACP,SAAS,CAACC,EAAD,CAAd;;AAAmB,cAAG,CAACM,IAAJ,EAAS;AAAC;AAAS;;AAAAA,UAAAA,IAAI,CAACxB,KAAL,KAAawB,IAAI,CAACxB,KAAL,GAAW,EAAxB;AAA4ByB,UAAAA,SAAS,GAACD,IAAI,CAACU,QAAL,IAAeV,IAAI,CAACxB,KAA9B;AAAoCjF,UAAAA,eAAe,GAAC;AAACiE,YAAAA,QAAQ,EAAC3F,UAAU,CAAC2F,QAArB;AAA8BC,YAAAA,UAAU,EAAC5F,UAAU,CAAC4F,UAApD;AAA+DC,YAAAA,UAAU,EAAC7F,UAAU,CAAC6F,UAArF;AAAgGC,YAAAA,UAAU,EAAC9F,UAAU,CAAC8F;AAAtH,WAAhB;AAAkJyC,UAAAA,UAAU;AAAGJ,UAAAA,IAAI,CAAClI,KAAL,GAAWkI,IAAI,CAAClI,KAAL,IAAY,EAAvB;AAA0B,WAAC,GAAE5B,IAAI,CAACyK,OAAR,EAAiBpH,eAAjB,EAAiCyG,IAAI,CAAClI,KAAtC;AAA6CiI,UAAAA,QAAQ,GAACxG,eAAe,CAACiE,QAAhB,GAAyBjE,eAAe,CAACkE,UAAzC,GAAoDlE,eAAe,CAACmE,UAApE,GAA+EnE,eAAe,CAACoE,UAAxG;;AAAmH,cAAGmC,UAAU,CAACC,QAAD,CAAb,EAAwB;AAAC,gBAAGE,SAAS,CAAC/G,MAAV,GAAiB4G,UAAU,CAACC,QAAD,CAAV,CAAqBvB,KAArB,CAA2BtF,MAA/C,EAAsD;AAAC4G,cAAAA,UAAU,CAACC,QAAD,CAAV,CAAqBvB,KAArB,GAA2ByB,SAA3B;AAAqC;AAAC,WAAtH,MAA0H;AAACH,YAAAA,UAAU,CAACC,QAAD,CAAV,GAAqB;AAACvB,cAAAA,KAAK,EAACyB,SAAP;AAAiBnI,cAAAA,KAAK,EAACyB;AAAvB,aAArB;AAA6D;AAAC;;AAAA,aAAI2G,GAAJ,IAAWJ,UAAX,EAAsB;AAAC,cAAGA,UAAU,CAACc,cAAX,CAA0BV,GAA1B,CAAH,EAAkC;AAACpI,YAAAA,KAAK,GAACgI,UAAU,CAACI,GAAD,CAAV,CAAgBpI,KAAtB;AAA4B0G,YAAAA,KAAK,GAACsB,UAAU,CAACI,GAAD,CAAV,CAAgB1B,KAAtB;AAA4B1G,YAAAA,KAAK,CAAC4F,UAAN,GAAiB,CAAC,GAAExH,IAAI,CAAC2K,aAAR,EAAuB/I,KAAvB,CAAjB;AAA+CN,YAAAA,UAAU,CAAC+F,QAAX,CAAoBzF,KAApB;AAA2BqF,YAAAA,YAAY,KAAGmD,QAAQ,GAACjB,QAAQ,CAACvH,KAAK,CAAC4F,UAAP,EAAkB,EAAlB,CAApB,CAAZ;AAAuD7D,YAAAA,cAAc,GAACrC,UAAU,CAACsJ,YAAX,CAAwBtC,KAAxB,EAA8BtI,IAAI,CAACyD,KAAnC,EAAyC2G,QAAzC,CAAf;;AAAkE,gBAAGnD,YAAY,KAAG,CAAlB,EAAoB;AAACkD,cAAAA,aAAa,GAACxG,cAAc,CAACD,KAAf,GAAqBY,aAArB,GAAmCA,aAAnC,GAAiDX,cAAc,CAACD,KAA9E;AAAoF,aAAzG,MAA6G;AAACyG,cAAAA,aAAa,GAACxG,cAAc,CAACqD,MAA7B;AAAoC;;AAAA,gBAAGmD,aAAa,GAACT,QAAjB,EAA0B;AAACA,cAAAA,QAAQ,GAACS,aAAT;AAAuBE,cAAAA,WAAW,GAACT,UAAU,CAACI,GAAD,CAAtB;AAA4B;AAAC;AAAC;;AAAA,YAAGM,cAAH,EAAkB;AAACZ,UAAAA,QAAQ,GAAC7B,IAAI,CAACnF,GAAL,CAASgE,aAAT,EAAuBgD,QAAvB,CAAT;AAA0C;;AAAAO,QAAAA,gBAAgB,GAACpC,IAAI,CAACa,KAAL,CAAWb,IAAI,CAACC,GAAL,CAAS/G,IAAI,CAACgH,eAAL,CAAqBtF,GAArB,IAA0B1B,IAAI,CAACgH,eAAL,CAAqBrF,GAArB,CAAnC,IAA8DgH,QAAzE,CAAjB;AAAoGa,QAAAA,MAAM,GAAC1C,IAAI,CAACpF,GAAL,CAASoF,IAAI,CAACgD,IAAL,CAAUX,UAAU,GAACD,gBAArB,CAAT,EAAgDhJ,UAAU,CAACiB,SAA3D,CAAP;AAA6EoB,QAAAA,aAAa,GAACuE,IAAI,CAACC,GAAL,CAAS/G,IAAI,CAACgH,eAAL,CAAqBrF,GAArB,IAA0B3B,IAAI,CAACgH,eAAL,CAAqBrF,GAAG,GAAC6H,MAAzB,CAAnC,CAAd;;AAAmF,YAAGD,cAAc,IAAErD,YAAY,KAAG,CAAlC,EAAoC;AAAC3F,UAAAA,UAAU,CAAC+F,QAAX,CAAoBgD,WAAW,CAACzI,KAAhC;AAAuC,cAAIkJ,UAAU,GAAC,CAAC,GAAE5K,QAAQ,CAACL,OAAZ,EAAqBsI,MAAM,CAAC4C,MAAP,CAAczJ,UAAU,CAAC+G,UAAX,CAAsBgC,WAAW,CAAC/B,KAAlC,EAAyC0C,SAAvD,CAArB,CAAf;;AAAuG,cAAGF,UAAU,GAACxH,aAAa,GAAC,IAAEM,YAA9B,EAA2C;AAAC2G,YAAAA,MAAM,IAAE,CAAR;AAAUjH,YAAAA,aAAa,GAACuE,IAAI,CAACC,GAAL,CAAS/G,IAAI,CAACgH,eAAL,CAAqBrF,GAArB,IAA0B3B,IAAI,CAACgH,eAAL,CAAqBrF,GAAG,GAAC6H,MAAzB,CAAnC,CAAd;AAAmF,mBAAOA,MAAP;AAAc;AAAC;;AAAA,YAAGL,UAAU,IAAED,gBAAf,EAAgC;AAAC,iBAAOhJ,UAAU,CAACiB,SAAlB;AAA4B;;AAAA,eAAOqI,MAAP;AAAc;AAA9jF,KAAjC;AAAimFhG,IAAAA,uBAAuB,CAAC0G,OAAxB,GAAgC,EAAhC;;AAAmC1G,IAAAA,uBAAuB,CAAC2G,WAAxB,GAAoC,UAASC,EAAT,EAAY;AAAC,UAAIC,GAAG,GAAC,IAAR;AAAA,UAAaC,SAAS,GAACD,GAAG,CAACH,OAA3B;AAAA,UAAmCK,IAAI,GAACF,GAAG,CAACvC,QAA5C;AAAA,UAAqD0C,SAAS,GAACF,SAAS,CAACE,SAAzE;AAAA,UAAmFC,QAAnF;AAA4FD,MAAAA,SAAS,GAACA,SAAS,IAAE,EAArB;AAAwBC,MAAAA,QAAQ,GAACD,SAAS,CAACJ,EAAD,CAAlB;;AAAuB,UAAGK,QAAH,EAAY;AAAC,eAAOA,QAAP;AAAgB;;AAAA,OAAC,GAAExL,IAAI,CAACyK,OAAR,EAAiBe,QAAQ,GAACD,SAAS,CAACJ,EAAD,CAAT,GAAc,EAAxC,EAA2CG,IAA3C;AAAiD,aAAOE,QAAP;AAAgB,KAA1R;;AAA2R,QAAGvK,UAAU,CAAC4B,UAAd,EAAyB;AAAC,cAAOpB,YAAP;AAAqB,aAAI,QAAJ;AAAa,cAAGC,UAAH,EAAc;AAACF,YAAAA,MAAM,CAACiK,QAAP,GAAgB,GAAhB;AAAoB,WAAnC,MAAuC;AAACjK,YAAAA,MAAM,CAACiK,QAAP,GAAgB,GAAhB;AAAoB;;AAAA1H,UAAAA,eAAe,GAACQ,uBAAuB,CAAC2G,WAAxB,CAAoC,QAApC,CAAhB;AAA8D;;AAAM,aAAI,SAAJ;AAAcnH,UAAAA,eAAe,GAACQ,uBAAuB,CAAC2G,WAAxB,CAAoC,SAApC,CAAhB;;AAA+DnH,UAAAA,eAAe,CAAC+E,SAAhB,GAA0B,UAAS4C,aAAT,EAAuB;AAAC,gBAAIC,MAAJ,EAAW3C,GAAX,EAAe4C,QAAf,EAAwBC,OAAxB;AAAgCF,YAAAA,MAAM,GAAC1K,UAAU,CAAC4B,UAAX,CAAsBC,SAA7B;AAAuCkG,YAAAA,GAAG,GAAC2C,MAAM,CAACD,aAAD,CAAV;AAA0BE,YAAAA,QAAQ,GAAC5C,GAAG,IAAEA,GAAG,CAACpH,KAAT,KAAiBoH,GAAG,CAACpH,KAAJ,GAAU,EAA3B,CAAT;AAAwCyB,YAAAA,eAAe,GAAC;AAACiE,cAAAA,QAAQ,EAAC3F,UAAU,CAAC2F,QAArB;AAA8BC,cAAAA,UAAU,EAAC5F,UAAU,CAAC4F,UAApD;AAA+DC,cAAAA,UAAU,EAAC7F,UAAU,CAAC6F,UAArF;AAAgGC,cAAAA,UAAU,EAAC9F,UAAU,CAAC8F;AAAtH,aAAhB;AAAkJ,aAAC,GAAEzH,IAAI,CAACyK,OAAR,EAAiBpH,eAAjB,EAAiCuI,QAAjC;AAA2CtK,YAAAA,UAAU,CAAC+F,QAAX,CAAoBhE,eAApB;AAAqCwI,YAAAA,OAAO,GAACvK,UAAU,CAAC+G,UAAX,CAAsBW,GAAG,CAACV,KAA1B,CAAR;AAAyC,mBAAOuD,OAAO,CAAC7E,MAAf;AAAsB,WAA5d;;AAA6djD,UAAAA,eAAe,CAACsF,QAAhB,GAAyB,UAASL,GAAT,EAAa;AAACpF,YAAAA,YAAY,GAAC,CAAb;AAAe,mBAAOoF,GAAG,CAACJ,YAAJ,GAAiBI,GAAG,CAACJ,YAArB,GAAkC,IAAEtF,aAAF,GAAgBf,iBAAhB,GAAkCqB,YAA3E;AAAwF,WAA9I;;AAA+IO,UAAAA,uBAAuB,GAAC,SAASA,uBAAT,CAAiC2H,UAAjC,EAA4C;AAAC,gBAAIC,QAAJ;AAAA,gBAAaC,WAAW,GAACF,UAAU,CAAC9I,MAApC;AAAA,gBAA2CiJ,WAA3C;AAAA,gBAAuDC,aAAvD;AAAA,gBAAqEC,QAAQ,GAAC,CAA9E;AAAA,gBAAgFC,KAAhF;AAAA,gBAAsFC,IAAtF;AAAA,gBAA2FC,eAA3F;AAAA,gBAA2GC,OAA3G;AAAA,gBAAmHC,aAAnH;AAAiIlL,YAAAA,UAAU,CAAC+F,QAAX,CAAoB1F,UAApB;AAAgC6K,YAAAA,aAAa,GAAClL,UAAU,CAAC+G,UAAX,CAAsBjE,UAAtB,CAAd;AAAgD8H,YAAAA,aAAa,GAACM,aAAa,CAACxF,MAA5B;AAAmCiF,YAAAA,WAAW,GAACH,UAAU,CAACE,WAAW,GAAC,CAAb,CAAtB;;AAAsC,gBAAGnE,IAAI,CAACa,KAAL,CAAWuD,WAAW,CAACQ,cAAvB,KAAwC5E,IAAI,CAACgD,IAAL,CAAUmB,WAAW,IAAEE,aAAa,GAAC/G,cAAhB,CAArB,CAA3C,EAAiG;AAACmH,cAAAA,eAAe,GAACzE,IAAI,CAACa,KAAL,CAAW1H,SAAS,GAACkL,aAArB,CAAhB;AAAoDjK,cAAAA,YAAY,GAACqK,eAAe,GAACrK,YAAhB,GAA6B,CAA7B,GAA+BqK,eAA/B,GAA+CrK,YAA5D;AAAyE,aAA/N,MAAmO;AAACqK,cAAAA,eAAe,GAACzE,IAAI,CAACa,KAAL,CAAW1H,SAAS,IAAEkL,aAAa,GAAC,IAAE/G,cAAlB,CAApB,CAAhB;;AAAuE,iBAAE;AAACgH,gBAAAA,QAAQ,GAAC,CAAT;AAAWI,gBAAAA,OAAO,GAACD,eAAR;;AAAwB,qBAAIF,KAAK,GAACG,OAAO,GAAC,CAAd,EAAgBP,WAAW,GAACF,UAAU,CAAC9I,MAA3C,EAAkDoJ,KAAK,GAACJ,WAAxD,GAAqE;AAAC,sBAAGA,WAAW,GAACI,KAAZ,GAAkBE,eAArB,EAAqC;AAACF,oBAAAA,KAAK,GAACJ,WAAW,GAAC,CAAlB;AAAoB;;AAAAD,kBAAAA,QAAQ,GAACD,UAAU,CAACM,KAAD,CAAnB;AAA2BC,kBAAAA,IAAI,GAACN,QAAQ,CAACU,cAAT,GAAwBN,QAA7B;;AAAsC,sBAAG,CAAC,CAACE,IAAF,GAAO,CAAC,CAACrL,SAAZ,EAAsB;AAACoE,oBAAAA,aAAa,GAAC,IAAd;AAAmB;AAAM,mBAAhD,MAAoD;AAACA,oBAAAA,aAAa,GAAC,KAAd;AAAoB;;AAAA+G,kBAAAA,QAAQ,GAACJ,QAAQ,CAACU,cAAlB;AAAiCL,kBAAAA,KAAK,IAAEG,OAAP;AAAe;AAAC,eAAjW,QAAuWD,eAAe,MAAIlH,aAA1X;;AAAyYkH,cAAAA,eAAe;AAAGrK,cAAAA,YAAY,GAAC4F,IAAI,CAACnF,GAAL,CAAST,YAAT,EAAsBqK,eAAtB,CAAb;AAAoD;;AAAArL,YAAAA,UAAU,CAACyL,iBAAX,GAA6BzK,YAA7B;AAA0C,WAAnoC;;AAAooC+B,UAAAA,kBAAkB,GAAC,SAASA,kBAAT,CAA4B8H,UAA5B,EAAuC;AAAC,gBAAIC,QAAJ;AAAA,gBAAaH,QAAb;AAAA,gBAAsBI,WAAtB;AAAA,gBAAkCW,aAAlC;AAAA,gBAAgDP,KAAhD;AAAA,gBAAsDQ,YAAY,GAAC,CAAnE;;AAAqE,iBAAIR,KAAK,GAAC,CAAN,EAAQJ,WAAW,GAACF,UAAU,CAAC9I,MAAnC,EAA0CoJ,KAAK,GAACJ,WAAhD,EAA4DI,KAAK,EAAjE,EAAoE;AAACL,cAAAA,QAAQ,GAACD,UAAU,CAACM,KAAD,CAAnB;;AAA2B,kBAAGL,QAAQ,CAACc,WAAZ,EAAwB;AAAC;AAAS;;AAAAjB,cAAAA,QAAQ,GAACG,QAAQ,IAAEA,QAAQ,CAACnK,KAAnB,IAA0B,EAAnC;;AAAsC,kBAAG,EAAE+K,aAAa,GAACf,QAAQ,CAACpE,UAAzB,CAAH,EAAwC;AAACmF,gBAAAA,aAAa,GAAChL,UAAU,CAAC6F,UAAzB;AAAoC;;AAAAhF,cAAAA,kBAAkB,GAACoK,YAAY,KAAG3K,YAAlC;;AAA+C,kBAAGO,kBAAH,EAAsB;AAACuJ,gBAAAA,QAAQ,CAACe,YAAT,GAAsBH,aAAa,CAACvD,OAAd,CAAsB,KAAtB,EAA4B,EAA5B,IAAgC5G,kBAAtD;AAAyE,eAAhG,MAAoG;AAACuJ,gBAAAA,QAAQ,CAACe,YAAT,GAAsB,CAAtB;AAAwB;AAAC;AAAC,WAAniB;;AAAoiB;;AAAM,aAAI,MAAJ;AAAW/I,UAAAA,eAAe,GAACQ,uBAAuB,CAAC2G,WAAxB,CAAoC,MAApC,CAAhB;AAA4DnH,UAAAA,eAAe,CAAC+E,SAAhB,GAA0B9I,IAAI,CAACiE,MAA/B;AAAsCF,UAAAA,eAAe,CAACsF,QAAhB,GAAyBrJ,IAAI,CAACiE,MAA9B;AAAqCC,UAAAA,qBAAqB,GAAClE,IAAI,CAACiE,MAA3B;;AAAkC,cAAGhD,UAAU,CAACgG,YAAd,EAA2B;AAAC,gBAAGvF,UAAH,EAAc;AAACF,cAAAA,MAAM,CAACiK,QAAP,GAAgB,GAAhB;AAAoB,aAAnC,MAAuC;AAACjK,cAAAA,MAAM,CAACiK,QAAP,GAAgB,GAAhB;AAAoB;;AAAAjG,YAAAA,WAAW,GAACxE,SAAZ;AAAsB;;AAAA+C,UAAAA,eAAe,CAACuF,sBAAhB,GAAuC,YAAU;AAAC,mBAAOrI,UAAU,CAACiB,SAAlB;AAA4B,WAA9E;;AAA+E;;AAAM;AAAQ6B,UAAAA,eAAe,GAACQ,uBAAuB,CAAC2G,WAAxB,CAAoC,MAApC,CAAhB;;AAA4DnH,UAAAA,eAAe,CAAC+E,SAAhB,GAA0B,YAAU;AAAC,mBAAO9H,SAAP;AAAiB,WAAtD;;AAAuD+C,UAAAA,eAAe,CAACsF,QAAhB,GAAyB,UAASL,GAAT,EAAa;AAAC,mBAAOA,GAAG,CAACJ,YAAJ,GAAiBI,GAAG,CAACJ,YAArB,GAAkCtF,aAAa,GAAC,IAAEM,YAAzD;AAAsE,WAA7G;;AAA8GtC,UAAAA,UAAU,CAAC+F,QAAX,CAAoB9D,WAAW,CAAC3B,KAAhC;AAAuC+E,UAAAA,eAAe,GAACrF,UAAU,CAAC+G,UAAX,CAAsBjE,UAAtB,CAAhB;AAAkDsC,UAAAA,aAAa,GAACC,eAAe,CAACjD,KAA9B;;AAAoCQ,UAAAA,qBAAqB,GAAC,SAASA,qBAAT,CAA+BtC,KAA/B,EAAqCkK,UAArC,EAAgD;AAAC,gBAAI/C,GAAJ,EAAQiD,WAAR,EAAoBD,QAApB,EAA6BH,QAA7B;;AAAsC,gBAAG3K,UAAU,CAACiG,gBAAd,EAA+B;AAAC;AAAO;;AAAA5F,YAAAA,UAAU,CAAC+F,QAAX,CAAoBzF,KAApB;AAA2B+E,YAAAA,eAAe,GAACrF,UAAU,CAAC+G,UAAX,CAAsBjE,UAAtB,CAAhB;AAAkDsC,YAAAA,aAAa,GAACC,eAAe,CAACjD,KAA9B;;AAAoC,gBAAGgD,aAAa,IAAEpD,aAAf,IAA8BrC,UAAU,CAACgG,YAAX,KAA0B,CAA3D,EAA6D;AAACzF,cAAAA,MAAM,CAACiK,QAAP,GAAgB/J,UAAU,GAAC,GAAD,GAAK,GAA/B;AAAmCF,cAAAA,MAAM,CAACuL,WAAP,GAAmB,IAAnB;AAAwBhJ,cAAAA,eAAe,GAACQ,uBAAuB,CAAC2G,WAAxB,CAAoC,QAApC,CAAhB;AAA8DrH,cAAAA,gBAAgB,GAACE,eAAe,CAACsF,QAAjC;AAA0CvF,cAAAA,iBAAiB,GAACC,eAAe,CAAC+E,SAAlC;AAA4CvF,cAAAA,WAAW,CAACG,KAAZ,GAAkB,CAAlB;;AAAoB,mBAAIqF,GAAG,GAAC,CAAJ,EAAMiD,WAAW,GAACF,UAAU,CAAC9I,MAAjC,EAAwC+F,GAAG,GAACiD,WAA5C,EAAwDjD,GAAG,EAA3D,EAA8D;AAACgD,gBAAAA,QAAQ,GAACD,UAAU,CAAC/C,GAAD,CAAnB;;AAAyB,oBAAG,EAAEgD,QAAQ,KAAGA,QAAQ,CAACzD,KAAT,IAAgByD,QAAQ,CAACvB,QAA5B,CAAV,KAAkD,CAAC,GAAExK,IAAI,CAACgN,WAAR,EAAqBjB,QAAQ,CAACkB,SAA9B,EAAwChM,UAAU,CAACiM,UAAnD,EAA8D,CAA9D,MAAmE,CAArH,IAAwHnB,QAAQ,CAACc,WAAT,KAAuB,IAAlJ,EAAuJ;AAAC;AAAS;;AAAAjB,gBAAAA,QAAQ,GAACG,QAAQ,CAAC9C,SAAlB;AAA4B3H,gBAAAA,UAAU,CAAC+F,QAAX,CAAoB;AAACC,kBAAAA,QAAQ,EAACsE,QAAQ,CAACtE,QAAnB;AAA4BC,kBAAAA,UAAU,EAACqE,QAAQ,CAACrE,UAAhD;AAA2DC,kBAAAA,UAAU,EAACoE,QAAQ,CAACpE,UAA/E;AAA0FC,kBAAAA,UAAU,EAACmE,QAAQ,CAACnE;AAA9G,iBAApB;AAA+I9D,gBAAAA,cAAc,GAACrC,UAAU,CAACsJ,YAAX,CAAwBmB,QAAQ,CAACvB,QAAjC,EAA0C3G,gBAAgB,CAACkI,QAAD,CAA1D,EAAqEjI,iBAAiB,CAACiF,GAAD,CAAtF,CAAf;AAA4GgD,gBAAAA,QAAQ,CAACzD,KAAT,GAAe3E,cAAc,CAACH,IAA9B;AAAmCuI,gBAAAA,QAAQ,CAACoB,aAAT,GAAuBxJ,cAAc,CAACyJ,QAAtC;AAA+CrB,gBAAAA,QAAQ,CAACsB,OAAT,GAAiB1J,cAAjB;;AAAgC,oBAAGJ,WAAW,CAACG,KAAZ,GAAkBC,cAAc,CAACD,KAApC,EAA0C;AAACH,kBAAAA,WAAW,CAACC,IAAZ,GAAiBG,cAAc,CAACH,IAAhC;AAAqCD,kBAAAA,WAAW,CAACG,KAAZ,GAAkBC,cAAc,CAACD,KAAjC;AAAuCH,kBAAAA,WAAW,CAACyD,MAAZ,GAAmBrD,cAAc,CAACqD,MAAlC;AAAyCzD,kBAAAA,WAAW,CAAC3B,KAAZ,GAAkBgK,QAAlB;AAA2B;AAAC;;AAAApH,cAAAA,OAAO,GAACjB,WAAW,CAACC,IAApB;AAAyB;AAAC,WAA93C;;AAA+3C;AAArmJ;;AAA2mJK,MAAAA,gBAAgB,GAACE,eAAe,CAACsF,QAAjC;AAA0CvF,MAAAA,iBAAiB,GAACC,eAAe,CAAC+E,SAAlC;AAA4C5G,MAAAA,SAAS,GAACjB,UAAU,CAACO,MAAX,CAAkB8L,IAAlB,GAAuBrM,UAAU,CAACiB,SAAX,GAAqBjB,UAAU,CAACsM,aAAjE;AAA+ErL,MAAAA,SAAS,GAACjB,UAAU,CAACO,MAAX,CAAkB8L,IAAlB,GAAuBrM,UAAU,CAACiB,SAAX,GAAqB6B,eAAe,CAACuF,sBAAhB,CAAuC1G,aAAvC,CAAtD;AAA4G8B,MAAAA,UAAU,GAAC,CAAC,GAAE3E,UAAU,CAACyN,cAAd,EAA8B5K,aAA9B,CAAX;;AAAwD,WAAIiC,CAAC,GAACH,UAAF,EAAaD,UAAU,GAAC,CAAxB,EAA0BK,KAAK,GAAC,CAAhC,EAAkC3B,cAAc,GAACP,aAAa,CAACI,MAAnE,EAA0E6B,CAAC,GAAC1B,cAA5E,EAA2F0B,CAAC,IAAGJ,UAAU,EAAzG,EAA4G;AAACrB,QAAAA,cAAc,GAACR,aAAa,CAACiC,CAAD,CAA5B;;AAAgC,YAAG,EAAEzB,cAAc,KAAGA,cAAc,CAACkF,KAAf,IAAsBlF,cAAc,CAACoH,QAAxC,CAAhB,KAAoE,CAAC,GAAExK,IAAI,CAACgN,WAAR,EAAqB5J,cAAc,CAAC6J,SAApC,EAA8ChM,UAAU,CAACiM,UAAzD,EAAoE,CAApE,MAAyE,CAAhJ,EAAkJ;AAAC;AAAS;;AAAAzH,QAAAA,4BAA4B,GAAC,IAA7B;AAAkCpC,QAAAA,eAAe,GAAC;AAACiE,UAAAA,QAAQ,EAAC3F,UAAU,CAAC2F,QAArB;AAA8BC,UAAAA,UAAU,EAAC5F,UAAU,CAAC4F,UAApD;AAA+DC,UAAAA,UAAU,EAAC7F,UAAU,CAAC6F,UAArF;AAAgGC,UAAAA,UAAU,EAAC9F,UAAU,CAAC8F;AAAtH,SAAhB;AAAkJ,SAAC,GAAEzH,IAAI,CAACyK,OAAR,EAAiBpH,eAAjB,EAAiCD,cAAc,CAACxB,KAAhD;AAAuDyB,QAAAA,eAAe,CAACmE,UAAhB,GAA2B,CAAC,GAAExH,IAAI,CAAC2K,aAAR,EAAuBtH,eAAvB,CAA3B;AAAmEiD,QAAAA,YAAY,GAACjD,eAAe,CAACiE,QAAhB,GAAyBjE,eAAe,CAACkE,UAAzC,GAAoDlE,eAAe,CAACmE,UAApE,GAA+EnE,eAAe,CAACoE,UAA5G;;AAAuH,YAAGnB,YAAY,KAAGD,YAAlB,EAA+B;AAAC/E,UAAAA,UAAU,CAAC+F,QAAX,CAAoBhE,eAApB;AAAqCgD,UAAAA,YAAY,GAACC,YAAb;AAA0B;;AAAA,YAAG7B,UAAU,GAACvC,SAAd,EAAwB;AAACkB,UAAAA,cAAc,CAACyJ,WAAf,GAA2B,IAA3B;AAAgCzJ,UAAAA,cAAc,CAACqK,iBAAf,GAAiC,KAAjC;AAAuCpI,UAAAA,SAAS;AAAG;AAAS,SAArH,MAAyH;AAACjC,UAAAA,cAAc,CAACqK,iBAAf,GAAiC,IAAjC;AAAsCrK,UAAAA,cAAc,CAACyJ,WAAf,GAA2B,KAA3B;AAAiC;;AAAAzJ,QAAAA,cAAc,CAAC6F,SAAf,GAAyB5F,eAAzB;;AAAyC,YAAGT,aAAa,CAACiC,CAAD,CAAb,CAAiBiC,SAApB,EAA8B;AAACxE,UAAAA,oBAAoB,GAACuF,IAAI,CAACpF,GAAL,CAAShB,YAAY,KAAG,QAAf,GAAwBmB,aAAa,CAACiC,CAAD,CAAb,CAAiBiC,SAAjB,GAA2B,IAAE3G,qBAArD,GAA2E,CAApF,EAAsF2D,iBAAiB,CAACe,CAAD,CAAvG,CAArB;AAAiI,SAAhK,MAAoK;AAAC,cAAGpD,YAAY,KAAG,QAAlB,EAA2B;AAAC,gBAAGoD,CAAC,GAAC1B,cAAc,GAAC,CAApB,EAAsB;AAACD,cAAAA,QAAQ,GAACnC,IAAI,CAACgG,QAAL,CAAclC,CAAC,GAAC,CAAhB,IAAmB9D,IAAI,CAACgG,QAAL,CAAclC,CAAd,CAAnB,GAAoCzE,qBAA7C;AAAmE;AAAC,WAAvH,MAA2H;AAAC8C,YAAAA,QAAQ,GAAC,CAAT;AAAW;;AAAA,cAAGzB,YAAY,KAAG,QAAf,IAAyBiM,KAAK,CAAC,CAACxK,QAAF,CAAjC,EAA6C;AAACA,YAAAA,QAAQ,GAAC7B,WAAW,CAACsM,WAAZ,GAAwB5M,IAAI,CAAC6M,gBAAL,EAAxB,GAAgDzN,qBAAzD;AAA+E;;AAAAmC,UAAAA,oBAAoB,GAACuF,IAAI,CAACpF,GAAL,CAASS,QAAT,EAAkBY,iBAAiB,CAACe,CAAD,CAAnC,CAArB;AAA6D;;AAAAlB,QAAAA,cAAc,GAACrC,UAAU,CAACsJ,YAAX,CAAwBxH,cAAc,CAACoH,QAAf,IAAyBpH,cAAc,CAACkF,KAAhE,EAAsEzE,gBAAgB,CAACT,cAAD,CAAtF,EAAuGd,oBAAvG,CAAf;AAA4I4C,QAAAA,aAAa,IAAEvB,cAAc,CAACqD,MAAf,GAAsB7B,cAArC;AAAoDpE,QAAAA,IAAI,CAAC8M,UAAL,CAAgBrM,MAAhB,CAAuBsD,KAAK,EAA5B,IAAgC;AAAC5D,UAAAA,MAAM,EAAC;AAACwC,YAAAA,KAAK,EAACC,cAAc,CAACD,KAAtB;AAA4BsD,YAAAA,MAAM,EAACrD,cAAc,CAACqD,MAAlD;AAAyD8G,YAAAA,KAAK,EAAC;AAACxF,cAAAA,KAAK,EAAC;AAAP;AAA/D;AAAR,SAAhC;AAAoHlF,QAAAA,cAAc,CAACqJ,cAAf,GAA8BvH,aAA9B;AAA4C9B,QAAAA,cAAc,CAACoH,QAAf,GAAwBpH,cAAc,CAACoH,QAAf,IAAyBpH,cAAc,CAACkF,KAAhE;AAAsElF,QAAAA,cAAc,CAACkF,KAAf,GAAqB3E,cAAc,CAACH,IAApC;AAAyCJ,QAAAA,cAAc,CAAC+J,aAAf,GAA6BxJ,cAAc,CAACyJ,QAA5C;AAAqDhK,QAAAA,cAAc,CAACiK,OAAf,GAAuB1J,cAAvB;;AAAsC,YAAGJ,WAAW,CAACG,KAAZ,GAAkBC,cAAc,CAACD,KAApC,EAA0C;AAAC,WAAC,GAAE1D,IAAI,CAACyK,OAAR,EAAiBlH,WAAjB,EAA6BI,cAA7B;AAA6CJ,UAAAA,WAAW,CAAC3B,KAAZ,GAAkByB,eAAlB;AAAkC;;AAAA,YAAGvB,cAAc,GAAC6B,cAAc,CAACqD,MAAjC,EAAwC;AAAClF,UAAAA,cAAc,GAAC6B,cAAc,CAACqD,MAA9B;AAAqC;AAAC;;AAAA,UAAG,CAACvB,4BAAJ,EAAiC;AAAC,eAAM;AAACuB,UAAAA,MAAM,EAAC,CAAR;AAAUtD,UAAAA,KAAK,EAAC;AAAhB,SAAN;AAAyB;;AAAAS,MAAAA,uBAAuB,CAACvB,aAAD,EAAeyC,SAAf,CAAvB;AAAiDrB,MAAAA,kBAAkB,CAACpB,aAAD,EAAeyC,SAAf,CAAlB;AAA4CnB,MAAAA,qBAAqB,CAACX,WAAW,CAAC3B,KAAb,EAAmBgB,aAAnB,CAArB;AAAuD4B,MAAAA,OAAO,GAACjB,WAAW,CAACC,IAAZ,IAAkB,EAA1B;;AAA6B,UAAGvC,UAAU,CAAC8M,cAAX,KAA4B,OAA/B,EAAuC;AAAC,YAAG9M,UAAU,CAAC+M,SAAd,EAAwB;AAAChJ,UAAAA,iBAAiB,GAAC7D,KAAK,CAACC,UAAN,CAAiB,kBAAjB,EAAqC6M,YAAvD;AAAoE,SAA7F,MAAiG;AAACjJ,UAAAA,iBAAiB,GAAC7D,KAAK,CAACC,UAAN,CAAiB,kBAAjB,EAAqC8M,KAAvD;AAA6D;;AAAAvL,QAAAA,WAAW,GAAC6B,OAAO,CAACxB,MAApB;;AAA2B,aAAI6B,CAAC,GAAC,CAAF,EAAI2B,EAAE,GAACD,KAAK,IAAEA,KAAK,CAACvD,MAAxB,EAA+B6B,CAAC,GAAC2B,EAAjC,EAAoC,EAAE3B,CAAtC,EAAwC;AAACE,UAAAA,KAAK,GAACwB,KAAK,CAAC1B,CAAD,CAAX;AAAerB,UAAAA,IAAI,GAAC,KAAGwB,iBAAiB,CAACmJ,IAAlB,CAAuBhN,KAAK,CAACC,UAAN,CAAiB,kBAAjB,CAAvB,EAA4D2D,KAA5D,EAAkE9D,UAAU,CAACmN,SAA7E,CAAR;;AAAgG,cAAG5K,IAAI,CAACR,MAAL,GAAYL,WAAf,EAA2B;AAAC6B,YAAAA,OAAO,GAAChB,IAAR;AAAab,YAAAA,WAAW,GAACa,IAAI,CAACR,MAAjB;AAAwB;AAAC;AAAC;;AAAAO,MAAAA,WAAW,CAACyD,MAAZ,GAAmBa,IAAI,CAACpF,GAAL,CAASX,cAAT,EAAwByB,WAAW,CAACyD,MAAZ,IAAoB,CAA5C,CAAnB;AAAkEb,MAAAA,SAAS,GAACvD,aAAa,CAACI,MAAxB;;AAA+B,WAAI6B,CAAC,GAAC,CAAF,EAAI1B,cAAc,GAACP,aAAa,CAACI,MAArC,EAA4C6B,CAAC,GAAC1B,cAA9C,EAA6D0B,CAAC,EAA9D,EAAiE;AAACoB,QAAAA,aAAa,GAACrD,aAAa,CAACiC,CAAD,CAA3B;;AAA+B,YAAGoB,aAAa,CAACoH,OAAjB,EAAyB;AAAC;AAAM;AAAC;;AAAA,WAAIlK,cAAc,GAACP,aAAa,CAACI,MAA7B,EAAoC6B,CAAC,GAAC1B,cAAc,GAAC,CAAzD,EAA2D0B,CAAC,IAAE,CAA9D,EAAgEA,CAAC,EAAjE,EAAoE;AAACqB,QAAAA,YAAY,GAACtD,aAAa,CAACiC,CAAD,CAA1B;;AAA8B,YAAGqB,YAAY,CAACmH,OAAhB,EAAwB;AAAC;AAAM;AAAC;;AAAAjH,MAAAA,QAAQ,GAACrF,IAAI,CAACsN,OAAL,OAAiB,CAA1B;;AAA4B,UAAG,CAAC7M,MAAM,CAACiK,QAAR,IAAkB,CAACrF,QAAnB,IAA6BH,aAAa,CAACoH,OAA9C,EAAsD;AAACpM,QAAAA,UAAU,CAACqN,wBAAX,CAAoCC,IAApC,GAAyC1G,IAAI,CAACpF,GAAL,CAASN,UAAU,IAAEpB,IAAI,CAACgH,eAAL,CAAqB9B,aAAa,CAACY,CAAd,IAAiB,CAAtC,IAAyCZ,aAAa,CAACoH,OAAd,CAAsB3J,KAAtB,GAA4B,CAAvE,CAAnB,EAA6F,CAA7F,CAAzC;AAAyIzC,QAAAA,UAAU,CAACqN,wBAAX,CAAoCE,KAApC,GAA0C3G,IAAI,CAACpF,GAAL,CAAS1B,IAAI,CAACgH,eAAL,CAAqB7B,YAAY,CAACW,CAAb,IAAgBV,SAAS,GAAC,CAA/C,IAAkDD,YAAY,CAACmH,OAAb,CAAqB3J,KAArB,GAA2B,CAA7E,GAA+EtB,WAAxF,EAAoG,CAApG,CAA1C;AAAiJ,OAAjV,MAAqV;AAACnB,QAAAA,UAAU,CAACqN,wBAAX,CAAoCC,IAApC,GAAyC,CAAzC;AAA2CtN,QAAAA,UAAU,CAACqN,wBAAX,CAAoCE,KAApC,GAA0C,CAA1C;AAA4C;;AAAAvJ,MAAAA,MAAM,GAAC1B,WAAP;AAAmB,KAAzqR,MAA6qR;AAAC,UAAGtC,UAAU,CAAC+D,iBAAd,EAAgC;AAACA,QAAAA,iBAAiB,GAAC7D,KAAK,CAACC,UAAN,CAAiB,kBAAjB,EAAqCH,UAAU,CAAC+D,iBAAhD,CAAlB;AAAqF,OAAtH,MAA2H,IAAG/D,UAAU,CAAC+M,SAAd,EAAwB;AAAChJ,QAAAA,iBAAiB,GAAC7D,KAAK,CAACC,UAAN,CAAiB,kBAAjB,EAAqC6M,YAAvD;AAAoE,OAA7F,MAAiG;AAACjJ,QAAAA,iBAAiB,GAAC7D,KAAK,CAACC,UAAN,CAAiB,kBAAjB,EAAqC8M,KAAvD;AAA6D;;AAAA,WAAIrJ,CAAC,GAAC,CAAF,EAAI2B,EAAE,GAACD,KAAK,IAAEA,KAAK,CAACvD,MAAxB,EAA+B6B,CAAC,GAAC2B,EAAjC,EAAoC,EAAE3B,CAAtC,EAAwC;AAAC4B,QAAAA,IAAI,GAACF,KAAK,CAAC1B,CAAD,CAAV;AAAcE,QAAAA,KAAK,GAAC,CAAC,GAAE/E,IAAI,CAACyO,WAAR,EAAqBhI,IAArB,EAA0B,EAA1B,CAAN;AAAoCjD,QAAAA,IAAI,GAAC,KAAGwB,iBAAiB,CAACmJ,IAAlB,CAAuBhN,KAAK,CAACC,UAAN,CAAiB,kBAAjB,CAAvB,EAA4D2D,KAA5D,EAAkE9D,UAAU,CAACmN,SAA7E,CAAR;;AAAgG,YAAG3H,IAAI,KAAG/D,GAAV,EAAc;AAACiC,UAAAA,UAAU,GAACnB,IAAX;AAAgB;;AAAA,YAAGiD,IAAI,KAAGhE,GAAV,EAAc;AAACmC,UAAAA,SAAS,GAACpB,IAAV;AAAe;;AAAAyB,QAAAA,MAAM,GAAC3D,UAAU,CAAC+G,UAAX,CAAsB7E,IAAtB,CAAP;AAAmCzC,QAAAA,IAAI,CAAC8M,UAAL,CAAgBrM,MAAhB,CAAuBqD,CAAvB,IAA0B;AAAC3D,UAAAA,MAAM,EAAC;AAACwC,YAAAA,KAAK,EAACuB,MAAM,CAACvB,KAAd;AAAoBsD,YAAAA,MAAM,EAAC/B,MAAM,CAAC+B,MAAlC;AAAyC8G,YAAAA,KAAK,EAAC;AAACxF,cAAAA,KAAK,EAAC;AAAP;AAA/C;AAAR,SAA1B;;AAA8F,YAAG9E,IAAI,CAACR,MAAL,GAAYL,WAAf,EAA2B;AAAC6B,UAAAA,OAAO,GAAChB,IAAR;AAAab,UAAAA,WAAW,GAACa,IAAI,CAACR,MAAjB;AAAwB;AAAC;;AAAA1B,MAAAA,UAAU,CAAC+F,QAAX,CAAoB;AAACC,QAAAA,QAAQ,EAAC3F,UAAU,CAAC2F,QAArB;AAA8BC,QAAAA,UAAU,EAAC5F,UAAU,CAAC4F,UAApD;AAA+DC,QAAAA,UAAU,EAAC7F,UAAU,CAAC6F,UAArF;AAAgGC,QAAAA,UAAU,EAAC9F,UAAU,CAAC8F;AAAtH,OAApB;AAAuJxC,MAAAA,MAAM,GAAC3D,UAAU,CAAC+G,UAAX,CAAsB7D,OAAO,IAAE,EAA/B,CAAP;;AAA0C,UAAG/C,YAAY,KAAG,QAAlB,EAA2B;AAACD,QAAAA,MAAM,CAACiK,QAAP,GAAgB,GAAhB;AAAoB;;AAAA,UAAGxK,UAAU,CAACgG,YAAd,EAA2B;AAAC,YAAGvF,UAAH,EAAc;AAACF,UAAAA,MAAM,CAACiK,QAAP,GAAgB,GAAhB;AAAoB,SAAnC,MAAuC;AAACjK,UAAAA,MAAM,CAACiK,QAAP,GAAgB,GAAhB;AAAoB;AAAC;;AAAA,UAAG,CAACjK,MAAM,CAACiK,QAAX,EAAoB;AAAC9G,QAAAA,UAAU,GAACrD,UAAU,CAAC+G,UAAX,CAAsB1D,UAAU,IAAE,EAAlC,CAAX;AAAiDC,QAAAA,SAAS,GAACtD,UAAU,CAAC+G,UAAX,CAAsBzD,SAAS,IAAE,EAAjC,CAAV;AAA+C3D,QAAAA,UAAU,CAACqN,wBAAX,CAAoCC,IAApC,GAAyC5J,UAAU,CAACjB,KAAX,GAAiB,CAAjB,GAAmB,CAA5D;AAA8DzC,QAAAA,UAAU,CAACqN,wBAAX,CAAoCE,KAApC,GAA0C5J,SAAS,CAAClB,KAAV,GAAgB,CAAhB,GAAkB,CAA5D;AAA8D;AAAC;;AAAA,QAAGzC,UAAU,CAAC4B,UAAX,IAAuBpB,YAAY,KAAG,SAAzC,EAAmD;AAACwD,MAAAA,MAAM,CAAC+B,MAAP,GAAc/E,YAAY,GAACsB,WAAW,CAACyD,MAAvC;AAA8C;;AAAA/B,IAAAA,MAAM,CAACvB,KAAP,GAAa8B,WAAW,GAACqC,IAAI,CAACnF,GAAL,CAAS8C,WAAT,EAAqBP,MAAM,CAACvB,KAA5B,CAAD,GAAoCuB,MAAM,CAACvB,KAAnE;AAAyEuB,IAAAA,MAAM,CAACvB,KAAP,GAAa,CAAC,GAAE1D,IAAI,CAACgN,WAAR,EAAqB/H,MAAM,CAACvB,KAA5B,CAAb;AAAgDuB,IAAAA,MAAM,CAACyJ,QAAP,GAAgB,CAAC,GAAE1O,IAAI,CAACgN,WAAR,EAAqB/H,MAAM,CAACyJ,QAA5B,CAAhB;AAAsD,WAAOzJ,MAAP;AAAc,GAAv6iB;;AAAw6iBtE,EAAAA,MAAM,CAACgO,sBAAP,GAA8B,SAASA,sBAAT,CAAgCC,SAAhC,EAA0C;AAAC,QAAI7N,IAAI,GAAC,IAAT;AAAA,QAAc2N,QAAQ,GAACE,SAAvB;AAAA,QAAiC3N,UAAU,GAACF,IAAI,CAACG,MAAjD;AAAA,QAAwDC,KAAK,GAACJ,IAAI,CAACK,UAAL,CAAgB,OAAhB,CAA9D;AAAA,QAAuFC,WAAW,GAACF,KAAK,CAACD,MAAzG;AAAA,QAAgHI,UAAU,GAACH,KAAK,CAACC,UAAN,CAAiB,YAAjB,CAA3H;AAAA,QAA0JO,UAAU,GAACV,UAAU,CAACO,MAAX,CAAkBI,KAAvL;AAAA,QAA6LwF,uBAAuB,GAACnG,UAAU,CAACmG,uBAAhO;AAAA,QAAwPyH,oBAAoB,GAAC5N,UAAU,CAAC4N,oBAAxR;AAAA,QAA6SC,oBAAoB,GAAC7N,UAAU,CAAC6N,oBAA7U;AAAA,QAAkWnM,WAAW,GAAC,CAA9W;AAAA,QAAgXmJ,UAAU,GAAC3K,KAAK,CAACC,UAAN,CAAiB,YAAjB,EAA+B0K,UAA1Z;AAAA,QAAqaiD,gBAAgB,GAAC;AAAC/H,MAAAA,MAAM,EAAC,CAAR;AAAUtD,MAAAA,KAAK,EAAC;AAAhB,KAAtb;AAAA,QAAycc,OAAzc;AAAA,QAAidwK,YAAjd;AAAA,QAA8dC,YAA9d;AAAA,QAA2epK,CAA3e;AAAA,QAA6e2B,EAA7e;AAAA,QAAgfD,KAAK,GAACtF,UAAU,CAACsF,KAAjgB;AAAA,QAAugBxB,KAAvgB;AAAA,QAA6gBvB,IAA7gB;AAAA,QAAkhBZ,aAAlhB;AAAA,QAAgiBO,cAAhiB;AAAA,QAA+iBC,cAA/iB;AAAA,QAA8jBO,cAA9jB;AAAA,QAA6kBqB,iBAA7kB;AAAA,QAA+lBkK,eAAe,GAAC,EAA/mB;AAAA,QAAknBC,aAAlnB;AAAA,QAAgoBC,mBAAhoB;AAAopB9N,IAAAA,UAAU,CAAC6F,qBAAX,CAAiC9F,WAAW,CAAC+F,uBAA7C;AAAsE9F,IAAAA,UAAU,CAAC+F,QAAX,CAAoB;AAACC,MAAAA,QAAQ,EAAC3F,UAAU,CAAC2F,QAArB;AAA8BC,MAAAA,UAAU,EAAC5F,UAAU,CAAC4F,UAApD;AAA+DC,MAAAA,UAAU,EAAC7F,UAAU,CAAC6F,UAArF;AAAgGC,MAAAA,UAAU,EAAC9F,UAAU,CAAC8F;AAAtH,KAApB;;AAAuJ,QAAGxG,UAAU,CAAC4B,UAAd,EAAyB;AAAC,UAAGiJ,UAAH,EAAc;AAACoD,QAAAA,eAAe,GAAC;AAAC3H,UAAAA,UAAU,EAACuE,UAAU,CAAC,CAAD,CAAV,CAAcuD,IAA1B;AAA+B/H,UAAAA,QAAQ,EAACwE,UAAU,CAAC,CAAD,CAAV,CAAcwD,QAAtD;AAA+DC,UAAAA,KAAK,EAACzD,UAAU,CAAC,CAAD,CAAV,CAAc0D;AAAnF,SAAhB;AAA8G;;AAAA,UAAGX,oBAAH,EAAwB;AAACG,QAAAA,YAAY,GAACH,oBAAoB,GAAC,GAArB,GAAyBxN,WAAW,CAACqC,KAAlD;;AAAwD,YAAGsL,YAAY,GAACN,QAAhB,EAAyB;AAACA,UAAAA,QAAQ,GAACM,YAAT;AAAsB;AAAC;;AAAA,UAAGF,oBAAH,EAAwB;AAACG,QAAAA,YAAY,GAACH,oBAAoB,GAAC,GAArB,GAAyBzN,WAAW,CAACqC,KAAlD;;AAAwD,YAAGuL,YAAY,GAACP,QAAhB,EAAyB;AAACA,UAAAA,QAAQ,GAACO,YAAT;AAAsB;AAAC;;AAAArM,MAAAA,aAAa,GAAC3B,UAAU,CAAC4B,UAAX,CAAsBC,SAApC;;AAA8C,WAAI+B,CAAC,GAAC,CAAF,EAAI1B,cAAc,GAACP,aAAa,CAACI,MAArC,EAA4C6B,CAAC,GAAC1B,cAA9C,EAA6D0B,CAAC,EAA9D,EAAiE;AAACzB,QAAAA,cAAc,GAACR,aAAa,CAACiC,CAAD,CAA5B;;AAAgC,YAAG,CAAC,GAAE7E,IAAI,CAACgN,WAAR,EAAqB5J,cAAc,CAAC6J,SAApC,EAA8ChM,UAAU,CAACiM,UAAzD,MAAuE,CAA1E,EAA4E;AAAC;AAAS;;AAAAiC,QAAAA,aAAa,GAAC;AAAC5H,UAAAA,UAAU,EAAC,CAAC,GAAEvH,IAAI,CAACyP,KAAR,EAAerM,cAAc,CAACiM,IAA9B,EAAmCjM,cAAc,CAACsM,SAAlD,EAA4DR,eAAe,CAAC3H,UAA5E,EAAuF5F,UAAU,CAAC4F,UAAlG,CAAZ;AAA0HD,UAAAA,QAAQ,EAAC,CAAC,GAAEtH,IAAI,CAACyP,KAAR,EAAe,KAAKE,eAAL,CAAqBvM,cAAc,CAACkM,QAApC,CAAf,EAA6DlM,cAAc,CAACwM,aAA5E,EAA0FV,eAAe,CAAC5H,QAA1G,EAAmH3F,UAAU,CAAC2F,QAA9H,EAAwIuI,QAAxI,GAAmJzG,OAAnJ,CAA2J,KAA3J,EAAiK,EAAjK,IAAqK,IAAxS;AAA6S3B,UAAAA,UAAU,EAAC9F,UAAU,CAAC8F,UAAX,KAAwB,QAAxB,GAAiC,CAAC,GAAEzH,IAAI,CAACgN,WAAR,EAAqB5J,cAAc,CAAC0M,QAApC,EAA6C1M,cAAc,CAAC2M,aAA5D,EAA0E,CAA1E,IAA6E,MAA7E,GAAoF,QAArH,GAA8HpO,UAAU,CAAC8F,UAAjc;AAA4cuI,UAAAA,SAAS,EAACrO,UAAU,CAACqO,SAAX,KAAuB,QAAvB,GAAgC,CAAC,GAAEhQ,IAAI,CAACgN,WAAR,EAAqB5J,cAAc,CAAC6M,UAApC,EAA+C7M,cAAc,CAAC8M,eAA9D,EAA8E,CAA9E,IAAiF,QAAjF,GAA0F,QAA1H,GAAmIvO,UAAU,CAACqO;AAApmB,SAAd;AAA6nBZ,QAAAA,mBAAmB,GAAC;AAAC7H,UAAAA,UAAU,EAAC,CAAC,GAAEvH,IAAI,CAACyP,KAAR,EAAeN,aAAa,CAAC5H,UAA7B,EAAwC2H,eAAe,CAAC3H,UAAxD,EAAmE5F,UAAU,CAAC4F,UAA9E,CAAZ;AAAsGD,UAAAA,QAAQ,EAAC,CAAC,GAAEtH,IAAI,CAACyP,KAAR,EAAeN,aAAa,CAAC7H,QAA7B,EAAsC4H,eAAe,CAAC5H,QAAtD,EAA+D3F,UAAU,CAAC2F,QAA1E,CAA/G;AAAmMG,UAAAA,UAAU,EAAC,CAAC,GAAEzH,IAAI,CAACyP,KAAR,EAAeN,aAAa,CAAC1H,UAA7B,EAAwC9F,UAAU,CAAC8F,UAAnD,CAA9M;AAA6QuI,UAAAA,SAAS,EAAC,CAAC,GAAEhQ,IAAI,CAACyP,KAAR,EAAeN,aAAa,CAACa,SAA7B,EAAuCrO,UAAU,CAACqO,SAAlD;AAAvR,SAApB;AAAyWZ,QAAAA,mBAAmB,CAAC5H,UAApB,GAA+B,CAAC,GAAExH,IAAI,CAAC2K,aAAR,EAAuByE,mBAAvB,CAA/B;AAA2E9N,QAAAA,UAAU,CAAC+F,QAAX,CAAoB+H,mBAApB;AAAyCzL,QAAAA,cAAc,GAACrC,UAAU,CAACsJ,YAAX,CAAwBxH,cAAc,CAACoH,QAAf,IAAyBpH,cAAc,CAACkF,KAAhE,EAAsEoG,QAAtE,EAA+E/M,UAAU,CAAC6F,UAA1F,EAAqGJ,uBAArG,CAAf;AAA6IrG,QAAAA,IAAI,CAAC8M,UAAL,CAAgBrM,MAAhB,CAAuBqD,CAAvB,IAA0B;AAAC3D,UAAAA,MAAM,EAAC;AAACwC,YAAAA,KAAK,EAACC,cAAc,CAACD,KAAtB;AAA4BsD,YAAAA,MAAM,EAACrD,cAAc,CAACqD,MAAlD;AAAyD8G,YAAAA,KAAK,EAAC;AAACxF,cAAAA,KAAK,EAAC;AAAP;AAA/D;AAAR,SAA1B;AAA8GlF,QAAAA,cAAc,CAACoH,QAAf,GAAwBpH,cAAc,CAACoH,QAAf,IAAyBpH,cAAc,CAACkF,KAAhE;AAAsElF,QAAAA,cAAc,CAACkF,KAAf,GAAqB9E,IAAI,GAACG,cAAc,CAACH,IAAzC;AAA8CJ,QAAAA,cAAc,CAAC+J,aAAf,GAA6BxJ,cAAc,CAACyJ,QAA5C;;AAAqD,YAAGzJ,cAAc,CAACD,KAAf,GAAqBf,WAAxB,EAAoC;AAACoM,UAAAA,gBAAgB,GAACpL,cAAjB;AAAgChB,UAAAA,WAAW,GAACgB,cAAc,CAACD,KAA3B;AAAiC;AAAC;;AAAA,aAAOqL,gBAAP;AAAwB;;AAAA,QAAG9N,UAAU,CAAC+D,iBAAd,EAAgC;AAACA,MAAAA,iBAAiB,GAAC7D,KAAK,CAACC,UAAN,CAAiB,kBAAjB,EAAqCH,UAAU,CAAC+D,iBAAhD,CAAlB;AAAqF,KAAtH,MAA2H,IAAG/D,UAAU,CAAC+M,SAAd,EAAwB;AAAChJ,MAAAA,iBAAiB,GAAC7D,KAAK,CAACC,UAAN,CAAiB,kBAAjB,EAAqC+O,iBAAvD;AAAyE,KAAlG,MAAsG;AAACnL,MAAAA,iBAAiB,GAAC7D,KAAK,CAACC,UAAN,CAAiB,kBAAjB,EAAqCgP,KAAvD;AAA6D;;AAAA,SAAIvL,CAAC,GAAC,CAAF,EAAI2B,EAAE,GAACD,KAAK,IAAEA,KAAK,CAACvD,MAAxB,EAA+B6B,CAAC,GAAC2B,EAAjC,EAAoC,EAAE3B,CAAtC,EAAwC;AAACE,MAAAA,KAAK,GAAC,CAAC,GAAE/E,IAAI,CAACyO,WAAR,EAAqBlI,KAAK,CAAC1B,CAAD,CAA1B,EAA8B,EAA9B,CAAN;AAAwCrB,MAAAA,IAAI,GAAC,KAAGwB,iBAAiB,CAACmJ,IAAlB,CAAuBhN,KAAK,CAACC,UAAN,CAAiB,kBAAjB,CAAvB,EAA4D2D,KAA5D,EAAkE9D,UAAU,CAACmN,SAA7E,CAAR;AAAgGzK,MAAAA,cAAc,GAACrC,UAAU,CAACsJ,YAAX,CAAwBpH,IAAxB,CAAf;AAA6CzC,MAAAA,IAAI,CAAC8M,UAAL,CAAgBrM,MAAhB,CAAuBqD,CAAvB,IAA0B;AAAC3D,QAAAA,MAAM,EAAC;AAACwC,UAAAA,KAAK,EAACC,cAAc,CAACD,KAAtB;AAA4BsD,UAAAA,MAAM,EAACrD,cAAc,CAACqD,MAAlD;AAAyD8G,UAAAA,KAAK,EAAC;AAACxF,YAAAA,KAAK,EAAC;AAAP;AAA/D;AAAR,OAA1B;;AAA8G,UAAG9E,IAAI,CAACR,MAAL,GAAYL,WAAf,EAA2B;AAAC6B,QAAAA,OAAO,GAAChB,IAAR;AAAab,QAAAA,WAAW,GAACa,IAAI,CAACR,MAAjB;AAAwB;AAAC;;AAAA,WAAO1B,UAAU,CAAC+G,UAAX,CAAsB7D,OAAtB,CAAP;AAAsC,GAA34H;;AAA44H7D,EAAAA,MAAM,CAAC0P,aAAP,GAAqB,SAASA,aAAT,CAAuBC,GAAvB,EAA2BxI,GAA3B,EAA+B;AAAC,QAAI/G,IAAI,GAAC,IAAT;AAAA,QAAcwP,eAAe,GAACxP,IAAI,CAACK,UAAL,CAAgB,kBAAhB,CAA9B;AAAkE,WAAOmP,eAAe,CAACF,aAAhB,CAA8BC,GAA9B,EAAkCxI,GAAlC,CAAP;AAA8C,GAArK;;AAAsKnH,EAAAA,MAAM,CAAC6P,kBAAP,GAA0B,SAASA,kBAAT,GAA6B;AAAC,QAAG,IAAH,EAAQ,OAAM,EAAN;AAAS,GAAzE;;AAA0E7P,EAAAA,MAAM,CAAC8P,SAAP,GAAiB,SAASA,SAAT,CAAmBC,IAAnB,EAAwB;AAAC,QAAI3P,IAAI,GAAC,IAAT;AAAA,QAAcE,UAAU,GAACF,IAAI,CAACG,MAA9B;AAAqCD,IAAAA,UAAU,CAAC0P,MAAX,GAAkBD,IAAlB;AAAuB,GAAtG;;AAAuG/P,EAAAA,MAAM,CAACiQ,sBAAP,GAA8B,SAASA,sBAAT,CAAgCC,QAAhC,EAAyC;AAAC,QAAI9P,IAAI,GAAC,IAAT;AAAA,QAAcE,UAAU,GAACF,IAAI,CAACG,MAA9B;AAAA,QAAqCkN,SAAS,GAACnN,UAAU,CAACmN,SAA1D;AAAA,QAAoE0C,UAAU,GAAC7P,UAAU,CAAC6P,UAA1F;AAAA,QAAqG3P,KAAK,GAACJ,IAAI,CAACK,UAAL,CAAgB,OAAhB,CAA3G;AAAA,QAAoImP,eAAe,GAACpP,KAAK,CAACC,UAAN,CAAiB,kBAAjB,CAApJ;AAAA,QAAyL2P,uBAAuB,GAAC9P,UAAU,CAAC+P,wBAA5N;AAAA,QAAqPC,mBAAmB,GAAChQ,UAAU,CAACiQ,oBAApR;AAAA,QAAySC,GAAzS;AAAA,QAA6SC,UAAU,GAAC,CAAxT;AAAA,QAA0TC,YAA1T;;AAAuU,QAAGP,UAAU,IAAE7P,UAAU,CAAC+D,iBAAX,KAA+B,OAA9C,EAAsD;AAACqM,MAAAA,YAAY,GAAC,CAACd,eAAe,CAACe,CAAhB,CAAkBlD,SAAlB,KAA8BmC,eAAe,CAACe,CAAhB,CAAkB,CAAlB,CAA/B,EAAqDC,cAAlE;AAAiF,KAAxI,MAA4I;AAACF,MAAAA,YAAY,GAACd,eAAe,CAACiB,MAA7B;AAAoC;;AAAAT,IAAAA,uBAAuB,KAAG/Q,IAAI,CAACyD,KAA/B,GAAqC4N,YAAY,CAACI,gBAAb,GAA8BV,uBAAnE,GAA2F9P,UAAU,CAAC+P,wBAAX,GAAoCK,YAAY,CAACI,gBAA5I;AAA6JR,IAAAA,mBAAmB,KAAGjR,IAAI,CAACyD,KAA3B,GAAiC4N,YAAY,CAACK,aAAb,GAA2BT,mBAA5D,GAAgFhQ,UAAU,CAACiQ,oBAAX,GAAgCG,YAAY,CAACK,aAA7H;;AAA2I,QAAGvI,QAAQ,CAAC0H,QAAD,EAAU,EAAV,CAAR,GAAsB,CAAzB,EAA2B;AAAC;AAAO;;AAAAM,IAAAA,GAAG,GAACN,QAAQ,CAAChB,QAAT,GAAoB8B,KAApB,CAA0B,GAA1B,EAA+B,CAA/B,CAAJ;;AAAsC,QAAGR,GAAH,EAAO;AAACC,MAAAA,UAAU,GAACD,GAAG,CAACS,KAAJ,CAAU,OAAV,EAAmB,CAAnB,EAAsB5O,MAAtB,GAA6B,CAAxC;;AAA0C,UAAGoO,UAAU,GAACC,YAAY,CAACI,gBAA3B,EAA4C;AAACJ,QAAAA,YAAY,CAACK,aAAb,GAA2B,CAA3B;AAA6B;;AAAAL,MAAAA,YAAY,CAACI,gBAAb,GAA8B5J,IAAI,CAACpF,GAAL,CAAS2O,UAAT,EAAoBC,YAAY,CAACI,gBAAjC,CAA9B;AAAiF;AAAC,GAA/nC;;AAAgoC9Q,EAAAA,MAAM,CAACkR,cAAP,GAAsB,SAASA,cAAT,CAAwBnB,IAAxB,EAA6B;AAAC,QAAI3P,IAAI,GAAC,IAAT;AAAA,QAAcE,UAAU,GAACF,IAAI,CAACG,MAA9B;AAAA,QAAqC4Q,WAAW,GAAC7Q,UAAU,CAACO,MAA5D;AAAA,QAAmEuQ,IAAnE;;AAAwE,SAAIA,IAAJ,IAAYrB,IAAZ,EAAiB;AAAC,UAAGA,IAAI,CAAChG,cAAL,CAAoBqH,IAApB,CAAH,EAA6B;AAACD,QAAAA,WAAW,CAACC,IAAD,CAAX,GAAkBrB,IAAI,CAACqB,IAAD,CAAtB;AAA6B;AAAC;AAAC,GAA3M;;AAA4M,SAAOxR,qBAAP;AAA6B,CAAjsuB,CAAksuBR,UAAU,CAACF,OAA7suB,CAA1B;;AAAgvuBU,qBAAqB,CAACK,SAAtB,CAAgCoR,WAAhC,GAA4C/R,UAAU,CAAC+R,WAAvD;AAAmEzR,qBAAqB,CAACK,SAAtB,CAAgCqR,UAAhC,GAA2ChS,UAAU,CAACgS,UAAtD;AAAiE1R,qBAAqB,CAACK,SAAtB,CAAgCsR,kBAAhC,GAAmDjS,UAAU,CAACiS,kBAA9D;AAAiF3R,qBAAqB,CAACK,SAAtB,CAAgCuR,cAAhC,GAA+ClS,UAAU,CAACkS,cAA1D;AAAyE5R,qBAAqB,CAACK,SAAtB,CAAgCwR,QAAhC,GAAyCnS,UAAU,CAACmS,QAApD;AAA6D,IAAIC,QAAQ,GAAC9R,qBAAb;AAAmCZ,OAAO,CAACE,OAAR,GAAgBwS,QAAhB","sourcesContent":["\"use strict\";var _interopRequireWildcard=require(\"@babel/runtime/helpers/interopRequireWildcard\");var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=void 0;var _inheritsLoose2=_interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));var _cartesian=_interopRequireWildcard(require(\"./cartesian\"));var _lib=require(\"../lib\");var _commonApi=require(\"./common-api\");var _safeMax=_interopRequireDefault(require(\"@fusioncharts/utils/src/array/safe-max\"));var ROTATED_LABEL_PADDING=3,ROTATED_LABEL_MIN_GAP=10,WWW_STR=\"WWW\",W_STR=\"W\";var CartesainLabelManager=function(_Cartesian){(0,_inheritsLoose2.default)(CartesainLabelManager,_Cartesian);function CartesainLabelManager(){return _Cartesian.apply(this,arguments)||this}var _proto=CartesainLabelManager.prototype;_proto._getHMaxLabelDimention=function _getHMaxLabelDimention(_maxHeight){var axis=this,maxHeight=_maxHeight,axisConfig=axis.config,chart=axis.getFromEnv(\"chart\"),chartConfig=chart.config,smartLabel=chart.getFromEnv(\"smartLabel\"),axisRange=axisConfig.axisRange,labels=axisConfig.labels,labelDisplay=axisConfig.labelDisplay,slantLabel=axisConfig.slantLabel,labelStyle=labels.style,userMaxLabelHeight=axisConfig.maxLabelHeight,increment=axis.getInterval(),staggerLines=axisConfig.staggerLines,labelStep=axisConfig.labelStep,canvasLeft=chartConfig.canvasLeft,canvasRight=chartConfig.canvasRight,rWidthAdjstFactor=staggerLines-2,labelHeightAllotment,sWidthAdjstFactor,staggerLineAvailed,max=axisRange.max,min=axisRange.min,maxTextSize=0,allCategories=axisConfig.tickValues&&axisConfig.tickValues.tickValue,allCategoryLen=allCategories&&allCategories.length,distributedColumns=chart.distributedColumns,labelGap,categoryLength=0,singleCategory,overriddenStyle,intervalWidth,maxLabelObj={text:_lib.UNDEF,width:0,style:_lib.UNDEF},maxLabelHeight=0,smartLabelText,axisXPadding=4,getAllottedWidth,getAllottedHeight,confMeasurement,updateCategoryMeta=_lib.stubFN,finalRotationDecision=_lib.stubFN,reCalculateStaggerLines=_lib.stubFN,testString=WWW_STR,W=W_STR,minPxPerLabel=60,categoryAxisMeasurement={},maxText,countValue,firstValue,firstLabel,lastLabel,i,count,text,value,numberFormatterFn,retObj,cumulativeSum=0,defTextPadding=2,reCalrequired=false,skipCount=0,defaultSpanRadius=2,lastStepX,forceHeight,categoryCalculationInitiated=false,refSmartText,limit,minIrrPx,prevCategory,lastMinIrrStep=Number.POSITIVE_INFINITY,firstCategory,lastCategory,catLength,isZoomed,prevStyleStr,currStyleStr,ticks=axisConfig.ticks,ln,tick,autoWrapLimit,absMaxSmartText,minIrrStep=Number.POSITIVE_INFINITY;if(distributedColumns){for(i=0;i<allCategoryLen;i++){if(allCategories[i+1]){if(allCategories[i].x){allCategories[i].plotWidth=axis.getPixel(allCategories[i+1].x-allCategories[i].x)-axis.getPixel(0)}}else{allCategories[i].plotWidth=axis.getPixel(chartConfig.canvasRight-allCategories[i].x)-axis.getPixel(0)}}}if(axisConfig.tickValues&&(!allCategories||allCategories.length===0)){return{width:0,height:0}}if(labelDisplay===\"rotate\"){axisConfig.rotateLabels=1}if(!axisConfig.tickValues){axisConfig.irregularCatAxis=false}axisConfig.sWidthAdjstFactor=sWidthAdjstFactor=rWidthAdjstFactor===0?1:rWidthAdjstFactor===1?1.5:rWidthAdjstFactor;smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);smartLabel.setStyle({fontSize:labelStyle.fontSize,fontFamily:labelStyle.fontFamily,lineHeight:labelStyle.lineHeight,fontWeight:labelStyle.fontWeight});function getMarginalDistance(x,position){switch(position.toLowerCase()){case\"left\":return Math.abs(axis._getCustomPixel(x));case\"right\":return Math.abs(chartConfig.width-axis._getCustomPixel(x))}}if(axisConfig.irregularCatAxis){allCategories.sort((function(m,n){return m.x-n.x}));for(i=0,categoryLength=allCategories.length;i<categoryLength;i++){singleCategory=allCategories[i];if(typeof lastStepX!==\"undefined\"){minIrrStep=Math.abs(singleCategory.x-lastStepX);minIrrPx=Math.abs(axis._getCustomPixel(min)-axis._getCustomPixel(min+minIrrStep));smartLabel.setStyle(Object.assign({},singleCategory.style));refSmartText=smartLabel.getOriSize(W);limit=refSmartText.width;if(minIrrPx<limit*1.2){singleCategory.label=_lib.BLANKSTRING;minIrrStep=lastMinIrrStep;continue}prevCategory._individualIWR=minIrrPx;singleCategory._individualIWL=minIrrPx;lastMinIrrStep=minIrrStep}prevCategory=singleCategory;lastStepX=singleCategory.x}if(minIrrStep===Number.POSITIVE_INFINITY){minIrrStep=Math.floor(Math.min(singleCategory.x,max-singleCategory.x));minIrrStep=Math.max(minIrrStep,2*defaultSpanRadius)}for(i=0,categoryLength=allCategories.length;i<categoryLength;i++){singleCategory=allCategories[i];if(!i){singleCategory._individualIWL=Infinity}if(i===categoryLength-1){singleCategory._individualIWR=Infinity}singleCategory.individualIW=Math.min(singleCategory._individualIWL,singleCategory._individualIWR)}intervalWidth=Math.abs(axis._getCustomPixel(min)-axis._getCustomPixel(min+minIrrStep));intervalWidth=Math.min(2*getMarginalDistance(allCategories[0].x,\"left\"),2*getMarginalDistance(allCategories[categoryLength-1].x,\"right\"),intervalWidth)}else{intervalWidth=Math.abs(axis._getCustomPixel(min)-axis._getCustomPixel(min+increment))}maxHeight=userMaxLabelHeight||maxHeight;categoryAxisMeasurement.__root__={getHeight:function getHeight(itr){var cat=allCategories[itr],lineHeight=cat._ovrStyle.lineHeight,lineHeightInt=parseInt(lineHeight.replace(/(\\d+)px/,\"$1\"),10);return lineHeightInt},getWidth:function getWidth(){return maxHeight},getCalculatedLabelStep:function getCalculatedLabelStep(allCatArr){var _i=0,_l=allCatArr.length,_maxSpan=Number.NEGATIVE_INFINITY,_maxCatObj={},styleStr,style,label,_cat,_catLabel,key,possibleLabelsNo,labelCount=0,referenceSide,slHeight,rotateLabels=axisConfig.rotateLabels,maxCategory,isWrapIntended=labelDisplay===\"wrap\"||labelDisplay===\"auto\",_fStep;for(_i=0;_i<_l;_i++){_cat=allCatArr[_i];_cat.style=_cat.style||{}}if(axisConfig.irregularCatAxis){return axisConfig.labelStep}for(_i=0;_i<_l;_i++){_cat=allCatArr[_i];if(!_cat){continue}_cat.label||(_cat.label=\"\");_catLabel=_cat.oriLabel||_cat.label;overriddenStyle={fontSize:labelStyle.fontSize,fontFamily:labelStyle.fontFamily,lineHeight:labelStyle.lineHeight,fontWeight:labelStyle.fontWeight};labelCount++;_cat.style=_cat.style||{};(0,_lib.extend2)(overriddenStyle,_cat.style);styleStr=overriddenStyle.fontSize+overriddenStyle.fontFamily+overriddenStyle.lineHeight+overriddenStyle.fontWeight;if(_maxCatObj[styleStr]){if(_catLabel.length>_maxCatObj[styleStr].label.length){_maxCatObj[styleStr].label=_catLabel}}else{_maxCatObj[styleStr]={label:_catLabel,style:overriddenStyle}}}for(key in _maxCatObj){if(_maxCatObj.hasOwnProperty(key)){style=_maxCatObj[key].style;label=_maxCatObj[key].label;style.lineHeight=(0,_lib.setLineHeight)(style);smartLabel.setStyle(style);rotateLabels&&(slHeight=parseInt(style.lineHeight,10));smartLabelText=smartLabel.getSmartText(label,_lib.UNDEF,slHeight);if(rotateLabels===0){referenceSide=smartLabelText.width>minPxPerLabel?minPxPerLabel:smartLabelText.width}else{referenceSide=smartLabelText.height}if(referenceSide>_maxSpan){_maxSpan=referenceSide;maxCategory=_maxCatObj[key]}}}if(isWrapIntended){_maxSpan=Math.min(autoWrapLimit,_maxSpan)}possibleLabelsNo=Math.floor(Math.abs(axis._getCustomPixel(max)-axis._getCustomPixel(min))/_maxSpan);_fStep=Math.max(Math.ceil(labelCount/possibleLabelsNo),axisConfig.labelStep);intervalWidth=Math.abs(axis._getCustomPixel(min)-axis._getCustomPixel(min+_fStep));if(isWrapIntended&&rotateLabels===0){smartLabel.setStyle(maxCategory.style);var maxCharDim=(0,_safeMax.default)(Object.values(smartLabel.getOriSize(maxCategory.label).detailObj));if(maxCharDim>intervalWidth-2*axisXPadding){_fStep+=1;intervalWidth=Math.abs(axis._getCustomPixel(min)-axis._getCustomPixel(min+_fStep));return _fStep}}if(labelCount<=possibleLabelsNo){return axisConfig.labelStep}return _fStep}};categoryAxisMeasurement._inProp={};categoryAxisMeasurement.getCopyById=function(id){var cam=this,propStore=cam._inProp,root=cam.__root__,copyStore=propStore.copyStore,copyById;copyStore=copyStore||{};copyById=copyStore[id];if(copyById){return copyById}(0,_lib.extend2)(copyById=copyStore[id]={},root);return copyById};if(axisConfig.tickValues){switch(labelDisplay){case\"rotate\":if(slantLabel){labels.rotation=300}else{labels.rotation=270}confMeasurement=categoryAxisMeasurement.getCopyById(\"rotate\");break;case\"stagger\":confMeasurement=categoryAxisMeasurement.getCopyById(\"stagger\");confMeasurement.getHeight=function(categoryIndex){var allCat,cat,catStyle,metrics;allCat=axisConfig.tickValues.tickValue;cat=allCat[categoryIndex];catStyle=cat&&cat.style||(cat.style={});overriddenStyle={fontSize:labelStyle.fontSize,fontFamily:labelStyle.fontFamily,lineHeight:labelStyle.lineHeight,fontWeight:labelStyle.fontWeight};(0,_lib.extend2)(overriddenStyle,catStyle);smartLabel.setStyle(overriddenStyle);metrics=smartLabel.getOriSize(cat.label);return metrics.height};confMeasurement.getWidth=function(cat){axisXPadding=1;return cat.individualIW?cat.individualIW:2*intervalWidth*sWidthAdjstFactor-axisXPadding};reCalculateStaggerLines=function reCalculateStaggerLines(categories){var category,categoryLen=categories.length,lastElement,defLineHeight,lastCSum=0,index,rSum,calStaggerLines,itrStep,smartTestText;smartLabel.setStyle(labelStyle);smartTestText=smartLabel.getOriSize(testString);defLineHeight=smartTestText.height;lastElement=categories[categoryLen-1];if(Math.floor(lastElement._cumulativeSum)<=Math.ceil(categoryLen*(defLineHeight+defTextPadding))){calStaggerLines=Math.floor(maxHeight/defLineHeight);staggerLines=calStaggerLines-staggerLines<0?calStaggerLines:staggerLines}else{calStaggerLines=Math.floor(maxHeight/(defLineHeight+2*defTextPadding));do{lastCSum=0;itrStep=calStaggerLines;for(index=itrStep-1,categoryLen=categories.length;index<categoryLen;){if(categoryLen-index<calStaggerLines){index=categoryLen-1}category=categories[index];rSum=category._cumulativeSum-lastCSum;if(~~rSum>-~maxHeight){reCalrequired=true;break}else{reCalrequired=false}lastCSum=category._cumulativeSum;index+=itrStep}}while(calStaggerLines--&&reCalrequired);calStaggerLines++;staggerLines=Math.min(staggerLines,calStaggerLines)}axisConfig.drawnStaggerLines=staggerLines};updateCategoryMeta=function updateCategoryMeta(categories){var category,catStyle,categoryLen,catLineHeight,index,nonSkipCount=0;for(index=0,categoryLen=categories.length;index<categoryLen;index++){category=categories[index];if(category.stepSkipped){continue}catStyle=category&&category.style||{};if(!(catLineHeight=catStyle.lineHeight)){catLineHeight=labelStyle.lineHeight}staggerLineAvailed=nonSkipCount++%staggerLines;if(staggerLineAvailed){category.labelPadding=catLineHeight.replace(/px/i,\"\")*staggerLineAvailed}else{category.labelPadding=0}}};break;case\"none\":confMeasurement=categoryAxisMeasurement.getCopyById(\"none\");confMeasurement.getHeight=_lib.stubFN;confMeasurement.getWidth=_lib.stubFN;finalRotationDecision=_lib.stubFN;if(axisConfig.rotateLabels){if(slantLabel){labels.rotation=300}else{labels.rotation=270}forceHeight=maxHeight}confMeasurement.getCalculatedLabelStep=function(){return axisConfig.labelStep};break;default:confMeasurement=categoryAxisMeasurement.getCopyById(\"auto\");confMeasurement.getHeight=function(){return maxHeight};confMeasurement.getWidth=function(cat){return cat.individualIW?cat.individualIW:intervalWidth-2*axisXPadding};smartLabel.setStyle(maxLabelObj.style);absMaxSmartText=smartLabel.getOriSize(testString);autoWrapLimit=absMaxSmartText.width;finalRotationDecision=function finalRotationDecision(style,categories){var itr,categoryLen,category,catStyle;if(axisConfig.irregularCatAxis){return}smartLabel.setStyle(style);absMaxSmartText=smartLabel.getOriSize(testString);autoWrapLimit=absMaxSmartText.width;if(autoWrapLimit>=intervalWidth&&axisConfig.rotateLabels!==0){labels.rotation=slantLabel?300:270;labels.forceRotate=true;confMeasurement=categoryAxisMeasurement.getCopyById(\"rotate\");getAllottedWidth=confMeasurement.getWidth;getAllottedHeight=confMeasurement.getHeight;maxLabelObj.width=0;for(itr=0,categoryLen=categories.length;itr<categoryLen;itr++){category=categories[itr];if(!(category&&(category.label||category.oriLabel))||(0,_lib.pluckNumber)(category.showlabel,axisConfig.showLabels,1)===0||category.stepSkipped===true){continue}catStyle=category._ovrStyle;smartLabel.setStyle({fontSize:catStyle.fontSize,fontFamily:catStyle.fontFamily,lineHeight:catStyle.lineHeight,fontWeight:catStyle.fontWeight});smartLabelText=smartLabel.getSmartText(category.oriLabel,getAllottedWidth(category),getAllottedHeight(itr));category.label=smartLabelText.text;category.labelTooltext=smartLabelText.tooltext;category._sLabel=smartLabelText;if(maxLabelObj.width<smartLabelText.width){maxLabelObj.text=smartLabelText.text;maxLabelObj.width=smartLabelText.width;maxLabelObj.height=smartLabelText.height;maxLabelObj.style=catStyle}}maxText=maxLabelObj.text}};break}getAllottedWidth=confMeasurement.getWidth;getAllottedHeight=confMeasurement.getHeight;labelStep=axisConfig.labels.step=axisConfig.labelStep=axisConfig._oriLabelStep;labelStep=axisConfig.labels.step=axisConfig.labelStep=confMeasurement.getCalculatedLabelStep(allCategories);firstValue=(0,_cartesian.minimumEnquiry)(allCategories);for(i=firstValue,countValue=0,count=0,categoryLength=allCategories.length;i<categoryLength;i++,countValue++){singleCategory=allCategories[i];if(!(singleCategory&&(singleCategory.label||singleCategory.oriLabel))||(0,_lib.pluckNumber)(singleCategory.showlabel,axisConfig.showLabels,1)===0){continue}categoryCalculationInitiated=true;overriddenStyle={fontSize:labelStyle.fontSize,fontFamily:labelStyle.fontFamily,lineHeight:labelStyle.lineHeight,fontWeight:labelStyle.fontWeight};(0,_lib.extend2)(overriddenStyle,singleCategory.style);overriddenStyle.lineHeight=(0,_lib.setLineHeight)(overriddenStyle);currStyleStr=overriddenStyle.fontSize+overriddenStyle.fontFamily+overriddenStyle.lineHeight+overriddenStyle.fontWeight;if(currStyleStr!==prevStyleStr){smartLabel.setStyle(overriddenStyle);prevStyleStr=currStyleStr}if(countValue%labelStep){singleCategory.stepSkipped=true;singleCategory.appliedSmartLabel=false;skipCount++;continue}else{singleCategory.appliedSmartLabel=true;singleCategory.stepSkipped=false}singleCategory._ovrStyle=overriddenStyle;if(allCategories[i].plotWidth){labelHeightAllotment=Math.max(labelDisplay===\"rotate\"?allCategories[i].plotWidth-2*ROTATED_LABEL_PADDING:0,getAllottedHeight(i))}else{if(labelDisplay===\"rotate\"){if(i<categoryLength-1){labelGap=axis.getPixel(i+1)-axis.getPixel(i)-ROTATED_LABEL_MIN_GAP}}else{labelGap=0}if(labelDisplay===\"rotate\"&&isNaN(+labelGap)){labelGap=chartConfig.canvasWidth/axis.getVisibleLength()-ROTATED_LABEL_PADDING}labelHeightAllotment=Math.max(labelGap,getAllottedHeight(i))}smartLabelText=smartLabel.getSmartText(singleCategory.oriLabel||singleCategory.label,getAllottedWidth(singleCategory),labelHeightAllotment);cumulativeSum+=smartLabelText.height+defTextPadding;axis.components.labels[count++]={config:{width:smartLabelText.width,height:smartLabelText.height,props:{label:{}}}};singleCategory._cumulativeSum=cumulativeSum;singleCategory.oriLabel=singleCategory.oriLabel||singleCategory.label;singleCategory.label=smartLabelText.text;singleCategory.labelTooltext=smartLabelText.tooltext;singleCategory._sLabel=smartLabelText;if(maxLabelObj.width<smartLabelText.width){(0,_lib.extend2)(maxLabelObj,smartLabelText);maxLabelObj.style=overriddenStyle}if(maxLabelHeight<smartLabelText.height){maxLabelHeight=smartLabelText.height}}if(!categoryCalculationInitiated){return{height:0,width:0}}reCalculateStaggerLines(allCategories,skipCount);updateCategoryMeta(allCategories,skipCount);finalRotationDecision(maxLabelObj.style,allCategories);maxText=maxLabelObj.text||\"\";if(axisConfig.xAxisLabelMode===\"mixed\"){if(axisConfig.isPercent){numberFormatterFn=chart.getFromEnv(\"number-formatter\").percentValue}else{numberFormatterFn=chart.getFromEnv(\"number-formatter\").xAxis}maxTextSize=maxText.length;for(i=0,ln=ticks&&ticks.length;i<ln;++i){value=ticks[i];text=\"\"+numberFormatterFn.call(chart.getFromEnv(\"number-formatter\"),value,axisConfig.axisIndex);if(text.length>maxTextSize){maxText=text;maxTextSize=text.length}}}maxLabelObj.height=Math.max(maxLabelHeight,maxLabelObj.height||0);catLength=allCategories.length;for(i=0,categoryLength=allCategories.length;i<categoryLength;i++){firstCategory=allCategories[i];if(firstCategory._sLabel){break}}for(categoryLength=allCategories.length,i=categoryLength-1;i>=0;i--){lastCategory=allCategories[i];if(lastCategory._sLabel){break}}isZoomed=axis.getZoom()!==1;if(!labels.rotation&&!isZoomed&&firstCategory._sLabel){axisConfig.axisEndLabelDisplaySpace.left=Math.max(canvasLeft-(axis._getCustomPixel(firstCategory.x||0)-firstCategory._sLabel.width/2),0);axisConfig.axisEndLabelDisplaySpace.right=Math.max(axis._getCustomPixel(lastCategory.x||catLength-1)+lastCategory._sLabel.width/2-canvasRight,0)}else{axisConfig.axisEndLabelDisplaySpace.left=0;axisConfig.axisEndLabelDisplaySpace.right=0}retObj=maxLabelObj}else{if(axisConfig.numberFormatterFn){numberFormatterFn=chart.getFromEnv(\"number-formatter\")[axisConfig.numberFormatterFn]}else if(axisConfig.isPercent){numberFormatterFn=chart.getFromEnv(\"number-formatter\").percentValue}else{numberFormatterFn=chart.getFromEnv(\"number-formatter\").xAxis}for(i=0,ln=ticks&&ticks.length;i<ln;++i){tick=ticks[i];value=(0,_lib.toPrecision)(tick,10);text=\"\"+numberFormatterFn.call(chart.getFromEnv(\"number-formatter\"),value,axisConfig.axisIndex);if(tick===min){firstLabel=text}if(tick===max){lastLabel=text}retObj=smartLabel.getOriSize(text);axis.components.labels[i]={config:{width:retObj.width,height:retObj.height,props:{label:{}}}};if(text.length>maxTextSize){maxText=text;maxTextSize=text.length}}smartLabel.setStyle({fontSize:labelStyle.fontSize,fontFamily:labelStyle.fontFamily,lineHeight:labelStyle.lineHeight,fontWeight:labelStyle.fontWeight});retObj=smartLabel.getOriSize(maxText||\"\");if(labelDisplay===\"rotate\"){labels.rotation=270}if(axisConfig.rotateLabels){if(slantLabel){labels.rotation=300}else{labels.rotation=270}}if(!labels.rotation){firstLabel=smartLabel.getOriSize(firstLabel||\"\");lastLabel=smartLabel.getOriSize(lastLabel||\"\");axisConfig.axisEndLabelDisplaySpace.left=firstLabel.width/2+2;axisConfig.axisEndLabelDisplaySpace.right=lastLabel.width/2+2}}if(axisConfig.tickValues&&labelDisplay===\"stagger\"){retObj.height=staggerLines*maxLabelObj.height}retObj.width=forceHeight?Math.min(forceHeight,retObj.width):retObj.width;retObj.width=(0,_lib.pluckNumber)(retObj.width);retObj.maxWidth=(0,_lib.pluckNumber)(retObj.maxWidth);return retObj};_proto._getVMaxLabelDimention=function _getVMaxLabelDimention(_maxWidth){var axis=this,maxWidth=_maxWidth,axisConfig=axis.config,chart=axis.getFromEnv(\"chart\"),chartConfig=chart.config,smartLabel=chart.getFromEnv(\"smartLabel\"),labelStyle=axisConfig.labels.style,useEllipsesWhenOverflow=axisConfig.useEllipsesWhenOverflow,maxLabelWidthPercent=axisConfig.maxLabelWidthPercent,minLabelWidthPercent=axisConfig.minLabelWidthPercent,maxTextSize=0,categories=chart.getFromEnv(\"dataSource\").categories,maxTextDimention={height:0,width:0},maxText,tempMaxWidth,tempMinWidth,i,ln,ticks=axisConfig.ticks,value,text,allCategories,categoryLength,singleCategory,smartLabelText,numberFormatterFn,categoriesStyle={},categoryStyle,singleCategoryStyle;smartLabel.useEllipsesOnOverflow(chartConfig.useEllipsesWhenOverflow);smartLabel.setStyle({fontSize:labelStyle.fontSize,fontFamily:labelStyle.fontFamily,lineHeight:labelStyle.lineHeight,fontWeight:labelStyle.fontWeight});if(axisConfig.tickValues){if(categories){categoriesStyle={fontFamily:categories[0].font,fontSize:categories[0].fontsize,color:categories[0].fontcolor}}if(maxLabelWidthPercent){tempMaxWidth=maxLabelWidthPercent/100*chartConfig.width;if(tempMaxWidth<maxWidth){maxWidth=tempMaxWidth}}if(minLabelWidthPercent){tempMinWidth=minLabelWidthPercent/100*chartConfig.width;if(tempMinWidth>maxWidth){maxWidth=tempMinWidth}}allCategories=axisConfig.tickValues.tickValue;for(i=0,categoryLength=allCategories.length;i<categoryLength;i++){singleCategory=allCategories[i];if((0,_lib.pluckNumber)(singleCategory.showlabel,axisConfig.showLabels)===0){continue}categoryStyle={fontFamily:(0,_lib.pluck)(singleCategory.font,singleCategory.labelfont,categoriesStyle.fontFamily,labelStyle.fontFamily),fontSize:(0,_lib.pluck)(this.computeFontSize(singleCategory.fontsize),singleCategory.labelfontsize,categoriesStyle.fontSize,labelStyle.fontSize).toString().replace(/px/i,\"\")+\"px\",fontWeight:labelStyle.fontWeight===\"normal\"?(0,_lib.pluckNumber)(singleCategory.fontbold,singleCategory.labelfontbold,0)?\"bold\":\"normal\":labelStyle.fontWeight,fontStyle:labelStyle.fontStyle===\"normal\"?(0,_lib.pluckNumber)(singleCategory.fontitalic,singleCategory.labelfontitalic,0)?\"italic\":\"normal\":labelStyle.fontStyle};singleCategoryStyle={fontFamily:(0,_lib.pluck)(categoryStyle.fontFamily,categoriesStyle.fontFamily,labelStyle.fontFamily),fontSize:(0,_lib.pluck)(categoryStyle.fontSize,categoriesStyle.fontSize,labelStyle.fontSize),fontWeight:(0,_lib.pluck)(categoryStyle.fontWeight,labelStyle.fontWeight),fontStyle:(0,_lib.pluck)(categoryStyle.fontStyle,labelStyle.fontStyle)};singleCategoryStyle.lineHeight=(0,_lib.setLineHeight)(singleCategoryStyle);smartLabel.setStyle(singleCategoryStyle);smartLabelText=smartLabel.getSmartText(singleCategory.oriLabel||singleCategory.label,maxWidth,labelStyle.lineHeight,useEllipsesWhenOverflow);axis.components.labels[i]={config:{width:smartLabelText.width,height:smartLabelText.height,props:{label:{}}}};singleCategory.oriLabel=singleCategory.oriLabel||singleCategory.label;singleCategory.label=text=smartLabelText.text;singleCategory.labelTooltext=smartLabelText.tooltext;if(smartLabelText.width>maxTextSize){maxTextDimention=smartLabelText;maxTextSize=smartLabelText.width}}return maxTextDimention}if(axisConfig.numberFormatterFn){numberFormatterFn=chart.getFromEnv(\"number-formatter\")[axisConfig.numberFormatterFn]}else if(axisConfig.isPercent){numberFormatterFn=chart.getFromEnv(\"number-formatter\").yAxisPercentValue}else{numberFormatterFn=chart.getFromEnv(\"number-formatter\").yAxis}for(i=0,ln=ticks&&ticks.length;i<ln;++i){value=(0,_lib.toPrecision)(ticks[i],10);text=\"\"+numberFormatterFn.call(chart.getFromEnv(\"number-formatter\"),value,axisConfig.axisIndex);smartLabelText=smartLabel.getSmartText(text);axis.components.labels[i]={config:{width:smartLabelText.width,height:smartLabelText.height,props:{label:{}}}};if(text.length>maxTextSize){maxText=text;maxTextSize=text.length}}return smartLabel.getOriSize(maxText)};_proto.getCleanValue=function getCleanValue(num,abs){var axis=this,numberFormatter=axis.getFromEnv(\"number-formatter\");return numberFormatter.getCleanValue(num,abs)};_proto.generateMinorTicks=function generateMinorTicks(){if(this)return[]};_proto.setCanvas=function setCanvas(data){var axis=this,axisConfig=axis.config;axisConfig.canvas=data};_proto._adjustNumberFormatter=function _adjustNumberFormatter(interval){var axis=this,axisConfig=axis.config,axisIndex=axisConfig.axisIndex,isVertical=axisConfig.isVertical,chart=axis.getFromEnv(\"chart\"),numberFormatter=chart.getFromEnv(\"number-formatter\"),defaultDecimalPrecision=axisConfig._defaultDecimalPrecision,defaultForceDecimal=axisConfig._defaultForceDecimal,dec,beforeZero=0,formatConfig;if(isVertical||axisConfig.numberFormatterFn===\"yAxis\"){formatConfig=(numberFormatter.Y[axisIndex]||numberFormatter.Y[0]).yAxisLabelConf}else{formatConfig=numberFormatter.paramX}defaultDecimalPrecision!==_lib.UNDEF?formatConfig.decimalprecision=defaultDecimalPrecision:axisConfig._defaultDecimalPrecision=formatConfig.decimalprecision;defaultForceDecimal!==_lib.UNDEF?formatConfig.forcedecimals=defaultForceDecimal:axisConfig._defaultForceDecimal=formatConfig.forcedecimals;if(parseInt(interval,10)>0){return}dec=interval.toString().split(\".\")[1];if(dec){beforeZero=dec.match(/^[0]*/)[0].length+1;if(beforeZero>formatConfig.decimalprecision){formatConfig.forcedecimals=1}formatConfig.decimalprecision=Math.max(beforeZero,formatConfig.decimalprecision)}};_proto.setLabelConfig=function setLabelConfig(data){var axis=this,axisConfig=axis.config,labelConfig=axisConfig.labels,prop;for(prop in data){if(data.hasOwnProperty(prop)){labelConfig[prop]=data[prop]}}};return CartesainLabelManager}(_cartesian.default);CartesainLabelManager.prototype._parseLabel=_commonApi._parseLabel;CartesainLabelManager.prototype._drawLabel=_commonApi._drawLabel;CartesainLabelManager.prototype.getTrendLineLimits=_commonApi.getTrendLineLimits;CartesainLabelManager.prototype.setAxisPadding=_commonApi.setAxisPadding;CartesainLabelManager.prototype.getLabel=_commonApi.getLabel;var _default=CartesainLabelManager;exports.default=_default;"]},"metadata":{},"sourceType":"script"}