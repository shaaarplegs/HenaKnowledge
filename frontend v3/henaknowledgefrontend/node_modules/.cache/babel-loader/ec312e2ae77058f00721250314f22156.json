{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = getLinearRegressionPoints;\n\nfunction compareDatasetByAttributeValue(a, b, attr) {\n  return parseFloat(a[attr]) - parseFloat(b[attr]);\n}\n\nfunction compareByX(a, b) {\n  return compareDatasetByAttributeValue(a, b, \"x\");\n}\n\nfunction compareByY(a, b) {\n  return compareDatasetByAttributeValue(a, b, \"y\");\n}\n\nfunction linearYOnX(data) {\n  data.sort(compareByX);\n  var x = [],\n      y = [],\n      meanX = 0,\n      meanY = 0,\n      quo = 0,\n      denom = 0,\n      n = data.length,\n      m,\n      c,\n      output = [],\n      px,\n      py;\n\n  for (var i = 0; i < data.length; i++) {\n    px = Number(data[i].x);\n    py = Number(data[i].y);\n\n    if (isNaN(px) || isNaN(py)) {\n      continue;\n    }\n\n    x.push(px);\n    y.push(py);\n  }\n\n  n = x.length;\n\n  for (var _i = 0; _i < n; _i++) {\n    meanX += x[_i];\n    meanY += y[_i];\n  }\n\n  meanX /= n;\n  meanY /= n;\n\n  for (var _i2 = 0; _i2 < n; _i2++) {\n    quo += (x[_i2] - meanX) * (y[_i2] - meanY);\n    denom += (x[_i2] - meanX) * (x[_i2] - meanX);\n  }\n\n  if (denom === 0) {\n    return [[], []];\n  }\n\n  m = quo / denom;\n  c = meanY - m * meanX;\n  output.push({\n    x: x[0],\n    y: m * x[0] + c\n  });\n  output.push({\n    x: x[n - 1],\n    y: m * x[n - 1] + c\n  });\n  return [[], output];\n}\n\nfunction linearXOnY(data) {\n  data.sort(compareByY);\n  var x = [],\n      y = [],\n      meanX = 0,\n      meanY = 0,\n      quo = 0,\n      denom = 0,\n      n = data.length,\n      m,\n      c,\n      output = [],\n      px,\n      py;\n\n  for (var i = 0; i < data.length; i++) {\n    px = Number(data[i].x);\n    py = Number(data[i].y);\n\n    if (isNaN(px) || isNaN(py)) {\n      continue;\n    }\n\n    x.push(px);\n    y.push(py);\n  }\n\n  n = x.length;\n\n  for (var _i3 = 0; _i3 < n; _i3++) {\n    meanX += x[_i3];\n    meanY += y[_i3];\n  }\n\n  meanX /= n;\n  meanY /= n;\n\n  for (var _i4 = 0; _i4 < n; _i4++) {\n    quo += (x[_i4] - meanX) * (y[_i4] - meanY);\n    denom += (y[_i4] - meanY) * (y[_i4] - meanY);\n  }\n\n  if (denom === 0) {\n    return [[], []];\n  }\n\n  m = quo / denom;\n  c = meanX - m * meanY;\n  output = [];\n  output.push({\n    x: m * y[0] + c,\n    y: y[0]\n  });\n  output.push({\n    x: m * y[n - 1] + c,\n    y: y[n - 1]\n  });\n  return [[], output];\n}\n\nfunction getLinearRegressionPoints(data, showYOnX) {\n  if (Number(showYOnX)) {\n    return linearYOnX(data);\n  }\n\n  return linearXOnY(data);\n}","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/features/src/regression-extension/linear-regression.js"],"names":["exports","__esModule","default","getLinearRegressionPoints","compareDatasetByAttributeValue","a","b","attr","parseFloat","compareByX","compareByY","linearYOnX","data","sort","x","y","meanX","meanY","quo","denom","n","length","m","c","output","px","py","i","Number","isNaN","push","_i","_i2","linearXOnY","_i3","_i4","showYOnX"],"mappings":"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","sourcesContent":["\"use strict\";exports.__esModule=true;exports.default=getLinearRegressionPoints;function compareDatasetByAttributeValue(a,b,attr){return parseFloat(a[attr])-parseFloat(b[attr])}function compareByX(a,b){return compareDatasetByAttributeValue(a,b,\"x\")}function compareByY(a,b){return compareDatasetByAttributeValue(a,b,\"y\")}function linearYOnX(data){data.sort(compareByX);var x=[],y=[],meanX=0,meanY=0,quo=0,denom=0,n=data.length,m,c,output=[],px,py;for(var i=0;i<data.length;i++){px=Number(data[i].x);py=Number(data[i].y);if(isNaN(px)||isNaN(py)){continue}x.push(px);y.push(py)}n=x.length;for(var _i=0;_i<n;_i++){meanX+=x[_i];meanY+=y[_i]}meanX/=n;meanY/=n;for(var _i2=0;_i2<n;_i2++){quo+=(x[_i2]-meanX)*(y[_i2]-meanY);denom+=(x[_i2]-meanX)*(x[_i2]-meanX)}if(denom===0){return[[],[]]}m=quo/denom;c=meanY-m*meanX;output.push({x:x[0],y:m*x[0]+c});output.push({x:x[n-1],y:m*x[n-1]+c});return[[],output]}function linearXOnY(data){data.sort(compareByY);var x=[],y=[],meanX=0,meanY=0,quo=0,denom=0,n=data.length,m,c,output=[],px,py;for(var i=0;i<data.length;i++){px=Number(data[i].x);py=Number(data[i].y);if(isNaN(px)||isNaN(py)){continue}x.push(px);y.push(py)}n=x.length;for(var _i3=0;_i3<n;_i3++){meanX+=x[_i3];meanY+=y[_i3]}meanX/=n;meanY/=n;for(var _i4=0;_i4<n;_i4++){quo+=(x[_i4]-meanX)*(y[_i4]-meanY);denom+=(y[_i4]-meanY)*(y[_i4]-meanY)}if(denom===0){return[[],[]]}m=quo/denom;c=meanX-m*meanY;output=[];output.push({x:m*y[0]+c,y:y[0]});output.push({x:m*y[n-1]+c,y:y[n-1]});return[[],output]}function getLinearRegressionPoints(data,showYOnX){if(Number(showYOnX)){return linearYOnX(data)}return linearXOnY(data)}"]},"metadata":{},"sourceType":"script"}