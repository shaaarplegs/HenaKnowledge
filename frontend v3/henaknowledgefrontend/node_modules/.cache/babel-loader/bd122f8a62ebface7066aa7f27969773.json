{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _range = _interopRequireDefault(require(\"@fusioncharts/utils/src/scale-utils/array/range\"));\n\nvar _continuous = require(\"@fusioncharts/utils/src/scales/continuous\");\n\nvar _number = _interopRequireDefault(require(\"@fusioncharts/utils/src/scale-utils/interpolators/number\"));\n\nvar _safeMin = _interopRequireDefault(require(\"@fusioncharts/utils/src/array/safe-min\"));\n\nvar _lib = require(\"../lib\");\n\nvar errorMapping = (0, _continuous.bimap)([2, 100], [80, 20], _continuous.deInterpolateLinear, _number.default),\n    getErrorValue = function getErrorValue(count) {\n  if (count >= 100) return .2;\n  if (count <= 1) return 0;\n  return errorMapping(count) / 100;\n},\n    niceInterval = function niceInterval(interval) {\n  if (interval <= 1) return 1;\n  var arr = [],\n      ceilInterval = Math.ceil(interval);\n  arr[2] = ceilInterval % 2;\n  arr[5] = ceilInterval % 5;\n  arr[10] = ceilInterval % 10;\n  return (0, _safeMin.default)(arr) + ceilInterval;\n},\n    noLimitChange = function noLimitChange(min, max, count, errorLimit, forceZeroTick, scale) {\n  var diff = max - min,\n      interval,\n      j,\n      addZero,\n      k = min,\n      minCount = Math.ceil(count * (1 - errorLimit)),\n      maxCount = Math.floor(count * (1 + errorLimit)),\n      noOfInterval,\n      isZeroTickForced,\n      errorInterval,\n      outputLen,\n      firstNum,\n      lastNum,\n      output = [],\n      checkMultiple = function checkMultiple(value) {\n    var arr = [10, 5, 2, 1],\n        i,\n        len = arr.length,\n        rem,\n        isMultiple;\n\n    for (i = 0; i < len; ++i) {\n      rem = value % arr[i];\n\n      if (rem % 1 === 0) {\n        isMultiple = true;\n        break;\n      }\n    }\n\n    return isMultiple;\n  },\n      counter = -1,\n      minCovered,\n      maxCovered,\n      temp,\n      willBreak = function willBreak(value) {\n    return checkMultiple(interval = diff / (value + 1)) ? value : _lib.UNDEF;\n  };\n\n  while (!minCovered || !maxCovered) {\n    ++counter;\n    temp = count + counter;\n    if (temp >= maxCount) maxCovered = true;\n    noOfInterval = willBreak(temp);\n    if (noOfInterval) break;\n    temp = count - counter;\n    if (temp <= minCount) minCovered = true;\n    noOfInterval = willBreak(temp);\n    if (noOfInterval) break;\n  }\n\n  if (min < 0 && max > 0 && forceZeroTick) addZero = true;\n\n  for (j = 0; j < noOfInterval; j++) {\n    if (addZero && k < 0 && k + interval > 0) {\n      output.push(0);\n      isZeroTickForced = true;\n    }\n\n    k += interval;\n    output.push(k);\n  }\n\n  if (noOfInterval === _lib.UNDEF && forceZeroTick) {\n    output = scale.ticks(count);\n    outputLen = output.length;\n\n    if (outputLen > 1) {\n      interval = Math.abs(output[0] - output[1]);\n      errorInterval = interval * .2;\n      firstNum = output[0];\n      lastNum = output[outputLen - 1];\n\n      if (Math.abs(min - firstNum) <= errorInterval && firstNum !== 0) {\n        output.shift();\n      }\n\n      if (Math.abs(max - lastNum) <= errorInterval && lastNum !== 0) {\n        output.pop();\n      }\n\n      if (firstNum === 0 || lastNum === 0) isZeroTickForced = true;\n    } else if (output[0] === 0) {\n      isZeroTickForced = true;\n    }\n  }\n\n  if (addZero && !isZeroTickForced && output.indexOf(0) === -1) {\n    if (min < 0 && output[0] > 0) {\n      output = [0].concat(output);\n    } else if (max > 0 && output[output.length - 1] < 0) {\n      output.push(0);\n    } else {\n      output = [0];\n    }\n\n    isZeroTickForced = true;\n  }\n\n  return {\n    output: output,\n    interval: interval,\n    isZeroTickForced: isZeroTickForced\n  };\n},\n    domainUpdater = function domainUpdater(_min, _max, scale, axisConfig) {\n  var max = _max,\n      min = _min,\n      axisMinValue = axisConfig.isPercent ? 0 : axisConfig.axisMinValue,\n      axisMaxValue = axisConfig.isPercent ? 100 : axisConfig.axisMaxValue,\n      adjustDiv = !!axisConfig.adjustDiv,\n      originalDivLines = axisConfig.numDivLines,\n      numDivLines,\n      divisions,\n      setAdaptiveMin = !!axisConfig.setAdaptiveMin,\n      axisRange = axisConfig.axisRange,\n      minPowerOfTen,\n      maxPowerOfTen,\n      powerOfTen,\n      interval,\n      tickInterval,\n      topBound,\n      lowerBound,\n      yMaxGiven,\n      yMinGiven,\n      rangePowerOfTen,\n      rangeInterval,\n      intervalArr,\n      EPSILON = Math.pow(2, -24),\n      extendDomain = true,\n      tempMin,\n      tempMax,\n      errorLimit = .2,\n      domain,\n      negitiveTicks,\n      ticksNotCreated = true,\n      positiveMin,\n      noLimitChangeObj,\n      intervalArrLen,\n      isZeroTickForced,\n      xAxisLabelMode = axisConfig.xAxisLabelMode,\n      dependentInfo = axisConfig.dependentInfo;\n  numDivLines = axisConfig.majorTMNumber !== _lib.UNDEF ? Math.max(0, originalDivLines - 2) : originalDivLines;\n\n  if (dependentInfo && dependentInfo.count && !dependentInfo.limit) {\n    if (dependentInfo.numDivLines !== _lib.UNDEF) {\n      numDivLines = originalDivLines = dependentInfo.numDivLines;\n      adjustDiv = false;\n    }\n  }\n\n  divisions = numDivLines + 1;\n\n  if (min === _lib.UNDEF && max === _lib.UNDEF) {\n    min = 0;\n    max = 1;\n    extendDomain = false;\n  }\n\n  if (max === min && max === 0) {\n    max = 1;\n    extendDomain = false;\n  }\n\n  if (xAxisLabelMode === \"categories\" || xAxisLabelMode === \"mixed\") {\n    extendDomain = false;\n  }\n\n  if (extendDomain) {\n    maxPowerOfTen = Math.floor(Math.log(Math.abs(max)) / Math.LN10);\n    minPowerOfTen = Math.floor(Math.log(Math.abs(min)) / Math.LN10);\n    powerOfTen = Math.max(minPowerOfTen, maxPowerOfTen);\n    interval = Math.pow(10, powerOfTen);\n\n    if (Math.abs(max) / interval < 2 && Math.abs(min) / interval < 2) {\n      powerOfTen--;\n      interval = Math.pow(10, powerOfTen);\n    }\n\n    rangePowerOfTen = Math.floor(Math.log(max - min) / Math.LN10);\n    rangeInterval = Math.pow(10, rangePowerOfTen);\n\n    if (max - min > 0 && interval / rangeInterval >= 10) {\n      interval = rangeInterval;\n      powerOfTen = rangePowerOfTen;\n    }\n\n    topBound = (Math.floor(max / interval) + 1) * interval;\n\n    if (min < 0) {\n      lowerBound = -1 * ((Math.floor(Math.abs(min / interval)) + 1) * interval);\n    } else {\n      if (!setAdaptiveMin) {\n        lowerBound = 0;\n      } else {\n        lowerBound = Math.floor(Math.abs(min / interval) - 1) * interval;\n        lowerBound = lowerBound < 0 ? 0 : lowerBound;\n      }\n    }\n\n    if (!setAdaptiveMin && max <= 0) {\n      topBound = 0;\n    }\n\n    if (!axisMaxValue && axisMaxValue !== 0) {\n      yMaxGiven = false;\n    } else {\n      yMaxGiven = true;\n    }\n\n    if (!axisMinValue && axisMinValue !== 0) {\n      yMinGiven = false;\n    } else {\n      yMinGiven = true;\n    }\n\n    if (!axisConfig.freezeLimit) {\n      if (yMaxGiven === false || yMaxGiven === true && Number(axisMaxValue) < max && max - Number(axisMaxValue) > EPSILON) {\n        max = topBound;\n        yMaxGiven = false;\n      } else {\n        max = Number(axisMaxValue);\n      }\n\n      if (yMinGiven === false || yMinGiven === true && Number(axisMinValue) > min && Number(axisMinValue) - min > EPSILON) {\n        min = lowerBound;\n        yMinGiven = false;\n      } else {\n        min = Number(axisMinValue);\n      }\n    }\n  } else {\n    if (!axisMaxValue && axisMaxValue !== 0) {\n      yMaxGiven = false;\n    } else {\n      yMaxGiven = true;\n    }\n\n    if (!axisMinValue && axisMinValue !== 0) {\n      yMinGiven = false;\n    } else {\n      yMinGiven = true;\n    }\n\n    if (yMaxGiven === true && (Number(axisMaxValue) >= max || _max === _lib.UNDEF)) {\n      max = Number(axisMaxValue);\n    } else {\n      yMaxGiven = false;\n    }\n\n    if (yMinGiven === true && (Number(axisMinValue) <= min || _min === _lib.UNDEF)) {\n      min = Number(axisMinValue);\n    } else {\n      yMinGiven = false;\n    }\n  }\n\n  if (yMinGiven && !yMaxGiven && _max === _lib.UNDEF) {\n    if (min < 0) {\n      max = 0;\n    } else {\n      max = min + 1;\n    }\n  }\n\n  if (yMaxGiven && !yMinGiven && _min === _lib.UNDEF) {\n    if (max > 0) {\n      min = 0;\n    } else {\n      min = max - 1;\n    }\n  }\n\n  domain = [min, max];\n  scale.setDomain(domain);\n\n  if (adjustDiv && !axisConfig.freezeLimit) {\n    if (!yMaxGiven && !yMinGiven) {\n      axisConfig.ticks = !numDivLines ? scale.getDomain() : scale.nice(divisions).ticks(divisions);\n      tickInterval = Math.abs(axisConfig.ticks[1] - axisConfig.ticks[0]);\n      ticksNotCreated = false;\n    } else {\n      errorLimit = getErrorValue(numDivLines);\n      noLimitChangeObj = noLimitChange(min, max, numDivLines, errorLimit, axisConfig.forceZeroTick, scale);\n      intervalArr = noLimitChangeObj.output;\n      intervalArrLen = intervalArr.length;\n      isZeroTickForced = noLimitChangeObj.isZeroTickForced;\n\n      if (Math.abs((numDivLines - intervalArrLen + (isZeroTickForced ? 1 : 0)) / numDivLines) > errorLimit) {\n        tickInterval = (max - min) / divisions;\n      } else {\n        tickInterval = intervalArrLen === 0 || intervalArrLen === 1 && isZeroTickForced ? max - min : noLimitChangeObj.interval;\n        axisConfig.isZeroTickForced = isZeroTickForced;\n        axisConfig.ticks = isZeroTickForced && min === 0 ? intervalArr.concat(max) : [min].concat(intervalArr, max);\n        ticksNotCreated = false;\n      }\n    }\n  } else {\n    if (!yMaxGiven && !yMinGiven && !axisConfig.freezeLimit) {\n      var _scale$nice$getDomain = scale.nice(divisions).getDomain();\n\n      tempMin = _scale$nice$getDomain[0];\n      tempMax = _scale$nice$getDomain[1];\n      interval = (tempMax - tempMin) / divisions;\n      tickInterval = niceInterval(interval);\n      tempMax = tempMin + tickInterval * divisions;\n\n      if ((tempMax - max) / max > errorLimit || (tempMin - min) / min > errorLimit) {\n        scale.setDomain([min, max]);\n        tickInterval = (max - min) / divisions;\n      } else {\n        min = tempMin;\n        max = tempMax;\n        scale.setDomain([min, max]);\n      }\n    } else {\n      tickInterval = (max - min) / divisions;\n    }\n  }\n\n  if (ticksNotCreated) {\n    if (min < 0 && max > 0 && axisConfig.forceZeroTick) {\n      negitiveTicks = (0, _range.default)(min, 0, tickInterval);\n      positiveMin = negitiveTicks[negitiveTicks.length - 1] + tickInterval;\n      positiveMin === 0 ? positiveMin += tickInterval : axisConfig.isZeroTickForced = true;\n      axisConfig.ticks = negitiveTicks.concat(0, (0, _range.default)(positiveMin, max, tickInterval), max);\n    } else {\n      axisConfig.ticks = (0, _range.default)(min, max, tickInterval).concat(max);\n    }\n  }\n\n  var _scale$getDomain = scale.getDomain();\n\n  min = _scale$getDomain[0];\n  max = _scale$getDomain[1];\n  axisConfig._allTicks = axisConfig.ticks.slice();\n  axisRange.tickInterval = tickInterval;\n  axisRange.min = min;\n  axisRange.max = max;\n};\n\nvar _default = domainUpdater;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/core/src/axis/domain-updater.js"],"names":["_interopRequireDefault","require","exports","__esModule","default","_range","_continuous","_number","_safeMin","_lib","errorMapping","bimap","deInterpolateLinear","getErrorValue","count","niceInterval","interval","arr","ceilInterval","Math","ceil","noLimitChange","min","max","errorLimit","forceZeroTick","scale","diff","j","addZero","k","minCount","maxCount","floor","noOfInterval","isZeroTickForced","errorInterval","outputLen","firstNum","lastNum","output","checkMultiple","value","i","len","length","rem","isMultiple","counter","minCovered","maxCovered","temp","willBreak","UNDEF","push","ticks","abs","shift","pop","indexOf","concat","domainUpdater","_min","_max","axisConfig","axisMinValue","isPercent","axisMaxValue","adjustDiv","originalDivLines","numDivLines","divisions","setAdaptiveMin","axisRange","minPowerOfTen","maxPowerOfTen","powerOfTen","tickInterval","topBound","lowerBound","yMaxGiven","yMinGiven","rangePowerOfTen","rangeInterval","intervalArr","EPSILON","pow","extendDomain","tempMin","tempMax","domain","negitiveTicks","ticksNotCreated","positiveMin","noLimitChangeObj","intervalArrLen","xAxisLabelMode","dependentInfo","majorTMNumber","limit","log","LN10","freezeLimit","Number","setDomain","getDomain","nice","_scale$nice$getDomain","_scale$getDomain","_allTicks","slice","_default"],"mappings":"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","sourcesContent":["\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=void 0;var _range=_interopRequireDefault(require(\"@fusioncharts/utils/src/scale-utils/array/range\"));var _continuous=require(\"@fusioncharts/utils/src/scales/continuous\");var _number=_interopRequireDefault(require(\"@fusioncharts/utils/src/scale-utils/interpolators/number\"));var _safeMin=_interopRequireDefault(require(\"@fusioncharts/utils/src/array/safe-min\"));var _lib=require(\"../lib\");var errorMapping=(0,_continuous.bimap)([2,100],[80,20],_continuous.deInterpolateLinear,_number.default),getErrorValue=function getErrorValue(count){if(count>=100)return.2;if(count<=1)return 0;return errorMapping(count)/100},niceInterval=function niceInterval(interval){if(interval<=1)return 1;var arr=[],ceilInterval=Math.ceil(interval);arr[2]=ceilInterval%2;arr[5]=ceilInterval%5;arr[10]=ceilInterval%10;return(0,_safeMin.default)(arr)+ceilInterval},noLimitChange=function noLimitChange(min,max,count,errorLimit,forceZeroTick,scale){var diff=max-min,interval,j,addZero,k=min,minCount=Math.ceil(count*(1-errorLimit)),maxCount=Math.floor(count*(1+errorLimit)),noOfInterval,isZeroTickForced,errorInterval,outputLen,firstNum,lastNum,output=[],checkMultiple=function checkMultiple(value){var arr=[10,5,2,1],i,len=arr.length,rem,isMultiple;for(i=0;i<len;++i){rem=value%arr[i];if(rem%1===0){isMultiple=true;break}}return isMultiple},counter=-1,minCovered,maxCovered,temp,willBreak=function willBreak(value){return checkMultiple(interval=diff/(value+1))?value:_lib.UNDEF};while(!minCovered||!maxCovered){++counter;temp=count+counter;if(temp>=maxCount)maxCovered=true;noOfInterval=willBreak(temp);if(noOfInterval)break;temp=count-counter;if(temp<=minCount)minCovered=true;noOfInterval=willBreak(temp);if(noOfInterval)break}if(min<0&&max>0&&forceZeroTick)addZero=true;for(j=0;j<noOfInterval;j++){if(addZero&&k<0&&k+interval>0){output.push(0);isZeroTickForced=true}k+=interval;output.push(k)}if(noOfInterval===_lib.UNDEF&&forceZeroTick){output=scale.ticks(count);outputLen=output.length;if(outputLen>1){interval=Math.abs(output[0]-output[1]);errorInterval=interval*.2;firstNum=output[0];lastNum=output[outputLen-1];if(Math.abs(min-firstNum)<=errorInterval&&firstNum!==0){output.shift()}if(Math.abs(max-lastNum)<=errorInterval&&lastNum!==0){output.pop()}if(firstNum===0||lastNum===0)isZeroTickForced=true}else if(output[0]===0){isZeroTickForced=true}}if(addZero&&!isZeroTickForced&&output.indexOf(0)===-1){if(min<0&&output[0]>0){output=[0].concat(output)}else if(max>0&&output[output.length-1]<0){output.push(0)}else{output=[0]}isZeroTickForced=true}return{output:output,interval:interval,isZeroTickForced:isZeroTickForced}},domainUpdater=function domainUpdater(_min,_max,scale,axisConfig){var max=_max,min=_min,axisMinValue=axisConfig.isPercent?0:axisConfig.axisMinValue,axisMaxValue=axisConfig.isPercent?100:axisConfig.axisMaxValue,adjustDiv=!!axisConfig.adjustDiv,originalDivLines=axisConfig.numDivLines,numDivLines,divisions,setAdaptiveMin=!!axisConfig.setAdaptiveMin,axisRange=axisConfig.axisRange,minPowerOfTen,maxPowerOfTen,powerOfTen,interval,tickInterval,topBound,lowerBound,yMaxGiven,yMinGiven,rangePowerOfTen,rangeInterval,intervalArr,EPSILON=Math.pow(2,-24),extendDomain=true,tempMin,tempMax,errorLimit=.2,domain,negitiveTicks,ticksNotCreated=true,positiveMin,noLimitChangeObj,intervalArrLen,isZeroTickForced,xAxisLabelMode=axisConfig.xAxisLabelMode,dependentInfo=axisConfig.dependentInfo;numDivLines=axisConfig.majorTMNumber!==_lib.UNDEF?Math.max(0,originalDivLines-2):originalDivLines;if(dependentInfo&&dependentInfo.count&&!dependentInfo.limit){if(dependentInfo.numDivLines!==_lib.UNDEF){numDivLines=originalDivLines=dependentInfo.numDivLines;adjustDiv=false}}divisions=numDivLines+1;if(min===_lib.UNDEF&&max===_lib.UNDEF){min=0;max=1;extendDomain=false}if(max===min&&max===0){max=1;extendDomain=false}if(xAxisLabelMode===\"categories\"||xAxisLabelMode===\"mixed\"){extendDomain=false}if(extendDomain){maxPowerOfTen=Math.floor(Math.log(Math.abs(max))/Math.LN10);minPowerOfTen=Math.floor(Math.log(Math.abs(min))/Math.LN10);powerOfTen=Math.max(minPowerOfTen,maxPowerOfTen);interval=Math.pow(10,powerOfTen);if(Math.abs(max)/interval<2&&Math.abs(min)/interval<2){powerOfTen--;interval=Math.pow(10,powerOfTen)}rangePowerOfTen=Math.floor(Math.log(max-min)/Math.LN10);rangeInterval=Math.pow(10,rangePowerOfTen);if(max-min>0&&interval/rangeInterval>=10){interval=rangeInterval;powerOfTen=rangePowerOfTen}topBound=(Math.floor(max/interval)+1)*interval;if(min<0){lowerBound=-1*((Math.floor(Math.abs(min/interval))+1)*interval)}else{if(!setAdaptiveMin){lowerBound=0}else{lowerBound=Math.floor(Math.abs(min/interval)-1)*interval;lowerBound=lowerBound<0?0:lowerBound}}if(!setAdaptiveMin&&max<=0){topBound=0}if(!axisMaxValue&&axisMaxValue!==0){yMaxGiven=false}else{yMaxGiven=true}if(!axisMinValue&&axisMinValue!==0){yMinGiven=false}else{yMinGiven=true}if(!axisConfig.freezeLimit){if(yMaxGiven===false||yMaxGiven===true&&Number(axisMaxValue)<max&&max-Number(axisMaxValue)>EPSILON){max=topBound;yMaxGiven=false}else{max=Number(axisMaxValue)}if(yMinGiven===false||yMinGiven===true&&Number(axisMinValue)>min&&Number(axisMinValue)-min>EPSILON){min=lowerBound;yMinGiven=false}else{min=Number(axisMinValue)}}}else{if(!axisMaxValue&&axisMaxValue!==0){yMaxGiven=false}else{yMaxGiven=true}if(!axisMinValue&&axisMinValue!==0){yMinGiven=false}else{yMinGiven=true}if(yMaxGiven===true&&(Number(axisMaxValue)>=max||_max===_lib.UNDEF)){max=Number(axisMaxValue)}else{yMaxGiven=false}if(yMinGiven===true&&(Number(axisMinValue)<=min||_min===_lib.UNDEF)){min=Number(axisMinValue)}else{yMinGiven=false}}if(yMinGiven&&!yMaxGiven&&_max===_lib.UNDEF){if(min<0){max=0}else{max=min+1}}if(yMaxGiven&&!yMinGiven&&_min===_lib.UNDEF){if(max>0){min=0}else{min=max-1}}domain=[min,max];scale.setDomain(domain);if(adjustDiv&&!axisConfig.freezeLimit){if(!yMaxGiven&&!yMinGiven){axisConfig.ticks=!numDivLines?scale.getDomain():scale.nice(divisions).ticks(divisions);tickInterval=Math.abs(axisConfig.ticks[1]-axisConfig.ticks[0]);ticksNotCreated=false}else{errorLimit=getErrorValue(numDivLines);noLimitChangeObj=noLimitChange(min,max,numDivLines,errorLimit,axisConfig.forceZeroTick,scale);intervalArr=noLimitChangeObj.output;intervalArrLen=intervalArr.length;isZeroTickForced=noLimitChangeObj.isZeroTickForced;if(Math.abs((numDivLines-intervalArrLen+(isZeroTickForced?1:0))/numDivLines)>errorLimit){tickInterval=(max-min)/divisions}else{tickInterval=intervalArrLen===0||intervalArrLen===1&&isZeroTickForced?max-min:noLimitChangeObj.interval;axisConfig.isZeroTickForced=isZeroTickForced;axisConfig.ticks=isZeroTickForced&&min===0?intervalArr.concat(max):[min].concat(intervalArr,max);ticksNotCreated=false}}}else{if(!yMaxGiven&&!yMinGiven&&!axisConfig.freezeLimit){var _scale$nice$getDomain=scale.nice(divisions).getDomain();tempMin=_scale$nice$getDomain[0];tempMax=_scale$nice$getDomain[1];interval=(tempMax-tempMin)/divisions;tickInterval=niceInterval(interval);tempMax=tempMin+tickInterval*divisions;if((tempMax-max)/max>errorLimit||(tempMin-min)/min>errorLimit){scale.setDomain([min,max]);tickInterval=(max-min)/divisions}else{min=tempMin;max=tempMax;scale.setDomain([min,max])}}else{tickInterval=(max-min)/divisions}}if(ticksNotCreated){if(min<0&&max>0&&axisConfig.forceZeroTick){negitiveTicks=(0,_range.default)(min,0,tickInterval);positiveMin=negitiveTicks[negitiveTicks.length-1]+tickInterval;positiveMin===0?positiveMin+=tickInterval:axisConfig.isZeroTickForced=true;axisConfig.ticks=negitiveTicks.concat(0,(0,_range.default)(positiveMin,max,tickInterval),max)}else{axisConfig.ticks=(0,_range.default)(min,max,tickInterval).concat(max)}}var _scale$getDomain=scale.getDomain();min=_scale$getDomain[0];max=_scale$getDomain[1];axisConfig._allTicks=axisConfig.ticks.slice();axisRange.tickInterval=tickInterval;axisRange.min=min;axisRange.max=max};var _default=domainUpdater;exports.default=_default;"]},"metadata":{},"sourceType":"script"}