{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.tickIncrement = tickIncrement;\nexports.tickStep = tickStep;\nexports.tickFormat = tickFormat;\nexports.default = void 0;\n\nvar _numberConverter = _interopRequireDefault(require(\"../number-converter\"));\n\nvar _precisionFixed = _interopRequireDefault(require(\"../number-converter/precision-fixed\"));\n\nvar _precisionRound = _interopRequireDefault(require(\"../number-converter/precision-round\"));\n\nvar _formatSpecifier = _interopRequireDefault(require(\"../number-converter/format-specifier\"));\n\nvar _precisionPrefix = _interopRequireDefault(require(\"../number-converter/precision-prefix\"));\n\nvar E10 = Math.sqrt(50),\n    E5 = Math.sqrt(10),\n    E2 = Math.sqrt(2),\n    isNil = function isNil(x) {\n  return x === null || typeof x === \"undefined\";\n};\n\nfunction getMultiplier(error) {\n  var errorFactor;\n\n  if (error >= E10) {\n    errorFactor = 10;\n  } else if (error >= E5) {\n    errorFactor = 5;\n  } else if (error >= E2) {\n    errorFactor = 2;\n  } else {\n    errorFactor = 1;\n  }\n\n  return errorFactor;\n}\n\nfunction tickIncrement(start, stop, count) {\n  if (start === void 0) {\n    start = 0;\n  }\n\n  if (stop === void 0) {\n    stop = 1;\n  }\n\n  if (count === void 0) {\n    count = 7;\n  }\n\n  var step = (stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step) / Math.LN10),\n      error = step / Math.pow(10, power);\n\n  if (power >= 0) {\n    return getMultiplier(error) * Math.pow(10, power);\n  }\n\n  return -Math.pow(10, -power) / getMultiplier(error);\n}\n\nfunction tickStep(start, stop, count) {\n  if (start === void 0) {\n    start = 0;\n  }\n\n  if (stop === void 0) {\n    stop = 1;\n  }\n\n  if (count === void 0) {\n    count = 7;\n  }\n\n  var step0 = Math.abs(stop - start) / Math.max(0, count),\n      power = Math.floor(Math.log(step0) / Math.LN10),\n      step1 = Math.pow(10, power),\n      error = step0 / step1;\n\n  if (error >= E10) {\n    step1 *= 10;\n  } else if (error >= E5) {\n    step1 *= 5;\n  } else if (error >= E2) {\n    step1 *= 2;\n  }\n\n  return stop < start ? -step1 : step1;\n}\n\nfunction ticks(_start, _stop, _count) {\n  if (_start === void 0) {\n    _start = 0;\n  }\n\n  if (_stop === void 0) {\n    _stop = 1;\n  }\n\n  if (_count === void 0) {\n    _count = 7;\n  }\n\n  var reverse,\n      i = -1,\n      n,\n      tickArr = [],\n      step,\n      start,\n      stop,\n      count;\n  stop = +_stop;\n  start = +_start;\n  count = +_count;\n  if (start === stop && count > 0) return [start];\n  reverse = stop < start;\n\n  if (reverse) {\n    n = start;\n    start = stop;\n    stop = n;\n  }\n\n  step = tickIncrement(start, stop, count);\n  if (step === 0 || !isFinite(step)) return [];\n\n  if (step > 0) {\n    start = Math.ceil(start / step);\n    stop = Math.floor(stop / step);\n    n = Math.ceil(stop - start + 1);\n\n    while (++i < n) {\n      tickArr[i] = (start + i) * step;\n    }\n  } else {\n    start = Math.floor(start * step);\n    stop = Math.ceil(stop * step);\n    n = Math.ceil(start - stop + 1);\n\n    while (++i < n) {\n      tickArr[i] = (start - i) / step;\n    }\n  }\n\n  if (reverse) tickArr.reverse();\n  return tickArr;\n}\n\nfunction tickFormat(domain, count, _specifier, converter) {\n  if (converter === void 0) {\n    converter = _numberConverter.default;\n  }\n\n  var start = domain[0],\n      stop = domain[domain.length - 1],\n      step = tickStep(start, stop, isNil(count) ? 7 : count);\n  var precision, value, specifier;\n  specifier = new _formatSpecifier.default(isNil(_specifier) ? \",f\" : _specifier);\n\n  switch (specifier.type) {\n    case \"s\":\n      {\n        value = Math.max(Math.abs(start), Math.abs(stop));\n        precision = (0, _precisionPrefix.default)(step, value);\n\n        if (isNil(specifier.precision) && !isNaN(precision)) {\n          specifier.precision = precision;\n        }\n\n        return function (v) {\n          return converter.formatPrefix(specifier, value).format(v);\n        };\n      }\n\n    case \"\":\n    case \"e\":\n    case \"g\":\n    case \"p\":\n    case \"r\":\n      {\n        precision = (0, _precisionRound.default)(step, Math.max(Math.abs(start), Math.abs(stop)));\n\n        if (isNil(specifier.precision) && !isNaN(precision)) {\n          specifier.precision = precision - (specifier.type === \"e\");\n        }\n\n        break;\n      }\n\n    case \"f\":\n    case \"%\":\n      {\n        precision = (0, _precisionFixed.default)(step);\n\n        if (isNil(specifier.precision) && !isNaN(precision)) {\n          specifier.precision = precision - (specifier.type === \"%\") * 2;\n        }\n\n        break;\n      }\n  }\n\n  return function (v) {\n    return converter.formatter(specifier).format(v);\n  };\n}\n\nvar _default = ticks;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/utils/src/array/ticks.js"],"names":["_interopRequireDefault","require","exports","__esModule","tickIncrement","tickStep","tickFormat","default","_numberConverter","_precisionFixed","_precisionRound","_formatSpecifier","_precisionPrefix","E10","Math","sqrt","E5","E2","isNil","x","getMultiplier","error","errorFactor","start","stop","count","step","max","power","floor","log","LN10","pow","step0","abs","step1","ticks","_start","_stop","_count","reverse","i","n","tickArr","isFinite","ceil","domain","_specifier","converter","length","precision","value","specifier","type","isNaN","v","formatPrefix","format","formatter","_default"],"mappings":"AAAA;;AAAa,IAAIA,sBAAsB,GAACC,OAAO,CAAC,8CAAD,CAAlC;;AAAmFC,OAAO,CAACC,UAAR,GAAmB,IAAnB;AAAwBD,OAAO,CAACE,aAAR,GAAsBA,aAAtB;AAAoCF,OAAO,CAACG,QAAR,GAAiBA,QAAjB;AAA0BH,OAAO,CAACI,UAAR,GAAmBA,UAAnB;AAA8BJ,OAAO,CAACK,OAAR,GAAgB,KAAK,CAArB;;AAAuB,IAAIC,gBAAgB,GAACR,sBAAsB,CAACC,OAAO,CAAC,qBAAD,CAAR,CAA3C;;AAA4E,IAAIQ,eAAe,GAACT,sBAAsB,CAACC,OAAO,CAAC,qCAAD,CAAR,CAA1C;;AAA2F,IAAIS,eAAe,GAACV,sBAAsB,CAACC,OAAO,CAAC,qCAAD,CAAR,CAA1C;;AAA2F,IAAIU,gBAAgB,GAACX,sBAAsB,CAACC,OAAO,CAAC,sCAAD,CAAR,CAA3C;;AAA6F,IAAIW,gBAAgB,GAACZ,sBAAsB,CAACC,OAAO,CAAC,sCAAD,CAAR,CAA3C;;AAA6F,IAAIY,GAAG,GAACC,IAAI,CAACC,IAAL,CAAU,EAAV,CAAR;AAAA,IAAsBC,EAAE,GAACF,IAAI,CAACC,IAAL,CAAU,EAAV,CAAzB;AAAA,IAAuCE,EAAE,GAACH,IAAI,CAACC,IAAL,CAAU,CAAV,CAA1C;AAAA,IAAuDG,KAAK,GAAC,SAASA,KAAT,CAAeC,CAAf,EAAiB;AAAC,SAAOA,CAAC,KAAG,IAAJ,IAAU,OAAOA,CAAP,KAAW,WAA5B;AAAwC,CAAvH;;AAAwH,SAASC,aAAT,CAAuBC,KAAvB,EAA6B;AAAC,MAAIC,WAAJ;;AAAgB,MAAGD,KAAK,IAAER,GAAV,EAAc;AAACS,IAAAA,WAAW,GAAC,EAAZ;AAAe,GAA9B,MAAmC,IAAGD,KAAK,IAAEL,EAAV,EAAa;AAACM,IAAAA,WAAW,GAAC,CAAZ;AAAc,GAA5B,MAAiC,IAAGD,KAAK,IAAEJ,EAAV,EAAa;AAACK,IAAAA,WAAW,GAAC,CAAZ;AAAc,GAA5B,MAAgC;AAACA,IAAAA,WAAW,GAAC,CAAZ;AAAc;;AAAA,SAAOA,WAAP;AAAmB;;AAAA,SAASlB,aAAT,CAAuBmB,KAAvB,EAA6BC,IAA7B,EAAkCC,KAAlC,EAAwC;AAAC,MAAGF,KAAK,KAAG,KAAK,CAAhB,EAAkB;AAACA,IAAAA,KAAK,GAAC,CAAN;AAAQ;;AAAA,MAAGC,IAAI,KAAG,KAAK,CAAf,EAAiB;AAACA,IAAAA,IAAI,GAAC,CAAL;AAAO;;AAAA,MAAGC,KAAK,KAAG,KAAK,CAAhB,EAAkB;AAACA,IAAAA,KAAK,GAAC,CAAN;AAAQ;;AAAA,MAAIC,IAAI,GAAC,CAACF,IAAI,GAACD,KAAN,IAAaT,IAAI,CAACa,GAAL,CAAS,CAAT,EAAWF,KAAX,CAAtB;AAAA,MAAwCG,KAAK,GAACd,IAAI,CAACe,KAAL,CAAWf,IAAI,CAACgB,GAAL,CAASJ,IAAT,IAAeZ,IAAI,CAACiB,IAA/B,CAA9C;AAAA,MAAmFV,KAAK,GAACK,IAAI,GAACZ,IAAI,CAACkB,GAAL,CAAS,EAAT,EAAYJ,KAAZ,CAA9F;;AAAiH,MAAGA,KAAK,IAAE,CAAV,EAAY;AAAC,WAAOR,aAAa,CAACC,KAAD,CAAb,GAAqBP,IAAI,CAACkB,GAAL,CAAS,EAAT,EAAYJ,KAAZ,CAA5B;AAA+C;;AAAA,SAAM,CAACd,IAAI,CAACkB,GAAL,CAAS,EAAT,EAAY,CAACJ,KAAb,CAAD,GAAqBR,aAAa,CAACC,KAAD,CAAxC;AAAgD;;AAAA,SAAShB,QAAT,CAAkBkB,KAAlB,EAAwBC,IAAxB,EAA6BC,KAA7B,EAAmC;AAAC,MAAGF,KAAK,KAAG,KAAK,CAAhB,EAAkB;AAACA,IAAAA,KAAK,GAAC,CAAN;AAAQ;;AAAA,MAAGC,IAAI,KAAG,KAAK,CAAf,EAAiB;AAACA,IAAAA,IAAI,GAAC,CAAL;AAAO;;AAAA,MAAGC,KAAK,KAAG,KAAK,CAAhB,EAAkB;AAACA,IAAAA,KAAK,GAAC,CAAN;AAAQ;;AAAA,MAAIQ,KAAK,GAACnB,IAAI,CAACoB,GAAL,CAASV,IAAI,GAACD,KAAd,IAAqBT,IAAI,CAACa,GAAL,CAAS,CAAT,EAAWF,KAAX,CAA/B;AAAA,MAAiDG,KAAK,GAACd,IAAI,CAACe,KAAL,CAAWf,IAAI,CAACgB,GAAL,CAASG,KAAT,IAAgBnB,IAAI,CAACiB,IAAhC,CAAvD;AAAA,MAA6FI,KAAK,GAACrB,IAAI,CAACkB,GAAL,CAAS,EAAT,EAAYJ,KAAZ,CAAnG;AAAA,MAAsHP,KAAK,GAACY,KAAK,GAACE,KAAlI;;AAAwI,MAAGd,KAAK,IAAER,GAAV,EAAc;AAACsB,IAAAA,KAAK,IAAE,EAAP;AAAU,GAAzB,MAA8B,IAAGd,KAAK,IAAEL,EAAV,EAAa;AAACmB,IAAAA,KAAK,IAAE,CAAP;AAAS,GAAvB,MAA4B,IAAGd,KAAK,IAAEJ,EAAV,EAAa;AAACkB,IAAAA,KAAK,IAAE,CAAP;AAAS;;AAAA,SAAOX,IAAI,GAACD,KAAL,GAAW,CAACY,KAAZ,GAAkBA,KAAzB;AAA+B;;AAAA,SAASC,KAAT,CAAeC,MAAf,EAAsBC,KAAtB,EAA4BC,MAA5B,EAAmC;AAAC,MAAGF,MAAM,KAAG,KAAK,CAAjB,EAAmB;AAACA,IAAAA,MAAM,GAAC,CAAP;AAAS;;AAAA,MAAGC,KAAK,KAAG,KAAK,CAAhB,EAAkB;AAACA,IAAAA,KAAK,GAAC,CAAN;AAAQ;;AAAA,MAAGC,MAAM,KAAG,KAAK,CAAjB,EAAmB;AAACA,IAAAA,MAAM,GAAC,CAAP;AAAS;;AAAA,MAAIC,OAAJ;AAAA,MAAYC,CAAC,GAAC,CAAC,CAAf;AAAA,MAAiBC,CAAjB;AAAA,MAAmBC,OAAO,GAAC,EAA3B;AAAA,MAA8BjB,IAA9B;AAAA,MAAmCH,KAAnC;AAAA,MAAyCC,IAAzC;AAAA,MAA8CC,KAA9C;AAAoDD,EAAAA,IAAI,GAAC,CAACc,KAAN;AAAYf,EAAAA,KAAK,GAAC,CAACc,MAAP;AAAcZ,EAAAA,KAAK,GAAC,CAACc,MAAP;AAAc,MAAGhB,KAAK,KAAGC,IAAR,IAAcC,KAAK,GAAC,CAAvB,EAAyB,OAAM,CAACF,KAAD,CAAN;AAAciB,EAAAA,OAAO,GAAChB,IAAI,GAACD,KAAb;;AAAmB,MAAGiB,OAAH,EAAW;AAACE,IAAAA,CAAC,GAACnB,KAAF;AAAQA,IAAAA,KAAK,GAACC,IAAN;AAAWA,IAAAA,IAAI,GAACkB,CAAL;AAAO;;AAAAhB,EAAAA,IAAI,GAACtB,aAAa,CAACmB,KAAD,EAAOC,IAAP,EAAYC,KAAZ,CAAlB;AAAqC,MAAGC,IAAI,KAAG,CAAP,IAAU,CAACkB,QAAQ,CAAClB,IAAD,CAAtB,EAA6B,OAAM,EAAN;;AAAS,MAAGA,IAAI,GAAC,CAAR,EAAU;AAACH,IAAAA,KAAK,GAACT,IAAI,CAAC+B,IAAL,CAAUtB,KAAK,GAACG,IAAhB,CAAN;AAA4BF,IAAAA,IAAI,GAACV,IAAI,CAACe,KAAL,CAAWL,IAAI,GAACE,IAAhB,CAAL;AAA2BgB,IAAAA,CAAC,GAAC5B,IAAI,CAAC+B,IAAL,CAAUrB,IAAI,GAACD,KAAL,GAAW,CAArB,CAAF;;AAA0B,WAAM,EAAEkB,CAAF,GAAIC,CAAV,EAAY;AAACC,MAAAA,OAAO,CAACF,CAAD,CAAP,GAAW,CAAClB,KAAK,GAACkB,CAAP,IAAUf,IAArB;AAA0B;AAAC,GAApI,MAAwI;AAACH,IAAAA,KAAK,GAACT,IAAI,CAACe,KAAL,CAAWN,KAAK,GAACG,IAAjB,CAAN;AAA6BF,IAAAA,IAAI,GAACV,IAAI,CAAC+B,IAAL,CAAUrB,IAAI,GAACE,IAAf,CAAL;AAA0BgB,IAAAA,CAAC,GAAC5B,IAAI,CAAC+B,IAAL,CAAUtB,KAAK,GAACC,IAAN,GAAW,CAArB,CAAF;;AAA0B,WAAM,EAAEiB,CAAF,GAAIC,CAAV,EAAY;AAACC,MAAAA,OAAO,CAACF,CAAD,CAAP,GAAW,CAAClB,KAAK,GAACkB,CAAP,IAAUf,IAArB;AAA0B;AAAC;;AAAA,MAAGc,OAAH,EAAWG,OAAO,CAACH,OAAR;AAAkB,SAAOG,OAAP;AAAe;;AAAA,SAASrC,UAAT,CAAoBwC,MAApB,EAA2BrB,KAA3B,EAAiCsB,UAAjC,EAA4CC,SAA5C,EAAsD;AAAC,MAAGA,SAAS,KAAG,KAAK,CAApB,EAAsB;AAACA,IAAAA,SAAS,GAACxC,gBAAgB,CAACD,OAA3B;AAAmC;;AAAA,MAAIgB,KAAK,GAACuB,MAAM,CAAC,CAAD,CAAhB;AAAA,MAAoBtB,IAAI,GAACsB,MAAM,CAACA,MAAM,CAACG,MAAP,GAAc,CAAf,CAA/B;AAAA,MAAiDvB,IAAI,GAACrB,QAAQ,CAACkB,KAAD,EAAOC,IAAP,EAAYN,KAAK,CAACO,KAAD,CAAL,GAAa,CAAb,GAAeA,KAA3B,CAA9D;AAAgG,MAAIyB,SAAJ,EAAcC,KAAd,EAAoBC,SAApB;AAA8BA,EAAAA,SAAS,GAAC,IAAIzC,gBAAgB,CAACJ,OAArB,CAA6BW,KAAK,CAAC6B,UAAD,CAAL,GAAkB,IAAlB,GAAuBA,UAApD,CAAV;;AAA0E,UAAOK,SAAS,CAACC,IAAjB;AAAuB,SAAI,GAAJ;AAAQ;AAACF,QAAAA,KAAK,GAACrC,IAAI,CAACa,GAAL,CAASb,IAAI,CAACoB,GAAL,CAASX,KAAT,CAAT,EAAyBT,IAAI,CAACoB,GAAL,CAASV,IAAT,CAAzB,CAAN;AAA+C0B,QAAAA,SAAS,GAAC,CAAC,GAAEtC,gBAAgB,CAACL,OAApB,EAA6BmB,IAA7B,EAAkCyB,KAAlC,CAAV;;AAAmD,YAAGjC,KAAK,CAACkC,SAAS,CAACF,SAAX,CAAL,IAA4B,CAACI,KAAK,CAACJ,SAAD,CAArC,EAAiD;AAACE,UAAAA,SAAS,CAACF,SAAV,GAAoBA,SAApB;AAA8B;;AAAA,eAAO,UAASK,CAAT,EAAW;AAAC,iBAAOP,SAAS,CAACQ,YAAV,CAAuBJ,SAAvB,EAAiCD,KAAjC,EAAwCM,MAAxC,CAA+CF,CAA/C,CAAP;AAAyD,SAA5E;AAA6E;;AAAA,SAAI,EAAJ;AAAO,SAAI,GAAJ;AAAQ,SAAI,GAAJ;AAAQ,SAAI,GAAJ;AAAQ,SAAI,GAAJ;AAAQ;AAACL,QAAAA,SAAS,GAAC,CAAC,GAAExC,eAAe,CAACH,OAAnB,EAA4BmB,IAA5B,EAAiCZ,IAAI,CAACa,GAAL,CAASb,IAAI,CAACoB,GAAL,CAASX,KAAT,CAAT,EAAyBT,IAAI,CAACoB,GAAL,CAASV,IAAT,CAAzB,CAAjC,CAAV;;AAAqF,YAAGN,KAAK,CAACkC,SAAS,CAACF,SAAX,CAAL,IAA4B,CAACI,KAAK,CAACJ,SAAD,CAArC,EAAiD;AAACE,UAAAA,SAAS,CAACF,SAAV,GAAoBA,SAAS,IAAEE,SAAS,CAACC,IAAV,KAAiB,GAAnB,CAA7B;AAAqD;;AAAA;AAAM;;AAAA,SAAI,GAAJ;AAAQ,SAAI,GAAJ;AAAQ;AAACH,QAAAA,SAAS,GAAC,CAAC,GAAEzC,eAAe,CAACF,OAAnB,EAA4BmB,IAA5B,CAAV;;AAA4C,YAAGR,KAAK,CAACkC,SAAS,CAACF,SAAX,CAAL,IAA4B,CAACI,KAAK,CAACJ,SAAD,CAArC,EAAiD;AAACE,UAAAA,SAAS,CAACF,SAAV,GAAoBA,SAAS,GAAC,CAACE,SAAS,CAACC,IAAV,KAAiB,GAAlB,IAAuB,CAArD;AAAuD;;AAAA;AAAM;AAArrB;;AAAsrB,SAAO,UAASE,CAAT,EAAW;AAAC,WAAOP,SAAS,CAACU,SAAV,CAAoBN,SAApB,EAA+BK,MAA/B,CAAsCF,CAAtC,CAAP;AAAgD,GAAnE;AAAoE;;AAAA,IAAII,QAAQ,GAACvB,KAAb;AAAmBlC,OAAO,CAACK,OAAR,GAAgBoD,QAAhB","sourcesContent":["\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.tickIncrement=tickIncrement;exports.tickStep=tickStep;exports.tickFormat=tickFormat;exports.default=void 0;var _numberConverter=_interopRequireDefault(require(\"../number-converter\"));var _precisionFixed=_interopRequireDefault(require(\"../number-converter/precision-fixed\"));var _precisionRound=_interopRequireDefault(require(\"../number-converter/precision-round\"));var _formatSpecifier=_interopRequireDefault(require(\"../number-converter/format-specifier\"));var _precisionPrefix=_interopRequireDefault(require(\"../number-converter/precision-prefix\"));var E10=Math.sqrt(50),E5=Math.sqrt(10),E2=Math.sqrt(2),isNil=function isNil(x){return x===null||typeof x===\"undefined\"};function getMultiplier(error){var errorFactor;if(error>=E10){errorFactor=10}else if(error>=E5){errorFactor=5}else if(error>=E2){errorFactor=2}else{errorFactor=1}return errorFactor}function tickIncrement(start,stop,count){if(start===void 0){start=0}if(stop===void 0){stop=1}if(count===void 0){count=7}var step=(stop-start)/Math.max(0,count),power=Math.floor(Math.log(step)/Math.LN10),error=step/Math.pow(10,power);if(power>=0){return getMultiplier(error)*Math.pow(10,power)}return-Math.pow(10,-power)/getMultiplier(error)}function tickStep(start,stop,count){if(start===void 0){start=0}if(stop===void 0){stop=1}if(count===void 0){count=7}var step0=Math.abs(stop-start)/Math.max(0,count),power=Math.floor(Math.log(step0)/Math.LN10),step1=Math.pow(10,power),error=step0/step1;if(error>=E10){step1*=10}else if(error>=E5){step1*=5}else if(error>=E2){step1*=2}return stop<start?-step1:step1}function ticks(_start,_stop,_count){if(_start===void 0){_start=0}if(_stop===void 0){_stop=1}if(_count===void 0){_count=7}var reverse,i=-1,n,tickArr=[],step,start,stop,count;stop=+_stop;start=+_start;count=+_count;if(start===stop&&count>0)return[start];reverse=stop<start;if(reverse){n=start;start=stop;stop=n}step=tickIncrement(start,stop,count);if(step===0||!isFinite(step))return[];if(step>0){start=Math.ceil(start/step);stop=Math.floor(stop/step);n=Math.ceil(stop-start+1);while(++i<n){tickArr[i]=(start+i)*step}}else{start=Math.floor(start*step);stop=Math.ceil(stop*step);n=Math.ceil(start-stop+1);while(++i<n){tickArr[i]=(start-i)/step}}if(reverse)tickArr.reverse();return tickArr}function tickFormat(domain,count,_specifier,converter){if(converter===void 0){converter=_numberConverter.default}var start=domain[0],stop=domain[domain.length-1],step=tickStep(start,stop,isNil(count)?7:count);var precision,value,specifier;specifier=new _formatSpecifier.default(isNil(_specifier)?\",f\":_specifier);switch(specifier.type){case\"s\":{value=Math.max(Math.abs(start),Math.abs(stop));precision=(0,_precisionPrefix.default)(step,value);if(isNil(specifier.precision)&&!isNaN(precision)){specifier.precision=precision}return function(v){return converter.formatPrefix(specifier,value).format(v)}}case\"\":case\"e\":case\"g\":case\"p\":case\"r\":{precision=(0,_precisionRound.default)(step,Math.max(Math.abs(start),Math.abs(stop)));if(isNil(specifier.precision)&&!isNaN(precision)){specifier.precision=precision-(specifier.type===\"e\")}break}case\"f\":case\"%\":{precision=(0,_precisionFixed.default)(step);if(isNil(specifier.precision)&&!isNaN(precision)){specifier.precision=precision-(specifier.type===\"%\")*2}break}}return function(v){return converter.formatter(specifier).format(v)}}var _default=ticks;exports.default=_default;"]},"metadata":{},"sourceType":"script"}