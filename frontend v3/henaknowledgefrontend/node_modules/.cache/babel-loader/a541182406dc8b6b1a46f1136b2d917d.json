{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _lib = require(\"../lib\");\n\nvar UNDEF,\n    mathAbs = Math.abs,\n    mathPow = Math.pow,\n    mathRound = Math.round,\n    ONESTRING = \"1\",\n    BLANK = \"\",\n    ZEROSTRING = \"0\",\n    DECIMALSTRING = \".\",\n    COMMASTRING = \",\",\n    MINUSSTR = \"-\",\n    TWOSTRING = \"2\",\n    AUTOSTRING = \"auto\",\n    formatNumber,\n    formatNumberScale,\n    convertNumberSeps,\n    formatDecimals,\n    formatCommas,\n    numberFormatDefaults = {\n  formatnumber: ONESTRING,\n  formatnumberscale: ONESTRING,\n  forcenumberscale: ZEROSTRING,\n  defaultnumberscale: BLANK,\n  numberscaleunit: [\"K\", \"M\"],\n  numberscalevalue: [1e3, 1e3],\n  numberprefix: BLANK,\n  numbersuffix: BLANK,\n  decimals: BLANK,\n  forcedecimals: ZEROSTRING,\n  yaxisvaluedecimals: TWOSTRING,\n  decimalseparator: DECIMALSTRING,\n  thousandseparator: COMMASTRING,\n  thousandseparatorposition: [3],\n  indecimalseparator: BLANK,\n  inthousandseparator: BLANK,\n  sformatnumber: ONESTRING,\n  sformatnumberscale: ZEROSTRING,\n  sforcenumberscale: ZEROSTRING,\n  sdefaultnumberscale: BLANK,\n  snumberscaleunit: [\"K\", \"M\"],\n  snumberscalevalue: [1e3, 1e3],\n  snumberprefix: BLANK,\n  snumbersuffix: BLANK,\n  sdecimals: TWOSTRING,\n  sforcedecimals: ZEROSTRING,\n  syaxisvaluedecimals: TWOSTRING,\n  xFormatNumber: ZEROSTRING,\n  xFormatNumberScale: ZEROSTRING,\n  xforcenumberscale: ZEROSTRING,\n  xDefaultNumberScale: BLANK,\n  xNumberScaleUnit: [\"K\", \"M\"],\n  xNumberScaleValue: [1e3, 1e3],\n  xNumberPrefix: BLANK,\n  xNumberSuffix: BLANK\n},\n    numberFormatOverrides = {\n  mscombidy2d: {\n    formatnumberscale: ONESTRING\n  }\n};\n\nvar NumberFormatter = function () {\n  function NumberFormatter(chart, customAttrs) {\n    var nf = this,\n        chartName = chart.getName && chart.getName(),\n        csConfigBuffer,\n        csConf = nf.csConf = (0, _lib.extend2)({}, numberFormatDefaults),\n        overrideConf = numberFormatOverrides[chartName];\n    nf.cleaneValueCacheStore = {};\n    nf.percentStrCacheStore = {};\n\n    if (overrideConf) {\n      csConfigBuffer = (0, _lib.extend2)(csConf, overrideConf);\n      csConf = csConfigBuffer;\n    }\n\n    this.linkedItems = {\n      chart: chart\n    };\n    nf.configure(customAttrs);\n  }\n\n  var _proto = NumberFormatter.prototype;\n\n  _proto.setDefaults = function setDefaults() {\n    var chart = this.linkedItems.chart,\n        chartName = chart.getName && chart.getName(),\n        csConf = this.csConf = (0, _lib.extend2)({}, numberFormatDefaults),\n        overrideConf = numberFormatOverrides[chartName];\n\n    if (overrideConf) {\n      (0, _lib.extend2)(csConf, overrideConf);\n    }\n  };\n\n  _proto.configure = function configure(customAttrs) {\n    var nf = this,\n        chart = nf.linkedItems.chart,\n        chartAttrs = customAttrs || chart.getFromEnv(\"chart-attrib\"),\n        chartName = chart.getName && chart.getName(),\n        chartConf = chart.config,\n        csConf = nf.csConf,\n        isMultyAxis,\n        numberscaleunit,\n        snumberscaleunit,\n        xnumberscaleunit,\n        ticknumberscaleunit,\n        ynumberscaleunit,\n        numberscalevalue,\n        xnumberscalevalue,\n        ticknumberscalevalue,\n        ynumberscalevalue,\n        thousandseparatorposition,\n        snumberscalevalue,\n        paramLabels,\n        paramLabels2,\n        param1,\n        param2,\n        baseConf,\n        length,\n        value,\n        lastValue,\n        scaleRecursively,\n        sScaleRecursively,\n        xScaleRecursively,\n        maxScaleRecursion,\n        sMaxScaleRecursion,\n        xMaxScaleRecursion,\n        scaleSeparator,\n        sScaleSeparator,\n        xScaleSeparator;\n\n    if (!chartConf) {\n      chartConf = chart;\n    }\n\n    nf.csConf = csConf;\n    nf.useScaleRecursively = chartConf.useScaleRecursively;\n\n    if ((0, _lib.getValidValue)(chartAttrs.numberscaleunit)) {\n      numberscaleunit = chartAttrs.numberscaleunit.split(COMMASTRING);\n    }\n\n    if (snumberscaleunit = (0, _lib.getValidValue)(chartAttrs.snumberscaleunit, chartAttrs.numberscaleunit)) {\n      snumberscaleunit = snumberscaleunit.split(COMMASTRING);\n    }\n\n    if (xnumberscaleunit = (0, _lib.getValidValue)(chartAttrs.xnumberscaleunit, chartAttrs.numberscaleunit)) {\n      xnumberscaleunit = xnumberscaleunit.split(COMMASTRING);\n    }\n\n    if (ticknumberscaleunit = (0, _lib.getValidValue)(chartAttrs.ticknumberscaleunit, chartAttrs.numberscaleunit)) {\n      ticknumberscaleunit = ticknumberscaleunit.split(COMMASTRING);\n    }\n\n    if (ynumberscaleunit = (0, _lib.getValidValue)(chartAttrs.ynumberscaleunit, chartAttrs.numberscaleunit)) {\n      ynumberscaleunit = ynumberscaleunit.split(COMMASTRING);\n    }\n\n    if ((0, _lib.getValidValue)(chartAttrs.numberscalevalue)) {\n      numberscalevalue = chartAttrs.numberscalevalue.split(COMMASTRING);\n    }\n\n    if (snumberscalevalue = (0, _lib.getValidValue)(chartAttrs.snumberscalevalue, chartAttrs.numberscalevalue)) {\n      snumberscalevalue = snumberscalevalue.split(COMMASTRING);\n    }\n\n    if (xnumberscalevalue = (0, _lib.getValidValue)(chartAttrs.xnumberscalevalue, chartAttrs.numberscalevalue)) {\n      xnumberscalevalue = xnumberscalevalue.split(COMMASTRING);\n    }\n\n    if (ticknumberscalevalue = (0, _lib.getValidValue)(chartAttrs.ticknumberscalevalue, chartAttrs.numberscalevalue)) {\n      ticknumberscalevalue = ticknumberscalevalue.split(COMMASTRING);\n    }\n\n    if (ynumberscalevalue = (0, _lib.getValidValue)(chartAttrs.ynumberscalevalue, chartAttrs.numberscalevalue)) {\n      ynumberscalevalue = ynumberscalevalue.split(COMMASTRING);\n    }\n\n    if ((0, _lib.getValidValue)(chartAttrs.thousandseparatorposition)) {\n      thousandseparatorposition = chartAttrs.thousandseparatorposition.split(COMMASTRING);\n      length = thousandseparatorposition.length;\n      lastValue = numberFormatDefaults.thousandseparatorposition[0];\n\n      while (length--) {\n        value = parseInt(thousandseparatorposition[length], 10);\n\n        if (value <= 0) {\n          value = lastValue;\n        }\n\n        lastValue = thousandseparatorposition[length] = value;\n      }\n    }\n\n    scaleRecursively = (0, _lib.pluckNumber)(chartAttrs.scalerecursively, 0);\n    sScaleRecursively = (0, _lib.pluckNumber)(chartAttrs.sscalerecursively, scaleRecursively);\n    xScaleRecursively = (0, _lib.pluckNumber)(chartAttrs.xscalerecursively, scaleRecursively);\n    maxScaleRecursion = (0, _lib.pluckNumber)(chartAttrs.maxscalerecursion, -1);\n    sMaxScaleRecursion = (0, _lib.pluckNumber)(chartAttrs.smaxscalerecursion, maxScaleRecursion);\n    xMaxScaleRecursion = (0, _lib.pluckNumber)(chartAttrs.xmaxscalerecursion, maxScaleRecursion);\n    scaleSeparator = (0, _lib.getValidValue)(chartAttrs.scaleseparator, \" \");\n    sScaleSeparator = (0, _lib.getValidValue)(chartAttrs.sscaleseparator, scaleSeparator);\n    xScaleSeparator = (0, _lib.getValidValue)(chartAttrs.xscaleseparator, scaleSeparator);\n\n    if (!maxScaleRecursion) {\n      maxScaleRecursion = -1;\n    }\n\n    nf.baseConf = baseConf = {\n      cacheStore: [],\n      formatnumber: (0, _lib.pluck)(chartAttrs.formatnumber, csConf.formatnumber),\n      formatnumberscale: (0, _lib.pluck)(chartAttrs.formatnumberscale, chartConf.formatnumberscale, csConf.formatnumberscale),\n      forcenumberscale: (0, _lib.pluck)(chartAttrs.forcenumberscale, csConf.forcenumberscale),\n      defaultnumberscale: (0, _lib.getFirstValue)(chartAttrs.defaultnumberscale, csConf.defaultnumberscale),\n      numberscaleunit: (0, _lib.pluck)(numberscaleunit, csConf.numberscaleunit).concat(),\n      numberscalevalue: (0, _lib.pluck)(numberscalevalue, csConf.numberscalevalue).concat(),\n      numberprefix: (0, _lib.parseUnsafeString)((0, _lib.getFirstValue)(chartAttrs.numberprefix, csConf.numberprefix)),\n      numbersuffix: (0, _lib.parseUnsafeString)((0, _lib.getFirstValue)(chartAttrs.numbersuffix, csConf.numbersuffix)),\n      decimalprecision: parseInt(chartAttrs.decimals === AUTOSTRING ? csConf.decimalprecision : (0, _lib.pluck)(chartAttrs.decimals, chartAttrs.decimalprecision, chartConf.decimals, csConf.decimals, chartConf.decimalprecision, csConf.decimalprecision), 10),\n      forcedecimals: (0, _lib.pluck)(chartAttrs.forcedecimals, csConf.forcedecimals),\n      decimalseparator: (0, _lib.pluck)(chartAttrs.decimalseparator, csConf.decimalseparator),\n      thousandseparator: (0, _lib.pluck)(chartAttrs.thousandseparator, csConf.thousandseparator),\n      thousandseparatorposition: (0, _lib.pluck)(thousandseparatorposition, csConf.thousandseparatorposition),\n      indecimalseparator: (0, _lib.getFirstValue)(chartAttrs.indecimalseparator, csConf.indecimalseparator),\n      inthousandseparator: (0, _lib.getFirstValue)(chartAttrs.inthousandseparator, csConf.inthousandseparator),\n      scalerecursively: scaleRecursively,\n      maxscalerecursion: maxScaleRecursion,\n      scaleseparator: scaleSeparator\n    };\n\n    if ((0, _lib.getValidValue)(baseConf.inthousandseparator)) {\n      nf.baseConf._REGinthousandseparator = new RegExp((0, _lib.regescape)(baseConf.inthousandseparator), \"g\");\n    }\n\n    if ((0, _lib.getValidValue)(baseConf.indecimalseparator)) {\n      nf.baseConf._REGindecimalseparator = new RegExp((0, _lib.regescape)(baseConf.indecimalseparator));\n    }\n\n    nf.Y = [];\n\n    if (!isMultyAxis) {\n      paramLabels = {\n        cacheStore: [],\n        formatnumber: baseConf.formatnumber,\n        formatnumberscale: baseConf.formatnumberscale,\n        forcenumberscale: baseConf.forcenumberscale,\n        defaultnumberscale: baseConf.defaultnumberscale,\n        numberscaleunit: baseConf.numberscaleunit.concat(),\n        numberscalevalue: baseConf.numberscalevalue.concat(),\n        numberprefix: baseConf.numberprefix,\n        numbersuffix: baseConf.numbersuffix,\n        decimalprecision: baseConf.decimalprecision,\n        forcedecimals: baseConf.forcedecimals,\n        decimalseparator: baseConf.decimalseparator,\n        thousandseparator: baseConf.thousandseparator,\n        thousandseparatorposition: baseConf.thousandseparatorposition,\n        indecimalseparator: baseConf.indecimalseparator,\n        inthousandseparator: baseConf.inthousandseparator,\n        scalerecursively: scaleRecursively,\n        maxscalerecursion: maxScaleRecursion,\n        scaleseparator: scaleSeparator\n      };\n\n      if (!chartConf.useScaleRecursively || (paramLabels.numberscalevalue && paramLabels.numberscalevalue.length) !== (paramLabels.numberscaleunit && paramLabels.numberscaleunit.length)) {\n        paramLabels.scalerecursively = scaleRecursively = 0;\n      }\n\n      param1 = {\n        cacheStore: [],\n        formatnumber: paramLabels.formatnumber,\n        formatnumberscale: paramLabels.formatnumberscale,\n        forcenumberscale: paramLabels.forcenumberscale,\n        defaultnumberscale: paramLabels.defaultnumberscale,\n        numberscaleunit: paramLabels.numberscaleunit.concat(),\n        numberscalevalue: paramLabels.numberscalevalue.concat(),\n        numberprefix: paramLabels.numberprefix,\n        numbersuffix: paramLabels.numbersuffix,\n        decimalprecision: parseInt((0, _lib.pluck)(chartAttrs.yaxisvaluedecimals, paramLabels.decimalprecision, 2), 10),\n        forcedecimals: (0, _lib.pluck)(chartAttrs.forceyaxisvaluedecimals, paramLabels.forcedecimals),\n        decimalseparator: paramLabels.decimalseparator,\n        thousandseparator: paramLabels.thousandseparator,\n        thousandseparatorposition: paramLabels.thousandseparatorposition.concat(),\n        indecimalseparator: paramLabels.indecimalseparator,\n        inthousandseparator: paramLabels.inthousandseparator,\n        scalerecursively: scaleRecursively,\n        maxscalerecursion: maxScaleRecursion,\n        scaleseparator: scaleSeparator\n      };\n      param2 = {\n        cacheStore: [],\n        formatnumber: (0, _lib.pluck)(chartAttrs.sformatnumber, numberFormatDefaults.sformatnumber),\n        formatnumberscale: (0, _lib.pluck)(chartAttrs.sformatnumberscale, numberFormatDefaults.sformatnumberscale),\n        forcenumberscale: (0, _lib.pluck)(chartAttrs.sforcenumberscale, numberFormatDefaults.sforcenumberscale),\n        defaultnumberscale: (0, _lib.getFirstValue)(chartAttrs.sdefaultnumberscale, paramLabels.defaultnumberscale),\n        numberscaleunit: (0, _lib.pluck)(snumberscaleunit, numberFormatDefaults.snumberscaleunit).concat(),\n        numberscalevalue: (0, _lib.pluck)(snumberscalevalue, numberFormatDefaults.snumberscalevalue).concat(),\n        numberprefix: (0, _lib.parseUnsafeString)((0, _lib.getFirstValue)(chartAttrs.snumberprefix, numberFormatDefaults.snumberprefix)),\n        numbersuffix: (0, _lib.parseUnsafeString)((0, _lib.getFirstValue)(chartAttrs.snumbersuffix, numberFormatDefaults.snumbersuffix)),\n        decimalprecision: parseInt((0, _lib.pluck)(chartAttrs.syaxisvaluedecimals, chartAttrs.sdecimals, chartAttrs.decimals, numberFormatDefaults.sdecimals), 10),\n        forcedecimals: (0, _lib.pluck)(chartAttrs.forcesyaxisvaluedecimals, chartAttrs.sforcedecimals, chartAttrs.forcedecimals, numberFormatDefaults.sforcedecimals),\n        decimalseparator: (0, _lib.pluck)(chartAttrs.decimalseparator, numberFormatDefaults.decimalseparator),\n        thousandseparator: (0, _lib.pluck)(chartAttrs.thousandseparator, numberFormatDefaults.thousandseparator),\n        thousandseparatorposition: paramLabels.thousandseparatorposition.concat(),\n        indecimalseparator: (0, _lib.parseUnsafeString)((0, _lib.pluck)(chartAttrs.indecimalseparator, numberFormatDefaults.indecimalseparator)),\n        inthousandseparator: (0, _lib.parseUnsafeString)((0, _lib.pluck)(chartAttrs.inthousandseparator, numberFormatDefaults.inthousandseparator)),\n        scalerecursively: sScaleRecursively,\n        maxscalerecursion: sMaxScaleRecursion,\n        scaleseparator: sScaleSeparator\n      };\n      paramLabels2 = (0, _lib.extend2)({}, param2);\n      paramLabels2.decimalprecision = parseInt((0, _lib.pluck)(chartAttrs.sdecimals, chartAttrs.decimals, chartAttrs.syaxisvaluedecimals, numberFormatDefaults.sdecimals), 10);\n      paramLabels2.forcedecimals = (0, _lib.pluck)(chartAttrs.sforcedecimals, chartAttrs.forcedecimals, chartAttrs.forcesyaxisvaluedecimals, numberFormatDefaults.sforcedecimals);\n      paramLabels2.cacheStore = [];\n\n      if (!chartConf.useScaleRecursively || (param2.numberscalevalue && param2.numberscalevalue.length) !== (param2.numberscaleunit && param2.numberscaleunit.length)) {\n        param2.scalerecursively = sScaleRecursively = 0;\n      }\n\n      if (/^(bubble|scatter|selectscatter|zoomscatter)$/gi.test(chartName)) {\n        param1.formatnumber = (0, _lib.pluck)(chartAttrs.yformatnumber, param1.formatnumber);\n        param1.formatnumberscale = (0, _lib.pluck)(chartAttrs.yformatnumberscale, param1.formatnumberscale);\n        param1.forcenumberscale = (0, _lib.pluck)(chartAttrs.yforcenumberscale, param1.forcenumberscale);\n        param1.defaultnumberscale = (0, _lib.getFirstValue)(chartAttrs.ydefaultnumberscale, param1.defaultnumberscale);\n        param1.numberscaleunit = (0, _lib.pluck)(ynumberscaleunit, param1.numberscaleunit);\n        param1.numberscalevalue = (0, _lib.pluck)(ynumberscalevalue, param1.numberscalevalue);\n        param1.numberprefix = (0, _lib.parseUnsafeString)((0, _lib.pluck)(chartAttrs.ynumberprefix, param1.numberprefix));\n        param1.numbersuffix = (0, _lib.parseUnsafeString)((0, _lib.pluck)(chartAttrs.ynumbersuffix, param1.numbersuffix));\n        paramLabels.formatnumber = (0, _lib.pluck)(chartAttrs.yformatnumber, paramLabels.formatnumber);\n        paramLabels.formatnumberscale = (0, _lib.pluck)(chartAttrs.yformatnumberscale, paramLabels.formatnumberscale);\n        paramLabels.forcenumberscale = (0, _lib.pluck)(chartAttrs.yforcenumberscale, paramLabels.forcenumberscale);\n        paramLabels.defaultnumberscale = (0, _lib.getFirstValue)(chartAttrs.ydefaultnumberscale, paramLabels.defaultnumberscale);\n        paramLabels.numberscaleunit = (0, _lib.pluck)(chartAttrs.ynumberscaleunit, paramLabels.numberscaleunit.concat());\n        paramLabels.numberscalevalue = (0, _lib.pluck)(chartAttrs.ynumberscalevalue, paramLabels.numberscalevalue.concat());\n        paramLabels.numberprefix = (0, _lib.parseUnsafeString)((0, _lib.pluck)(chartAttrs.ynumberprefix, paramLabels.numberprefix));\n        paramLabels.numbersuffix = (0, _lib.parseUnsafeString)((0, _lib.pluck)(chartAttrs.ynumbersuffix, paramLabels.numbersuffix));\n      }\n\n      if (/^(pie2d|pie3d|doughnut2d|doughnut3d|marimekko|pareto2d|pareto3d)$/.test(chartName)) {\n        paramLabels.decimalprecision = (0, _lib.pluck)(chartAttrs.decimals, TWOSTRING);\n      }\n\n      if (scaleRecursively) {\n        paramLabels.numberscalevalue.push(1);\n        paramLabels.numberscaleunit.unshift(paramLabels.defaultnumberscale);\n        param1.numberscalevalue.push(1);\n        param1.numberscaleunit.unshift(param1.defaultnumberscale);\n      }\n\n      if (sScaleRecursively) {\n        param2.numberscalevalue.push(1);\n        param2.numberscaleunit.unshift(param2.defaultnumberscale);\n        paramLabels2.numberscalevalue.push(1);\n        paramLabels2.numberscaleunit.unshift(paramLabels2.defaultnumberscale);\n      }\n\n      nf.Y[0] = {\n        yAxisLabelConf: param1,\n        dataLabelConf: paramLabels\n      };\n      nf.Y[1] = {\n        yAxisLabelConf: param2,\n        dataLabelConf: paramLabels2\n      };\n      nf.paramLabels = paramLabels;\n      nf.param1 = param1;\n      nf.param2 = param2;\n      nf.paramLabels2 = paramLabels2;\n    }\n\n    nf.paramX = {\n      cacheStore: [],\n      formatnumber: (0, _lib.pluck)(chartAttrs.xformatnumber, baseConf.formatnumber),\n      formatnumberscale: (0, _lib.pluck)(chartAttrs.xformatnumberscale, baseConf.formatnumberscale),\n      forcenumberscale: (0, _lib.pluck)(chartAttrs.xforcenumberscale, baseConf.forcenumberscale),\n      defaultnumberscale: (0, _lib.getFirstValue)(chartAttrs.xdefaultnumberscale, baseConf.defaultnumberscale),\n      numberscaleunit: (0, _lib.pluck)(xnumberscaleunit, baseConf.numberscaleunit.concat()),\n      numberscalevalue: (0, _lib.pluck)(xnumberscalevalue, baseConf.numberscalevalue.concat()),\n      numberprefix: (0, _lib.parseUnsafeString)((0, _lib.pluck)(chartAttrs.xnumberprefix, baseConf.numberprefix)),\n      numbersuffix: (0, _lib.parseUnsafeString)((0, _lib.pluck)(chartAttrs.xnumbersuffix, baseConf.numbersuffix)),\n      decimalprecision: parseInt((0, _lib.pluck)(chartAttrs.xaxisvaluedecimals, chartAttrs.xaxisvaluesdecimals, baseConf.decimalprecision, 2), 10),\n      forcedecimals: (0, _lib.pluck)(chartAttrs.forcexaxisvaluedecimals, 0),\n      decimalseparator: baseConf.decimalseparator,\n      thousandseparator: baseConf.thousandseparator,\n      thousandseparatorposition: baseConf.thousandseparatorposition.concat(),\n      indecimalseparator: baseConf.indecimalseparator,\n      inthousandseparator: baseConf.inthousandseparator,\n      scalerecursively: xScaleRecursively,\n      maxscalerecursion: xMaxScaleRecursion,\n      scaleseparator: xScaleSeparator\n    };\n    nf.paramLegend = (0, _lib.extend2)((0, _lib.extend2)({}, baseConf), {\n      cacheStore: [],\n      decimalprecision: parseInt((0, _lib.pluckNumber)(chartAttrs.legendvaluedecimals, baseConf.decimalprecision, 2), 10),\n      forcedecimals: (0, _lib.pluckNumber)(chartAttrs.legendvalueforcedecimals, baseConf.forcedecimals, 0),\n      formatnumberscale: (0, _lib.pluck)(chartAttrs.legendvalueformatnumberscale, baseConf.formatnumberscale),\n      forcenumberscale: (0, _lib.pluck)(chartAttrs.legendvalueforcenumberscale, baseConf.forcenumberscale),\n      formatnumber: (0, _lib.pluck)(chartAttrs.legendvalueformatnumber, baseConf.formatnumber)\n    });\n\n    if (scaleRecursively) {\n      nf.paramLegend.numberscalevalue.push(1);\n      nf.paramLegend.numberscaleunit.unshift(nf.paramLegend.defaultnumberscale);\n    }\n\n    if (!chartConf.useScaleRecursively || (nf.paramX.numberscalevalue && nf.paramX.numberscalevalue.length) !== (nf.paramX.numberscaleunit && nf.paramX.numberscaleunit.length)) {\n      nf.paramX.scalerecursively = xScaleRecursively = 0;\n    }\n\n    if (xScaleRecursively) {\n      nf.paramX.numberscalevalue.push(1);\n      nf.paramX.numberscaleunit.unshift(nf.paramX.defaultnumberscale);\n    }\n\n    nf.paramScale = {\n      cacheStore: [],\n      formatnumber: (0, _lib.pluck)(chartAttrs.tickformatnumber, baseConf.formatnumber),\n      formatnumberscale: (0, _lib.pluck)(chartAttrs.tickformatnumberscale, baseConf.formatnumberscale),\n      forcenumberscale: (0, _lib.pluck)(chartAttrs.tickforcenumberscale, baseConf.forcenumberscale),\n      defaultnumberscale: (0, _lib.getFirstValue)(chartAttrs.tickdefaultnumberscale, baseConf.defaultnumberscale),\n      numberscaleunit: (0, _lib.pluck)(ticknumberscaleunit, baseConf.numberscaleunit.concat()),\n      numberscalevalue: (0, _lib.pluck)(ticknumberscalevalue, baseConf.numberscalevalue.concat()),\n      numberprefix: (0, _lib.parseUnsafeString)((0, _lib.pluck)(chartAttrs.ticknumberprefix, baseConf.numberprefix)),\n      numbersuffix: (0, _lib.parseUnsafeString)((0, _lib.pluck)(chartAttrs.ticknumbersuffix, baseConf.numbersuffix)),\n      decimalprecision: parseInt((0, _lib.pluck)(chartAttrs.tickvaluedecimals, baseConf.decimalprecision, TWOSTRING), 10),\n      forcedecimals: (0, _lib.pluck)(chartAttrs.forcetickvaluedecimals, baseConf.forcedecimals, 0),\n      decimalseparator: baseConf.decimalseparator,\n      thousandseparator: baseConf.thousandseparator,\n      thousandseparatorposition: baseConf.thousandseparatorposition.concat(),\n      indecimalseparator: baseConf.indecimalseparator,\n      inthousandseparator: baseConf.inthousandseparator,\n      scalerecursively: scaleRecursively,\n      maxscalerecursion: maxScaleRecursion,\n      scaleseparator: scaleSeparator\n    };\n\n    if (scaleRecursively) {\n      nf.paramScale.numberscalevalue.push(1);\n      nf.paramScale.numberscaleunit.unshift(nf.paramScale.defaultnumberscale);\n    }\n\n    nf.timeConf = {\n      inputDateFormat: (0, _lib.pluck)(chartAttrs.inputdateformat, chartAttrs.dateformat, \"mm/dd/yyyy\"),\n      outputDateFormat: (0, _lib.pluck)(chartAttrs.outputdateformat, chartAttrs.inputdateformat, chartAttrs.dateformat, \"mm/dd/yyyy\"),\n      days: [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\", \"Thursday\", \"Friday\", \"Saturday\"],\n      months: [\"January\", \"February\", \"March\", \"April\", \"May\", \"June\", \"July\", \"August\", \"September\", \"October\", \"November\", \"December\"],\n      daySuffix: [\"\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"st\", \"nd\", \"rd\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"th\", \"st\"]\n    };\n    nf.cleaneValueCacheStore = {};\n    nf.percentStrCacheStore = {};\n  };\n\n  _proto.dispose = function dispose() {\n    var nf = this;\n\n    if (nf.Y) {\n      delete nf.Y;\n    }\n\n    if (nf.cleaneValueCacheStore) {\n      delete nf.cleaneValueCacheStore;\n    }\n\n    if (nf.percentStrCacheStore) {\n      delete nf.percentStrCacheStore;\n    }\n\n    if (nf.paramLabels) {\n      delete nf.paramLabels;\n    }\n\n    if (nf.param1) {\n      delete nf.param1;\n    }\n\n    if (nf.param2) {\n      delete nf.param2;\n    }\n\n    if (nf.paramLabels2) {\n      delete nf.paramLabels2;\n    }\n\n    if (nf.csConf) {\n      delete nf.csConf;\n    }\n\n    if (nf.chart) {\n      delete nf.chart;\n    }\n\n    if (nf.baseConf) {\n      delete nf.baseConf;\n    }\n\n    if (nf.timeConf) {\n      delete nf.timeConf;\n    }\n\n    if (nf.paramX) {\n      delete nf.paramX;\n    }\n\n    if (nf.paramScale) {\n      delete nf.paramScale;\n    }\n  };\n\n  _proto.parseMLAxisConf = function parseMLAxisConf(axisObj, _index) {\n    var baseConf = this.baseConf,\n        csConf = this.csConf,\n        scaleRecursively = (0, _lib.pluckNumber)(axisObj.scalerecursively, baseConf.scalerecursively),\n        maxScaleRecursion = (0, _lib.pluckNumber)(axisObj.maxscalerecursion, baseConf.maxscalerecursion),\n        scaleSeparator = (0, _lib.getValidValue)(axisObj.scaleseparator, baseConf.scaleseparator),\n        paramLabels,\n        numberscaleunit,\n        numberscalevalue,\n        param,\n        thousandseparatorposition,\n        length,\n        value,\n        lastValue,\n        index = (0, _lib.pluckNumber)(_index, this.Y.length);\n\n    if ((0, _lib.getValidValue)(axisObj.numberscaleunit)) {\n      numberscaleunit = axisObj.numberscaleunit.split(COMMASTRING);\n    }\n\n    if ((0, _lib.getValidValue)(axisObj.numberscalevalue)) {\n      numberscalevalue = axisObj.numberscalevalue.split(COMMASTRING);\n    }\n\n    if (!maxScaleRecursion) {\n      maxScaleRecursion = -1;\n    }\n\n    if ((0, _lib.getValidValue)(axisObj.thousandseparatorposition)) {\n      thousandseparatorposition = axisObj.thousandseparatorposition.split(COMMASTRING);\n      length = thousandseparatorposition.length;\n      lastValue = numberFormatDefaults.thousandseparatorposition[0];\n\n      while (length--) {\n        value = (0, _lib.pluckNumber)(mathAbs(thousandseparatorposition[length]));\n\n        if (!value) {\n          value = lastValue;\n        } else {\n          lastValue = value;\n        }\n\n        thousandseparatorposition[length] = value;\n      }\n    }\n\n    paramLabels = {\n      cacheStore: [],\n      formatnumber: (0, _lib.pluck)(axisObj.formatnumber, baseConf.formatnumber),\n      formatnumberscale: (0, _lib.pluck)(axisObj.formatnumberscale, baseConf.formatnumberscale),\n      forcenumberscale: (0, _lib.pluck)(axisObj.forcenumberscale, baseConf.forcenumberscale),\n      defaultnumberscale: (0, _lib.getFirstValue)(axisObj.defaultnumberscale, baseConf.defaultnumberscale),\n      numberscaleunit: (0, _lib.pluck)(numberscaleunit, baseConf.numberscaleunit).concat(),\n      numberscalevalue: (0, _lib.pluck)(numberscalevalue, baseConf.numberscalevalue).concat(),\n      numberprefix: (0, _lib.parseUnsafeString)((0, _lib.getFirstValue)(axisObj.numberprefix, baseConf.numberprefix)),\n      numbersuffix: (0, _lib.parseUnsafeString)((0, _lib.getFirstValue)(axisObj.numbersuffix, baseConf.numbersuffix)),\n      forcedecimals: (0, _lib.pluck)(axisObj.forcedecimals, baseConf.forcedecimals),\n      decimalprecision: parseInt(axisObj.decimals === AUTOSTRING ? csConf.decimalprecision : (0, _lib.pluck)(axisObj.decimals, baseConf.decimalprecision), 10),\n      decimalseparator: (0, _lib.pluck)(axisObj.decimalseparator, baseConf.decimalseparator),\n      thousandseparator: (0, _lib.pluck)(axisObj.thousandseparator, baseConf.thousandseparator),\n      thousandseparatorposition: (0, _lib.pluck)(thousandseparatorposition, baseConf.thousandseparatorposition),\n      indecimalseparator: (0, _lib.parseUnsafeString)((0, _lib.getFirstValue)(axisObj.indecimalseparator, baseConf.indecimalseparator)),\n      inthousandseparator: (0, _lib.parseUnsafeString)((0, _lib.getFirstValue)(axisObj.inthousandseparator, baseConf.inthousandseparator)),\n      scalerecursively: scaleRecursively,\n      maxscalerecursion: maxScaleRecursion,\n      scaleseparator: scaleSeparator\n    };\n\n    if (!this.useScaleRecursively || (paramLabels.numberscalevalue && paramLabels.numberscalevalue.length) !== (paramLabels.numberscaleunit && paramLabels.numberscaleunit.length)) {\n      paramLabels.scalerecursively = scaleRecursively = 0;\n    }\n\n    param = {\n      cacheStore: [],\n      formatnumber: paramLabels.formatnumber,\n      formatnumberscale: paramLabels.formatnumberscale,\n      forcenumberscale: paramLabels.forcenumberscale,\n      defaultnumberscale: paramLabels.defaultnumberscale,\n      numberscaleunit: paramLabels.numberscaleunit.concat(),\n      numberscalevalue: paramLabels.numberscalevalue.concat(),\n      numberprefix: paramLabels.numberprefix,\n      numbersuffix: paramLabels.numbersuffix,\n      decimalprecision: parseInt((0, _lib.pluck)(axisObj.yaxisvaluedecimals, paramLabels.decimalprecision, 2), 10),\n      forcedecimals: (0, _lib.pluck)(axisObj.forceyaxisvaluedecimals, paramLabels.forcedecimals),\n      decimalseparator: paramLabels.decimalseparator,\n      thousandseparator: paramLabels.thousandseparator,\n      thousandseparatorposition: paramLabels.thousandseparatorposition.concat(),\n      indecimalseparator: paramLabels.indecimalseparator,\n      inthousandseparator: paramLabels.inthousandseparator,\n      scalerecursively: scaleRecursively,\n      maxscalerecursion: maxScaleRecursion,\n      scaleseparator: scaleSeparator\n    };\n\n    if (scaleRecursively) {\n      paramLabels.numberscalevalue.push(1);\n      paramLabels.numberscaleunit.unshift(paramLabels.defaultnumberscale);\n      param.numberscalevalue.push(1);\n      param.numberscaleunit.unshift(param.defaultnumberscale);\n    }\n\n    this.Y[index] = {\n      dataLabelConf: paramLabels,\n      yAxisLabelConf: param\n    };\n  };\n\n  _proto.percentValue = function percentValue(num) {\n    var rtn = this.percentStrCacheStore[num],\n        precision;\n\n    if (rtn === UNDEF) {\n      precision = isNaN(this.paramLabels.decimalprecision) ? \"2\" : this.paramLabels.decimalprecision;\n      rtn = this.percentStrCacheStore[num] = formatCommas(formatDecimals(num, precision, this.paramLabels.forcedecimals), this.paramLabels.decimalseparator, this.paramLabels.thousandseparator, this.paramLabels.thousandseparatorposition) + \"%\";\n    }\n\n    return rtn;\n  };\n\n  _proto.yAxisPercentValue = function yAxisPercentValue(num, axisIndex) {\n    window.th = this;\n    var formatterConf = this.Y[axisIndex] || (axisIndex ? this.Y[1] : this.Y[0]),\n        rtn,\n        precision;\n    formatterConf = formatterConf && formatterConf.yAxisLabelConf || this.baseConf;\n    rtn = formatterConf.cacheStore[num];\n\n    if (rtn === UNDEF) {\n      precision = isNaN(formatterConf.decimalprecision) ? \"2\" : formatterConf.decimalprecision;\n      rtn = formatterConf.cacheStore[num] = formatCommas(formatDecimals(num, precision, formatterConf.forcedecimals), formatterConf.decimalseparator, formatterConf.thousandseparator, formatterConf.thousandseparatorposition) + \"%\";\n    }\n\n    return rtn;\n  };\n\n  _proto.getCleanValue = function getCleanValue(numStr, abs) {\n    var rtn = this.cleaneValueCacheStore[numStr],\n        num;\n\n    if (rtn === UNDEF || abs) {\n      num = convertNumberSeps(numStr, this.baseConf);\n      this.cleaneValueCacheStore[numStr] = rtn = isNaN(num) ? null : abs ? mathAbs(num) : num;\n    }\n\n    return rtn;\n  };\n\n  _proto.dataLabels = function dataLabels(num, axisIndex) {\n    var formatterConf = this.Y[axisIndex] || (axisIndex ? this.Y[1] : this.Y[0]),\n        rtn;\n    formatterConf = formatterConf && formatterConf.dataLabelConf || this.baseConf;\n    rtn = formatterConf.cacheStore[num];\n\n    if (rtn === UNDEF) {\n      rtn = formatterConf.cacheStore[num] = formatNumber(num, formatterConf);\n    }\n\n    return rtn;\n  };\n\n  _proto.formatValue = function formatValue(num) {\n    var formatterConf = this.baseConf,\n        rtn;\n    rtn = formatterConf.cacheStore[num];\n\n    if (rtn === UNDEF) {\n      rtn = formatterConf.cacheStore[num] = formatNumber(num, formatterConf);\n    }\n\n    return rtn;\n  };\n\n  _proto.yAxis = function yAxis(num, axisIndex) {\n    var formatterConf = this.Y[axisIndex] || (axisIndex ? this.Y[1] : this.Y[0]),\n        rtn;\n    formatterConf = formatterConf && formatterConf.yAxisLabelConf || this.baseConf;\n    rtn = formatterConf.cacheStore[num];\n\n    if (rtn === UNDEF) {\n      rtn = formatterConf.cacheStore[num] = formatNumber(num, formatterConf, true);\n    }\n\n    return rtn;\n  };\n\n  _proto.xAxis = function xAxis(num) {\n    var rtn = this.paramX.cacheStore[num];\n\n    if (rtn === UNDEF) {\n      rtn = this.paramX.cacheStore[num] = formatNumber(num, this.paramX, true);\n    }\n\n    return rtn;\n  };\n\n  _proto.sYAxis = function sYAxis(num) {\n    var formatterConf = this.Y[1],\n        rtn;\n    formatterConf = formatterConf && formatterConf.yAxisLabelConf || this.baseConf;\n    rtn = formatterConf.cacheStore[num];\n\n    if (rtn === UNDEF) {\n      rtn = formatterConf.cacheStore[num] = formatNumber(num, formatterConf);\n    }\n\n    return rtn;\n  };\n\n  _proto.scale = function scale(num) {\n    var rtn = this.paramScale.cacheStore[num];\n\n    if (rtn === UNDEF) {\n      rtn = this.paramScale.cacheStore[num] = formatNumber(num, this.paramScale);\n    }\n\n    return rtn;\n  };\n\n  _proto.legendValue = function legendValue(num) {\n    var rtn = this.paramLegend.cacheStore[num];\n\n    if (rtn === UNDEF) {\n      rtn = this.paramLegend.cacheStore[num] = formatNumber(num, this.paramLegend);\n    }\n\n    return rtn;\n  };\n\n  _proto.legendPercentValue = function legendPercentValue(num) {\n    var rtn = this.percentStrCacheStore[num],\n        paramLegend = this.paramLegend,\n        precision;\n\n    if (rtn === UNDEF) {\n      precision = isNaN(paramLegend.decimalprecision) ? \"2\" : paramLegend.decimalprecision;\n      rtn = this.percentStrCacheStore[num] = formatCommas(formatDecimals(num, precision, paramLegend.forcedecimals), paramLegend.decimalseparator, paramLegend.thousandseparator, paramLegend.thousandseparatorposition) + \"%\";\n    }\n\n    return rtn;\n  };\n\n  _proto.getDateValue = function getDateValue(_date) {\n    var dataObj,\n        hour,\n        min,\n        sec,\n        ms,\n        date = _date;\n\n    if (date && !/\\//.test(this.timeConf.inputDateFormat)) {\n      date = date.replace(new RegExp(this.timeConf.inputDateFormat.replace(/[a-z]/gi, BLANK).slice(0, 1), \"g\"), \"/\");\n    }\n\n    date = /^dd/.test(this.timeConf.inputDateFormat) && date && date.replace(/(\\d{1,2})\\/(\\d{1,2})\\/(\\d{2,4})/, \"$2/$1/$3\") || date;\n\n    if (/\\s24:/.test(date)) {\n      date = date.replace(/\\s24:/, \" 00:\");\n      dataObj = new Date(date);\n      dataObj.setDate(dataObj.getDate() + 1);\n    } else {\n      dataObj = new Date(date);\n    }\n\n    ms = dataObj.getTime();\n\n    if (!ms && date && /\\:/.test(date)) {\n      date = date.split(\":\");\n      hour = (0, _lib.pluckNumber)(date[0], 0);\n      min = (0, _lib.pluckNumber)(date[1], 0);\n      sec = (0, _lib.pluckNumber)(date[2], 0);\n      hour = hour > 23 ? hour === 24 && min === 0 && sec === 0 ? hour : 23 : hour;\n      min = min > 59 ? 59 : min;\n      sec = sec > 59 ? 59 : sec;\n      dataObj = new Date();\n      dataObj.setHours(hour);\n      dataObj.setMinutes(min);\n      dataObj.setSeconds(sec);\n      ms = dataObj.getTime();\n    }\n\n    return {\n      ms: ms,\n      date: dataObj\n    };\n  };\n\n  _proto.getFormattedDate = function getFormattedDate(date, format) {\n    var D = typeof date === \"object\" && date || new Date(date),\n        timeConf = this.timeConf,\n        output = (0, _lib.pluck)(format, timeConf.outputDateFormat),\n        year = D.getFullYear(),\n        month = D.getMonth(),\n        day = D.getDate(),\n        nday = D.getDay(),\n        min = D.getMinutes(),\n        sec = D.getSeconds(),\n        hours = D.getHours();\n    min = min > 9 ? BLANK + min : ZEROSTRING + min;\n    sec = sec > 9 ? BLANK + sec : ZEROSTRING + sec;\n    hours = hours > 9 ? BLANK + hours : ZEROSTRING + hours;\n    output.match(/dnl/) && (output = output.replace(/dnl/gi, timeConf.days[nday]));\n    output.match(/dns/) && (output = output.replace(/dns/gi, timeConf.days[nday] && timeConf.days[nday].substr(0, 3)));\n    output.match(/dd/) && (output = output.replace(/dd/gi, day));\n    output.match(/mnl/) && (output = output.replace(/mnl/gi, timeConf.months[month]));\n    output.match(/mns/) && (output = output.replace(/mns/gi, timeConf.months[month] && timeConf.months[month].substr(0, 3)));\n    output.match(/mm/) && (output = output.replace(/mm/gi, month + 1));\n    output.match(/yyyy/) && (output = output.replace(/yyyy/gi, year));\n    output.match(/yy/) && (output = output.replace(/yy/gi, (year % 1e3 % 100 + \"\").replace(/^(\\d)$/, \"0$1\")));\n    output.match(/hh12/) && (output = output.replace(/hh12/gi, hours % 12 || 12));\n    output.match(/hh/) && (output = output.replace(/hh/gi, hours));\n    output.match(/mn/) && (output = output.replace(/mn/gi, min));\n    output.match(/ss/) && (output = output.replace(/ss/gi, sec));\n    output.match(/ampm/) && (output = output.replace(/ampm/gi, hours < 12 ? \"AM\" : \"PM\"));\n    output.match(/ds/) && (output = output.replace(/ds/gi, timeConf.daySuffix[day]));\n    return output;\n  };\n\n  return NumberFormatter;\n}();\n\nformatNumber = function formatNumber(_num, attributes, isAxisValue) {\n  var strNum,\n      strScale,\n      numList,\n      scaleList,\n      upperIndex,\n      tempNum,\n      tempStr,\n      i,\n      valueArr,\n      decimalPlaceLen,\n      objNum,\n      num = _num;\n\n  if (num === null) {\n    return;\n  }\n\n  num = Number(num);\n  strNum = num + BLANK;\n\n  if (Number(attributes.formatnumberscale) === 1) {\n    strScale = attributes.defaultnumberscale;\n  } else {\n    strScale = BLANK;\n  }\n\n  valueArr = strNum.split(DECIMALSTRING)[1];\n  decimalPlaceLen = valueArr ? valueArr.length : attributes.forcedecimals ? TWOSTRING : BLANK;\n\n  if (Number(attributes.formatnumberscale) === 1) {\n    objNum = formatNumberScale(num, attributes.defaultnumberscale, attributes.numberscalevalue, attributes.numberscaleunit, attributes.scalerecursively, attributes.forcenumberscale);\n    strNum = objNum.value;\n    num = objNum.value;\n    strScale = objNum.scale;\n  }\n\n  if (attributes.scalerecursively && attributes.formatnumberscale !== 0 && attributes.formatnumberscale !== \"0\") {\n    numList = objNum.value;\n    scaleList = objNum.scale;\n    upperIndex = Number(attributes.maxscalerecursion) === -1 ? numList.length : Math.min(numList.length, attributes.maxscalerecursion);\n\n    if (Number(attributes.formatnumber) === 1) {\n      strNum = _lib.BLANKSTRING;\n\n      for (i = 0; i < upperIndex; i++) {\n        tempNum = i === 0 ? numList[i] : Math.abs(numList[i]);\n        tempStr = tempNum + BLANK;\n\n        if (i === upperIndex - 1) {\n          tempStr = formatDecimals(tempNum, (0, _lib.pluck)(attributes.decimalprecision, decimalPlaceLen), attributes.forcedecimals);\n        }\n\n        strNum = strNum + formatCommas(tempStr, attributes.decimalseparator, attributes.thousandseparator, attributes.thousandseparatorposition) + scaleList[i] + (i < upperIndex - 1 ? attributes.scaleseparator : _lib.BLANKSTRING);\n      }\n    } else {\n      strNum = _lib.BLANKSTRING;\n\n      for (i = 0; i < upperIndex; i++) {\n        strNum = strNum + (i === 0 ? numList[i] : Math.abs(numList[i]) + BLANK) + scaleList[i] + (i < upperIndex - 1 ? attributes.scaleseparator : \"\");\n      }\n    }\n\n    strNum = (attributes.numberprefix || BLANK) + strNum + (attributes.numbersuffix || BLANK);\n  } else {\n    if (Number(attributes.formatnumber) === 1) {\n      strNum = formatDecimals(num, (0, _lib.pluck)(attributes.decimalprecision, decimalPlaceLen), attributes.forcedecimals);\n      strNum = formatCommas(strNum, attributes.decimalseparator, attributes.thousandseparator, attributes.thousandseparatorposition, isAxisValue);\n    }\n\n    strNum = (attributes.numberprefix || BLANK) + strNum + strScale + (attributes.numbersuffix || BLANK);\n  }\n\n  return strNum;\n};\n\nformatNumberScale = function formatNumberScale(_intNum, defaultNumberScale, numScaleValues, numScaleUnits, scaleRecursively, _forceNumberScale) {\n  var objRtn = {},\n      strScale = defaultNumberScale,\n      recLowerScaleValue,\n      recTempVal,\n      i = 0,\n      numScaleValue,\n      THOUSAND = 1e3,\n      arrValues = [],\n      arrScales = [],\n      carry,\n      intNum = _intNum,\n      forceNumberScale = (0, _lib.pluckNumber)(_forceNumberScale) || 0;\n\n  if (scaleRecursively) {\n    recLowerScaleValue = (0, _lib.pluckNumber)(numScaleValues[0]) || THOUSAND;\n\n    for (i = 0; i < numScaleValues.length; i++) {\n      numScaleValue = (0, _lib.pluckNumber)(numScaleValues[i]) || THOUSAND;\n\n      if (Math.abs(Number(intNum)) >= numScaleValue && i < numScaleValues.length - 1) {\n        carry = intNum % numScaleValue;\n        intNum = (intNum - carry) / numScaleValue;\n\n        if (i === 0 && carry !== 0 && numScaleUnits[i] === BLANK && forceNumberScale) {\n          arrValues.push(carry / recLowerScaleValue);\n          arrScales.push(numScaleUnits[1] || BLANK);\n        } else if (carry !== 0) {\n          if (i === 1 && defaultNumberScale === BLANK && forceNumberScale) {\n            recTempVal = carry + (arrValues.length ? arrValues.pop() : 0);\n            arrScales.pop();\n            arrValues.push(recTempVal);\n          } else {\n            arrValues.push(carry);\n          }\n\n          arrScales.push(numScaleUnits[i]);\n        }\n      } else {\n        if (i === 0 && defaultNumberScale === BLANK && forceNumberScale) {\n          intNum = Number(intNum) / recLowerScaleValue;\n          arrValues.push(intNum);\n          arrScales.push(numScaleUnits[1] || BLANK);\n        } else {\n          if (i === 1 && defaultNumberScale === BLANK && forceNumberScale) {\n            recTempVal = intNum + (arrValues.length ? arrValues.pop() : 0);\n            arrScales.pop();\n            arrValues.push(recTempVal);\n          } else {\n            arrValues.push(intNum);\n          }\n\n          arrScales.push(numScaleUnits[i]);\n        }\n\n        break;\n      }\n    }\n\n    arrValues.reverse();\n    arrScales.reverse();\n    objRtn.value = arrValues;\n    objRtn.scale = arrScales;\n  } else {\n    if (numScaleValues.length === numScaleUnits.length) {\n      for (i = 0; i < numScaleValues.length; i++) {\n        numScaleValue = (0, _lib.pluckNumber)(numScaleValues[i]) || THOUSAND;\n\n        if (numScaleValue && Math.abs(Number(intNum)) >= numScaleValue) {\n          strScale = numScaleUnits[i] || BLANK;\n          intNum = Number(intNum) / numScaleValue;\n        } else {\n          if (i === 0 && defaultNumberScale === BLANK && forceNumberScale) {\n            strScale = numScaleUnits[0] || BLANK;\n            intNum = Number(intNum) / numScaleValue;\n          }\n\n          break;\n        }\n      }\n    }\n\n    objRtn.value = intNum;\n    objRtn.scale = strScale;\n  }\n\n  return objRtn;\n};\n\nformatDecimals = function formatDecimals(_intNum, _decimalPrecision, forceDecimals) {\n  var tenToPower,\n      strRounded,\n      parts,\n      paddingNeeded,\n      i,\n      intNum = _intNum,\n      decimalPrecision = _decimalPrecision;\n\n  if (decimalPrecision <= 0) {\n    return mathRound(intNum) + BLANK;\n  }\n\n  if (isNaN(decimalPrecision)) {\n    intNum = intNum + BLANK;\n\n    if (intNum.length > 12 && intNum.indexOf(DECIMALSTRING) !== -1) {\n      decimalPrecision = 12 - intNum.split(DECIMALSTRING)[0].length;\n      tenToPower = mathPow(10, decimalPrecision);\n      strRounded = mathRound(intNum * tenToPower) / tenToPower + BLANK;\n      intNum = strRounded;\n    }\n\n    return intNum;\n  }\n\n  tenToPower = mathPow(10, decimalPrecision);\n  strRounded = mathRound(intNum * tenToPower) / tenToPower + BLANK;\n\n  if (Number(forceDecimals) === 1) {\n    if (strRounded.indexOf(DECIMALSTRING) === -1) {\n      strRounded += \".0\";\n    }\n\n    parts = strRounded.split(DECIMALSTRING);\n    paddingNeeded = decimalPrecision - parts[1].length;\n\n    for (i = 1; i <= paddingNeeded; i++) {\n      strRounded += ZEROSTRING;\n    }\n  }\n\n  return strRounded;\n};\n\nformatCommas = function formatCommas(strNum, decimalseparator, thousandseparator, thSepPos, isAxisValue) {\n  var intNum = Number(strNum),\n      strDecimalPart = BLANK,\n      boolIsNegative = false,\n      strNumberFloor = BLANK,\n      formattedNumber = BLANK,\n      startPos = 0,\n      endPos = 0,\n      minExponentialValue = 1e15,\n      fractionDigits,\n      strNumberLen,\n      sepPosLen,\n      sepDigit;\n\n  if (isNaN(intNum)) {\n    return BLANK;\n  }\n\n  if (intNum > minExponentialValue) {\n    if (isAxisValue) {\n      fractionDigits = 1;\n    } else {\n      fractionDigits = 14;\n    }\n\n    return intNum.toExponential(fractionDigits);\n  }\n\n  startPos = 0;\n  endPos = strNum.length;\n\n  if (strNum.indexOf(DECIMALSTRING) !== -1) {\n    strDecimalPart = strNum.substring(strNum.indexOf(DECIMALSTRING) + 1, strNum.length);\n    endPos = strNum.indexOf(DECIMALSTRING);\n  }\n\n  if (intNum < 0) {\n    boolIsNegative = true;\n    startPos = 1;\n  }\n\n  strNumberFloor = strNum.substring(startPos, endPos);\n  strNumberLen = strNumberFloor.length;\n  sepPosLen = thSepPos.length - 1;\n  sepDigit = thSepPos[sepPosLen];\n\n  if (strNumberLen < sepDigit) {\n    formattedNumber = strNumberFloor;\n  } else {\n    while (strNumberLen >= sepDigit) {\n      formattedNumber = (strNumberLen - sepDigit ? thousandseparator : BLANK) + strNumberFloor.substr(strNumberLen - sepDigit, sepDigit) + formattedNumber;\n      strNumberLen -= sepDigit;\n      sepDigit = (sepPosLen -= 1) <= 0 ? thSepPos[0] : thSepPos[sepPosLen];\n\n      if (strNumberLen < sepDigit) {\n        formattedNumber = strNumberFloor.substring(strNumberLen, 0) + formattedNumber;\n      }\n    }\n  }\n\n  if (strDecimalPart !== BLANK) {\n    formattedNumber = formattedNumber + decimalseparator + strDecimalPart;\n  }\n\n  if (boolIsNegative === true) {\n    formattedNumber = MINUSSTR + formattedNumber;\n  }\n\n  return formattedNumber;\n};\n\nconvertNumberSeps = function convertNumberSeps(_num, conf) {\n  var num = _num;\n  num = num + BLANK;\n\n  if (conf._REGinthousandseparator) {\n    num = num.replace(conf._REGinthousandseparator, BLANK);\n  }\n\n  if (conf._REGindecimalseparator) {\n    num = num.replace(conf._REGindecimalseparator, DECIMALSTRING);\n  }\n\n  num = parseFloat(num);\n  return isFinite(num) ? num : NaN;\n};\n\nvar _default = NumberFormatter;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/core/src/number-formatter/index.js"],"names":["exports","__esModule","default","_lib","require","UNDEF","mathAbs","Math","abs","mathPow","pow","mathRound","round","ONESTRING","BLANK","ZEROSTRING","DECIMALSTRING","COMMASTRING","MINUSSTR","TWOSTRING","AUTOSTRING","formatNumber","formatNumberScale","convertNumberSeps","formatDecimals","formatCommas","numberFormatDefaults","formatnumber","formatnumberscale","forcenumberscale","defaultnumberscale","numberscaleunit","numberscalevalue","numberprefix","numbersuffix","decimals","forcedecimals","yaxisvaluedecimals","decimalseparator","thousandseparator","thousandseparatorposition","indecimalseparator","inthousandseparator","sformatnumber","sformatnumberscale","sforcenumberscale","sdefaultnumberscale","snumberscaleunit","snumberscalevalue","snumberprefix","snumbersuffix","sdecimals","sforcedecimals","syaxisvaluedecimals","xFormatNumber","xFormatNumberScale","xforcenumberscale","xDefaultNumberScale","xNumberScaleUnit","xNumberScaleValue","xNumberPrefix","xNumberSuffix","numberFormatOverrides","mscombidy2d","NumberFormatter","chart","customAttrs","nf","chartName","getName","csConfigBuffer","csConf","extend2","overrideConf","cleaneValueCacheStore","percentStrCacheStore","linkedItems","configure","_proto","prototype","setDefaults","chartAttrs","getFromEnv","chartConf","config","isMultyAxis","xnumberscaleunit","ticknumberscaleunit","ynumberscaleunit","xnumberscalevalue","ticknumberscalevalue","ynumberscalevalue","paramLabels","paramLabels2","param1","param2","baseConf","length","value","lastValue","scaleRecursively","sScaleRecursively","xScaleRecursively","maxScaleRecursion","sMaxScaleRecursion","xMaxScaleRecursion","scaleSeparator","sScaleSeparator","xScaleSeparator","useScaleRecursively","getValidValue","split","parseInt","pluckNumber","scalerecursively","sscalerecursively","xscalerecursively","maxscalerecursion","smaxscalerecursion","xmaxscalerecursion","scaleseparator","sscaleseparator","xscaleseparator","cacheStore","pluck","getFirstValue","concat","parseUnsafeString","decimalprecision","_REGinthousandseparator","RegExp","regescape","_REGindecimalseparator","Y","forceyaxisvaluedecimals","forcesyaxisvaluedecimals","test","yformatnumber","yformatnumberscale","yforcenumberscale","ydefaultnumberscale","ynumberprefix","ynumbersuffix","push","unshift","yAxisLabelConf","dataLabelConf","paramX","xformatnumber","xformatnumberscale","xdefaultnumberscale","xnumberprefix","xnumbersuffix","xaxisvaluedecimals","xaxisvaluesdecimals","forcexaxisvaluedecimals","paramLegend","legendvaluedecimals","legendvalueforcedecimals","legendvalueformatnumberscale","legendvalueforcenumberscale","legendvalueformatnumber","paramScale","tickformatnumber","tickformatnumberscale","tickforcenumberscale","tickdefaultnumberscale","ticknumberprefix","ticknumbersuffix","tickvaluedecimals","forcetickvaluedecimals","timeConf","inputDateFormat","inputdateformat","dateformat","outputDateFormat","outputdateformat","days","months","daySuffix","dispose","parseMLAxisConf","axisObj","_index","param","index","percentValue","num","rtn","precision","isNaN","yAxisPercentValue","axisIndex","window","th","formatterConf","getCleanValue","numStr","dataLabels","formatValue","yAxis","xAxis","sYAxis","scale","legendValue","legendPercentValue","getDateValue","_date","dataObj","hour","min","sec","ms","date","replace","slice","Date","setDate","getDate","getTime","setHours","setMinutes","setSeconds","getFormattedDate","format","D","output","year","getFullYear","month","getMonth","day","nday","getDay","getMinutes","getSeconds","hours","getHours","match","substr","_num","attributes","isAxisValue","strNum","strScale","numList","scaleList","upperIndex","tempNum","tempStr","i","valueArr","decimalPlaceLen","objNum","Number","BLANKSTRING","_intNum","defaultNumberScale","numScaleValues","numScaleUnits","_forceNumberScale","objRtn","recLowerScaleValue","recTempVal","numScaleValue","THOUSAND","arrValues","arrScales","carry","intNum","forceNumberScale","pop","reverse","_decimalPrecision","forceDecimals","tenToPower","strRounded","parts","paddingNeeded","decimalPrecision","indexOf","thSepPos","strDecimalPart","boolIsNegative","strNumberFloor","formattedNumber","startPos","endPos","minExponentialValue","fractionDigits","strNumberLen","sepPosLen","sepDigit","toExponential","substring","conf","parseFloat","isFinite","NaN","_default"],"mappings":"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","sourcesContent":["\"use strict\";exports.__esModule=true;exports.default=void 0;var _lib=require(\"../lib\");var UNDEF,mathAbs=Math.abs,mathPow=Math.pow,mathRound=Math.round,ONESTRING=\"1\",BLANK=\"\",ZEROSTRING=\"0\",DECIMALSTRING=\".\",COMMASTRING=\",\",MINUSSTR=\"-\",TWOSTRING=\"2\",AUTOSTRING=\"auto\",formatNumber,formatNumberScale,convertNumberSeps,formatDecimals,formatCommas,numberFormatDefaults={formatnumber:ONESTRING,formatnumberscale:ONESTRING,forcenumberscale:ZEROSTRING,defaultnumberscale:BLANK,numberscaleunit:[\"K\",\"M\"],numberscalevalue:[1e3,1e3],numberprefix:BLANK,numbersuffix:BLANK,decimals:BLANK,forcedecimals:ZEROSTRING,yaxisvaluedecimals:TWOSTRING,decimalseparator:DECIMALSTRING,thousandseparator:COMMASTRING,thousandseparatorposition:[3],indecimalseparator:BLANK,inthousandseparator:BLANK,sformatnumber:ONESTRING,sformatnumberscale:ZEROSTRING,sforcenumberscale:ZEROSTRING,sdefaultnumberscale:BLANK,snumberscaleunit:[\"K\",\"M\"],snumberscalevalue:[1e3,1e3],snumberprefix:BLANK,snumbersuffix:BLANK,sdecimals:TWOSTRING,sforcedecimals:ZEROSTRING,syaxisvaluedecimals:TWOSTRING,xFormatNumber:ZEROSTRING,xFormatNumberScale:ZEROSTRING,xforcenumberscale:ZEROSTRING,xDefaultNumberScale:BLANK,xNumberScaleUnit:[\"K\",\"M\"],xNumberScaleValue:[1e3,1e3],xNumberPrefix:BLANK,xNumberSuffix:BLANK},numberFormatOverrides={mscombidy2d:{formatnumberscale:ONESTRING}};var NumberFormatter=function(){function NumberFormatter(chart,customAttrs){var nf=this,chartName=chart.getName&&chart.getName(),csConfigBuffer,csConf=nf.csConf=(0,_lib.extend2)({},numberFormatDefaults),overrideConf=numberFormatOverrides[chartName];nf.cleaneValueCacheStore={};nf.percentStrCacheStore={};if(overrideConf){csConfigBuffer=(0,_lib.extend2)(csConf,overrideConf);csConf=csConfigBuffer}this.linkedItems={chart:chart};nf.configure(customAttrs)}var _proto=NumberFormatter.prototype;_proto.setDefaults=function setDefaults(){var chart=this.linkedItems.chart,chartName=chart.getName&&chart.getName(),csConf=this.csConf=(0,_lib.extend2)({},numberFormatDefaults),overrideConf=numberFormatOverrides[chartName];if(overrideConf){(0,_lib.extend2)(csConf,overrideConf)}};_proto.configure=function configure(customAttrs){var nf=this,chart=nf.linkedItems.chart,chartAttrs=customAttrs||chart.getFromEnv(\"chart-attrib\"),chartName=chart.getName&&chart.getName(),chartConf=chart.config,csConf=nf.csConf,isMultyAxis,numberscaleunit,snumberscaleunit,xnumberscaleunit,ticknumberscaleunit,ynumberscaleunit,numberscalevalue,xnumberscalevalue,ticknumberscalevalue,ynumberscalevalue,thousandseparatorposition,snumberscalevalue,paramLabels,paramLabels2,param1,param2,baseConf,length,value,lastValue,scaleRecursively,sScaleRecursively,xScaleRecursively,maxScaleRecursion,sMaxScaleRecursion,xMaxScaleRecursion,scaleSeparator,sScaleSeparator,xScaleSeparator;if(!chartConf){chartConf=chart}nf.csConf=csConf;nf.useScaleRecursively=chartConf.useScaleRecursively;if((0,_lib.getValidValue)(chartAttrs.numberscaleunit)){numberscaleunit=chartAttrs.numberscaleunit.split(COMMASTRING)}if(snumberscaleunit=(0,_lib.getValidValue)(chartAttrs.snumberscaleunit,chartAttrs.numberscaleunit)){snumberscaleunit=snumberscaleunit.split(COMMASTRING)}if(xnumberscaleunit=(0,_lib.getValidValue)(chartAttrs.xnumberscaleunit,chartAttrs.numberscaleunit)){xnumberscaleunit=xnumberscaleunit.split(COMMASTRING)}if(ticknumberscaleunit=(0,_lib.getValidValue)(chartAttrs.ticknumberscaleunit,chartAttrs.numberscaleunit)){ticknumberscaleunit=ticknumberscaleunit.split(COMMASTRING)}if(ynumberscaleunit=(0,_lib.getValidValue)(chartAttrs.ynumberscaleunit,chartAttrs.numberscaleunit)){ynumberscaleunit=ynumberscaleunit.split(COMMASTRING)}if((0,_lib.getValidValue)(chartAttrs.numberscalevalue)){numberscalevalue=chartAttrs.numberscalevalue.split(COMMASTRING)}if(snumberscalevalue=(0,_lib.getValidValue)(chartAttrs.snumberscalevalue,chartAttrs.numberscalevalue)){snumberscalevalue=snumberscalevalue.split(COMMASTRING)}if(xnumberscalevalue=(0,_lib.getValidValue)(chartAttrs.xnumberscalevalue,chartAttrs.numberscalevalue)){xnumberscalevalue=xnumberscalevalue.split(COMMASTRING)}if(ticknumberscalevalue=(0,_lib.getValidValue)(chartAttrs.ticknumberscalevalue,chartAttrs.numberscalevalue)){ticknumberscalevalue=ticknumberscalevalue.split(COMMASTRING)}if(ynumberscalevalue=(0,_lib.getValidValue)(chartAttrs.ynumberscalevalue,chartAttrs.numberscalevalue)){ynumberscalevalue=ynumberscalevalue.split(COMMASTRING)}if((0,_lib.getValidValue)(chartAttrs.thousandseparatorposition)){thousandseparatorposition=chartAttrs.thousandseparatorposition.split(COMMASTRING);length=thousandseparatorposition.length;lastValue=numberFormatDefaults.thousandseparatorposition[0];while(length--){value=parseInt(thousandseparatorposition[length],10);if(value<=0){value=lastValue}lastValue=thousandseparatorposition[length]=value}}scaleRecursively=(0,_lib.pluckNumber)(chartAttrs.scalerecursively,0);sScaleRecursively=(0,_lib.pluckNumber)(chartAttrs.sscalerecursively,scaleRecursively);xScaleRecursively=(0,_lib.pluckNumber)(chartAttrs.xscalerecursively,scaleRecursively);maxScaleRecursion=(0,_lib.pluckNumber)(chartAttrs.maxscalerecursion,-1);sMaxScaleRecursion=(0,_lib.pluckNumber)(chartAttrs.smaxscalerecursion,maxScaleRecursion);xMaxScaleRecursion=(0,_lib.pluckNumber)(chartAttrs.xmaxscalerecursion,maxScaleRecursion);scaleSeparator=(0,_lib.getValidValue)(chartAttrs.scaleseparator,\" \");sScaleSeparator=(0,_lib.getValidValue)(chartAttrs.sscaleseparator,scaleSeparator);xScaleSeparator=(0,_lib.getValidValue)(chartAttrs.xscaleseparator,scaleSeparator);if(!maxScaleRecursion){maxScaleRecursion=-1}nf.baseConf=baseConf={cacheStore:[],formatnumber:(0,_lib.pluck)(chartAttrs.formatnumber,csConf.formatnumber),formatnumberscale:(0,_lib.pluck)(chartAttrs.formatnumberscale,chartConf.formatnumberscale,csConf.formatnumberscale),forcenumberscale:(0,_lib.pluck)(chartAttrs.forcenumberscale,csConf.forcenumberscale),defaultnumberscale:(0,_lib.getFirstValue)(chartAttrs.defaultnumberscale,csConf.defaultnumberscale),numberscaleunit:(0,_lib.pluck)(numberscaleunit,csConf.numberscaleunit).concat(),numberscalevalue:(0,_lib.pluck)(numberscalevalue,csConf.numberscalevalue).concat(),numberprefix:(0,_lib.parseUnsafeString)((0,_lib.getFirstValue)(chartAttrs.numberprefix,csConf.numberprefix)),numbersuffix:(0,_lib.parseUnsafeString)((0,_lib.getFirstValue)(chartAttrs.numbersuffix,csConf.numbersuffix)),decimalprecision:parseInt(chartAttrs.decimals===AUTOSTRING?csConf.decimalprecision:(0,_lib.pluck)(chartAttrs.decimals,chartAttrs.decimalprecision,chartConf.decimals,csConf.decimals,chartConf.decimalprecision,csConf.decimalprecision),10),forcedecimals:(0,_lib.pluck)(chartAttrs.forcedecimals,csConf.forcedecimals),decimalseparator:(0,_lib.pluck)(chartAttrs.decimalseparator,csConf.decimalseparator),thousandseparator:(0,_lib.pluck)(chartAttrs.thousandseparator,csConf.thousandseparator),thousandseparatorposition:(0,_lib.pluck)(thousandseparatorposition,csConf.thousandseparatorposition),indecimalseparator:(0,_lib.getFirstValue)(chartAttrs.indecimalseparator,csConf.indecimalseparator),inthousandseparator:(0,_lib.getFirstValue)(chartAttrs.inthousandseparator,csConf.inthousandseparator),scalerecursively:scaleRecursively,maxscalerecursion:maxScaleRecursion,scaleseparator:scaleSeparator};if((0,_lib.getValidValue)(baseConf.inthousandseparator)){nf.baseConf._REGinthousandseparator=new RegExp((0,_lib.regescape)(baseConf.inthousandseparator),\"g\")}if((0,_lib.getValidValue)(baseConf.indecimalseparator)){nf.baseConf._REGindecimalseparator=new RegExp((0,_lib.regescape)(baseConf.indecimalseparator))}nf.Y=[];if(!isMultyAxis){paramLabels={cacheStore:[],formatnumber:baseConf.formatnumber,formatnumberscale:baseConf.formatnumberscale,forcenumberscale:baseConf.forcenumberscale,defaultnumberscale:baseConf.defaultnumberscale,numberscaleunit:baseConf.numberscaleunit.concat(),numberscalevalue:baseConf.numberscalevalue.concat(),numberprefix:baseConf.numberprefix,numbersuffix:baseConf.numbersuffix,decimalprecision:baseConf.decimalprecision,forcedecimals:baseConf.forcedecimals,decimalseparator:baseConf.decimalseparator,thousandseparator:baseConf.thousandseparator,thousandseparatorposition:baseConf.thousandseparatorposition,indecimalseparator:baseConf.indecimalseparator,inthousandseparator:baseConf.inthousandseparator,scalerecursively:scaleRecursively,maxscalerecursion:maxScaleRecursion,scaleseparator:scaleSeparator};if(!chartConf.useScaleRecursively||(paramLabels.numberscalevalue&&paramLabels.numberscalevalue.length)!==(paramLabels.numberscaleunit&&paramLabels.numberscaleunit.length)){paramLabels.scalerecursively=scaleRecursively=0}param1={cacheStore:[],formatnumber:paramLabels.formatnumber,formatnumberscale:paramLabels.formatnumberscale,forcenumberscale:paramLabels.forcenumberscale,defaultnumberscale:paramLabels.defaultnumberscale,numberscaleunit:paramLabels.numberscaleunit.concat(),numberscalevalue:paramLabels.numberscalevalue.concat(),numberprefix:paramLabels.numberprefix,numbersuffix:paramLabels.numbersuffix,decimalprecision:parseInt((0,_lib.pluck)(chartAttrs.yaxisvaluedecimals,paramLabels.decimalprecision,2),10),forcedecimals:(0,_lib.pluck)(chartAttrs.forceyaxisvaluedecimals,paramLabels.forcedecimals),decimalseparator:paramLabels.decimalseparator,thousandseparator:paramLabels.thousandseparator,thousandseparatorposition:paramLabels.thousandseparatorposition.concat(),indecimalseparator:paramLabels.indecimalseparator,inthousandseparator:paramLabels.inthousandseparator,scalerecursively:scaleRecursively,maxscalerecursion:maxScaleRecursion,scaleseparator:scaleSeparator};param2={cacheStore:[],formatnumber:(0,_lib.pluck)(chartAttrs.sformatnumber,numberFormatDefaults.sformatnumber),formatnumberscale:(0,_lib.pluck)(chartAttrs.sformatnumberscale,numberFormatDefaults.sformatnumberscale),forcenumberscale:(0,_lib.pluck)(chartAttrs.sforcenumberscale,numberFormatDefaults.sforcenumberscale),defaultnumberscale:(0,_lib.getFirstValue)(chartAttrs.sdefaultnumberscale,paramLabels.defaultnumberscale),numberscaleunit:(0,_lib.pluck)(snumberscaleunit,numberFormatDefaults.snumberscaleunit).concat(),numberscalevalue:(0,_lib.pluck)(snumberscalevalue,numberFormatDefaults.snumberscalevalue).concat(),numberprefix:(0,_lib.parseUnsafeString)((0,_lib.getFirstValue)(chartAttrs.snumberprefix,numberFormatDefaults.snumberprefix)),numbersuffix:(0,_lib.parseUnsafeString)((0,_lib.getFirstValue)(chartAttrs.snumbersuffix,numberFormatDefaults.snumbersuffix)),decimalprecision:parseInt((0,_lib.pluck)(chartAttrs.syaxisvaluedecimals,chartAttrs.sdecimals,chartAttrs.decimals,numberFormatDefaults.sdecimals),10),forcedecimals:(0,_lib.pluck)(chartAttrs.forcesyaxisvaluedecimals,chartAttrs.sforcedecimals,chartAttrs.forcedecimals,numberFormatDefaults.sforcedecimals),decimalseparator:(0,_lib.pluck)(chartAttrs.decimalseparator,numberFormatDefaults.decimalseparator),thousandseparator:(0,_lib.pluck)(chartAttrs.thousandseparator,numberFormatDefaults.thousandseparator),thousandseparatorposition:paramLabels.thousandseparatorposition.concat(),indecimalseparator:(0,_lib.parseUnsafeString)((0,_lib.pluck)(chartAttrs.indecimalseparator,numberFormatDefaults.indecimalseparator)),inthousandseparator:(0,_lib.parseUnsafeString)((0,_lib.pluck)(chartAttrs.inthousandseparator,numberFormatDefaults.inthousandseparator)),scalerecursively:sScaleRecursively,maxscalerecursion:sMaxScaleRecursion,scaleseparator:sScaleSeparator};paramLabels2=(0,_lib.extend2)({},param2);paramLabels2.decimalprecision=parseInt((0,_lib.pluck)(chartAttrs.sdecimals,chartAttrs.decimals,chartAttrs.syaxisvaluedecimals,numberFormatDefaults.sdecimals),10);paramLabels2.forcedecimals=(0,_lib.pluck)(chartAttrs.sforcedecimals,chartAttrs.forcedecimals,chartAttrs.forcesyaxisvaluedecimals,numberFormatDefaults.sforcedecimals);paramLabels2.cacheStore=[];if(!chartConf.useScaleRecursively||(param2.numberscalevalue&&param2.numberscalevalue.length)!==(param2.numberscaleunit&&param2.numberscaleunit.length)){param2.scalerecursively=sScaleRecursively=0}if(/^(bubble|scatter|selectscatter|zoomscatter)$/gi.test(chartName)){param1.formatnumber=(0,_lib.pluck)(chartAttrs.yformatnumber,param1.formatnumber);param1.formatnumberscale=(0,_lib.pluck)(chartAttrs.yformatnumberscale,param1.formatnumberscale);param1.forcenumberscale=(0,_lib.pluck)(chartAttrs.yforcenumberscale,param1.forcenumberscale);param1.defaultnumberscale=(0,_lib.getFirstValue)(chartAttrs.ydefaultnumberscale,param1.defaultnumberscale);param1.numberscaleunit=(0,_lib.pluck)(ynumberscaleunit,param1.numberscaleunit);param1.numberscalevalue=(0,_lib.pluck)(ynumberscalevalue,param1.numberscalevalue);param1.numberprefix=(0,_lib.parseUnsafeString)((0,_lib.pluck)(chartAttrs.ynumberprefix,param1.numberprefix));param1.numbersuffix=(0,_lib.parseUnsafeString)((0,_lib.pluck)(chartAttrs.ynumbersuffix,param1.numbersuffix));paramLabels.formatnumber=(0,_lib.pluck)(chartAttrs.yformatnumber,paramLabels.formatnumber);paramLabels.formatnumberscale=(0,_lib.pluck)(chartAttrs.yformatnumberscale,paramLabels.formatnumberscale);paramLabels.forcenumberscale=(0,_lib.pluck)(chartAttrs.yforcenumberscale,paramLabels.forcenumberscale);paramLabels.defaultnumberscale=(0,_lib.getFirstValue)(chartAttrs.ydefaultnumberscale,paramLabels.defaultnumberscale);paramLabels.numberscaleunit=(0,_lib.pluck)(chartAttrs.ynumberscaleunit,paramLabels.numberscaleunit.concat());paramLabels.numberscalevalue=(0,_lib.pluck)(chartAttrs.ynumberscalevalue,paramLabels.numberscalevalue.concat());paramLabels.numberprefix=(0,_lib.parseUnsafeString)((0,_lib.pluck)(chartAttrs.ynumberprefix,paramLabels.numberprefix));paramLabels.numbersuffix=(0,_lib.parseUnsafeString)((0,_lib.pluck)(chartAttrs.ynumbersuffix,paramLabels.numbersuffix))}if(/^(pie2d|pie3d|doughnut2d|doughnut3d|marimekko|pareto2d|pareto3d)$/.test(chartName)){paramLabels.decimalprecision=(0,_lib.pluck)(chartAttrs.decimals,TWOSTRING)}if(scaleRecursively){paramLabels.numberscalevalue.push(1);paramLabels.numberscaleunit.unshift(paramLabels.defaultnumberscale);param1.numberscalevalue.push(1);param1.numberscaleunit.unshift(param1.defaultnumberscale)}if(sScaleRecursively){param2.numberscalevalue.push(1);param2.numberscaleunit.unshift(param2.defaultnumberscale);paramLabels2.numberscalevalue.push(1);paramLabels2.numberscaleunit.unshift(paramLabels2.defaultnumberscale)}nf.Y[0]={yAxisLabelConf:param1,dataLabelConf:paramLabels};nf.Y[1]={yAxisLabelConf:param2,dataLabelConf:paramLabels2};nf.paramLabels=paramLabels;nf.param1=param1;nf.param2=param2;nf.paramLabels2=paramLabels2}nf.paramX={cacheStore:[],formatnumber:(0,_lib.pluck)(chartAttrs.xformatnumber,baseConf.formatnumber),formatnumberscale:(0,_lib.pluck)(chartAttrs.xformatnumberscale,baseConf.formatnumberscale),forcenumberscale:(0,_lib.pluck)(chartAttrs.xforcenumberscale,baseConf.forcenumberscale),defaultnumberscale:(0,_lib.getFirstValue)(chartAttrs.xdefaultnumberscale,baseConf.defaultnumberscale),numberscaleunit:(0,_lib.pluck)(xnumberscaleunit,baseConf.numberscaleunit.concat()),numberscalevalue:(0,_lib.pluck)(xnumberscalevalue,baseConf.numberscalevalue.concat()),numberprefix:(0,_lib.parseUnsafeString)((0,_lib.pluck)(chartAttrs.xnumberprefix,baseConf.numberprefix)),numbersuffix:(0,_lib.parseUnsafeString)((0,_lib.pluck)(chartAttrs.xnumbersuffix,baseConf.numbersuffix)),decimalprecision:parseInt((0,_lib.pluck)(chartAttrs.xaxisvaluedecimals,chartAttrs.xaxisvaluesdecimals,baseConf.decimalprecision,2),10),forcedecimals:(0,_lib.pluck)(chartAttrs.forcexaxisvaluedecimals,0),decimalseparator:baseConf.decimalseparator,thousandseparator:baseConf.thousandseparator,thousandseparatorposition:baseConf.thousandseparatorposition.concat(),indecimalseparator:baseConf.indecimalseparator,inthousandseparator:baseConf.inthousandseparator,scalerecursively:xScaleRecursively,maxscalerecursion:xMaxScaleRecursion,scaleseparator:xScaleSeparator};nf.paramLegend=(0,_lib.extend2)((0,_lib.extend2)({},baseConf),{cacheStore:[],decimalprecision:parseInt((0,_lib.pluckNumber)(chartAttrs.legendvaluedecimals,baseConf.decimalprecision,2),10),forcedecimals:(0,_lib.pluckNumber)(chartAttrs.legendvalueforcedecimals,baseConf.forcedecimals,0),formatnumberscale:(0,_lib.pluck)(chartAttrs.legendvalueformatnumberscale,baseConf.formatnumberscale),forcenumberscale:(0,_lib.pluck)(chartAttrs.legendvalueforcenumberscale,baseConf.forcenumberscale),formatnumber:(0,_lib.pluck)(chartAttrs.legendvalueformatnumber,baseConf.formatnumber)});if(scaleRecursively){nf.paramLegend.numberscalevalue.push(1);nf.paramLegend.numberscaleunit.unshift(nf.paramLegend.defaultnumberscale)}if(!chartConf.useScaleRecursively||(nf.paramX.numberscalevalue&&nf.paramX.numberscalevalue.length)!==(nf.paramX.numberscaleunit&&nf.paramX.numberscaleunit.length)){nf.paramX.scalerecursively=xScaleRecursively=0}if(xScaleRecursively){nf.paramX.numberscalevalue.push(1);nf.paramX.numberscaleunit.unshift(nf.paramX.defaultnumberscale)}nf.paramScale={cacheStore:[],formatnumber:(0,_lib.pluck)(chartAttrs.tickformatnumber,baseConf.formatnumber),formatnumberscale:(0,_lib.pluck)(chartAttrs.tickformatnumberscale,baseConf.formatnumberscale),forcenumberscale:(0,_lib.pluck)(chartAttrs.tickforcenumberscale,baseConf.forcenumberscale),defaultnumberscale:(0,_lib.getFirstValue)(chartAttrs.tickdefaultnumberscale,baseConf.defaultnumberscale),numberscaleunit:(0,_lib.pluck)(ticknumberscaleunit,baseConf.numberscaleunit.concat()),numberscalevalue:(0,_lib.pluck)(ticknumberscalevalue,baseConf.numberscalevalue.concat()),numberprefix:(0,_lib.parseUnsafeString)((0,_lib.pluck)(chartAttrs.ticknumberprefix,baseConf.numberprefix)),numbersuffix:(0,_lib.parseUnsafeString)((0,_lib.pluck)(chartAttrs.ticknumbersuffix,baseConf.numbersuffix)),decimalprecision:parseInt((0,_lib.pluck)(chartAttrs.tickvaluedecimals,baseConf.decimalprecision,TWOSTRING),10),forcedecimals:(0,_lib.pluck)(chartAttrs.forcetickvaluedecimals,baseConf.forcedecimals,0),decimalseparator:baseConf.decimalseparator,thousandseparator:baseConf.thousandseparator,thousandseparatorposition:baseConf.thousandseparatorposition.concat(),indecimalseparator:baseConf.indecimalseparator,inthousandseparator:baseConf.inthousandseparator,scalerecursively:scaleRecursively,maxscalerecursion:maxScaleRecursion,scaleseparator:scaleSeparator};if(scaleRecursively){nf.paramScale.numberscalevalue.push(1);nf.paramScale.numberscaleunit.unshift(nf.paramScale.defaultnumberscale)}nf.timeConf={inputDateFormat:(0,_lib.pluck)(chartAttrs.inputdateformat,chartAttrs.dateformat,\"mm/dd/yyyy\"),outputDateFormat:(0,_lib.pluck)(chartAttrs.outputdateformat,chartAttrs.inputdateformat,chartAttrs.dateformat,\"mm/dd/yyyy\"),days:[\"Sunday\",\"Monday\",\"Tuesday\",\"Wednesday\",\"Thursday\",\"Friday\",\"Saturday\"],months:[\"January\",\"February\",\"March\",\"April\",\"May\",\"June\",\"July\",\"August\",\"September\",\"October\",\"November\",\"December\"],daySuffix:[\"\",\"st\",\"nd\",\"rd\",\"th\",\"th\",\"th\",\"th\",\"th\",\"th\",\"th\",\"th\",\"th\",\"th\",\"th\",\"th\",\"th\",\"th\",\"th\",\"th\",\"th\",\"st\",\"nd\",\"rd\",\"th\",\"th\",\"th\",\"th\",\"th\",\"th\",\"th\",\"st\"]};nf.cleaneValueCacheStore={};nf.percentStrCacheStore={}};_proto.dispose=function dispose(){var nf=this;if(nf.Y){delete nf.Y}if(nf.cleaneValueCacheStore){delete nf.cleaneValueCacheStore}if(nf.percentStrCacheStore){delete nf.percentStrCacheStore}if(nf.paramLabels){delete nf.paramLabels}if(nf.param1){delete nf.param1}if(nf.param2){delete nf.param2}if(nf.paramLabels2){delete nf.paramLabels2}if(nf.csConf){delete nf.csConf}if(nf.chart){delete nf.chart}if(nf.baseConf){delete nf.baseConf}if(nf.timeConf){delete nf.timeConf}if(nf.paramX){delete nf.paramX}if(nf.paramScale){delete nf.paramScale}};_proto.parseMLAxisConf=function parseMLAxisConf(axisObj,_index){var baseConf=this.baseConf,csConf=this.csConf,scaleRecursively=(0,_lib.pluckNumber)(axisObj.scalerecursively,baseConf.scalerecursively),maxScaleRecursion=(0,_lib.pluckNumber)(axisObj.maxscalerecursion,baseConf.maxscalerecursion),scaleSeparator=(0,_lib.getValidValue)(axisObj.scaleseparator,baseConf.scaleseparator),paramLabels,numberscaleunit,numberscalevalue,param,thousandseparatorposition,length,value,lastValue,index=(0,_lib.pluckNumber)(_index,this.Y.length);if((0,_lib.getValidValue)(axisObj.numberscaleunit)){numberscaleunit=axisObj.numberscaleunit.split(COMMASTRING)}if((0,_lib.getValidValue)(axisObj.numberscalevalue)){numberscalevalue=axisObj.numberscalevalue.split(COMMASTRING)}if(!maxScaleRecursion){maxScaleRecursion=-1}if((0,_lib.getValidValue)(axisObj.thousandseparatorposition)){thousandseparatorposition=axisObj.thousandseparatorposition.split(COMMASTRING);length=thousandseparatorposition.length;lastValue=numberFormatDefaults.thousandseparatorposition[0];while(length--){value=(0,_lib.pluckNumber)(mathAbs(thousandseparatorposition[length]));if(!value){value=lastValue}else{lastValue=value}thousandseparatorposition[length]=value}}paramLabels={cacheStore:[],formatnumber:(0,_lib.pluck)(axisObj.formatnumber,baseConf.formatnumber),formatnumberscale:(0,_lib.pluck)(axisObj.formatnumberscale,baseConf.formatnumberscale),forcenumberscale:(0,_lib.pluck)(axisObj.forcenumberscale,baseConf.forcenumberscale),defaultnumberscale:(0,_lib.getFirstValue)(axisObj.defaultnumberscale,baseConf.defaultnumberscale),numberscaleunit:(0,_lib.pluck)(numberscaleunit,baseConf.numberscaleunit).concat(),numberscalevalue:(0,_lib.pluck)(numberscalevalue,baseConf.numberscalevalue).concat(),numberprefix:(0,_lib.parseUnsafeString)((0,_lib.getFirstValue)(axisObj.numberprefix,baseConf.numberprefix)),numbersuffix:(0,_lib.parseUnsafeString)((0,_lib.getFirstValue)(axisObj.numbersuffix,baseConf.numbersuffix)),forcedecimals:(0,_lib.pluck)(axisObj.forcedecimals,baseConf.forcedecimals),decimalprecision:parseInt(axisObj.decimals===AUTOSTRING?csConf.decimalprecision:(0,_lib.pluck)(axisObj.decimals,baseConf.decimalprecision),10),decimalseparator:(0,_lib.pluck)(axisObj.decimalseparator,baseConf.decimalseparator),thousandseparator:(0,_lib.pluck)(axisObj.thousandseparator,baseConf.thousandseparator),thousandseparatorposition:(0,_lib.pluck)(thousandseparatorposition,baseConf.thousandseparatorposition),indecimalseparator:(0,_lib.parseUnsafeString)((0,_lib.getFirstValue)(axisObj.indecimalseparator,baseConf.indecimalseparator)),inthousandseparator:(0,_lib.parseUnsafeString)((0,_lib.getFirstValue)(axisObj.inthousandseparator,baseConf.inthousandseparator)),scalerecursively:scaleRecursively,maxscalerecursion:maxScaleRecursion,scaleseparator:scaleSeparator};if(!this.useScaleRecursively||(paramLabels.numberscalevalue&&paramLabels.numberscalevalue.length)!==(paramLabels.numberscaleunit&&paramLabels.numberscaleunit.length)){paramLabels.scalerecursively=scaleRecursively=0}param={cacheStore:[],formatnumber:paramLabels.formatnumber,formatnumberscale:paramLabels.formatnumberscale,forcenumberscale:paramLabels.forcenumberscale,defaultnumberscale:paramLabels.defaultnumberscale,numberscaleunit:paramLabels.numberscaleunit.concat(),numberscalevalue:paramLabels.numberscalevalue.concat(),numberprefix:paramLabels.numberprefix,numbersuffix:paramLabels.numbersuffix,decimalprecision:parseInt((0,_lib.pluck)(axisObj.yaxisvaluedecimals,paramLabels.decimalprecision,2),10),forcedecimals:(0,_lib.pluck)(axisObj.forceyaxisvaluedecimals,paramLabels.forcedecimals),decimalseparator:paramLabels.decimalseparator,thousandseparator:paramLabels.thousandseparator,thousandseparatorposition:paramLabels.thousandseparatorposition.concat(),indecimalseparator:paramLabels.indecimalseparator,inthousandseparator:paramLabels.inthousandseparator,scalerecursively:scaleRecursively,maxscalerecursion:maxScaleRecursion,scaleseparator:scaleSeparator};if(scaleRecursively){paramLabels.numberscalevalue.push(1);paramLabels.numberscaleunit.unshift(paramLabels.defaultnumberscale);param.numberscalevalue.push(1);param.numberscaleunit.unshift(param.defaultnumberscale)}this.Y[index]={dataLabelConf:paramLabels,yAxisLabelConf:param}};_proto.percentValue=function percentValue(num){var rtn=this.percentStrCacheStore[num],precision;if(rtn===UNDEF){precision=isNaN(this.paramLabels.decimalprecision)?\"2\":this.paramLabels.decimalprecision;rtn=this.percentStrCacheStore[num]=formatCommas(formatDecimals(num,precision,this.paramLabels.forcedecimals),this.paramLabels.decimalseparator,this.paramLabels.thousandseparator,this.paramLabels.thousandseparatorposition)+\"%\"}return rtn};_proto.yAxisPercentValue=function yAxisPercentValue(num,axisIndex){window.th=this;var formatterConf=this.Y[axisIndex]||(axisIndex?this.Y[1]:this.Y[0]),rtn,precision;formatterConf=formatterConf&&formatterConf.yAxisLabelConf||this.baseConf;rtn=formatterConf.cacheStore[num];if(rtn===UNDEF){precision=isNaN(formatterConf.decimalprecision)?\"2\":formatterConf.decimalprecision;rtn=formatterConf.cacheStore[num]=formatCommas(formatDecimals(num,precision,formatterConf.forcedecimals),formatterConf.decimalseparator,formatterConf.thousandseparator,formatterConf.thousandseparatorposition)+\"%\"}return rtn};_proto.getCleanValue=function getCleanValue(numStr,abs){var rtn=this.cleaneValueCacheStore[numStr],num;if(rtn===UNDEF||abs){num=convertNumberSeps(numStr,this.baseConf);this.cleaneValueCacheStore[numStr]=rtn=isNaN(num)?null:abs?mathAbs(num):num}return rtn};_proto.dataLabels=function dataLabels(num,axisIndex){var formatterConf=this.Y[axisIndex]||(axisIndex?this.Y[1]:this.Y[0]),rtn;formatterConf=formatterConf&&formatterConf.dataLabelConf||this.baseConf;rtn=formatterConf.cacheStore[num];if(rtn===UNDEF){rtn=formatterConf.cacheStore[num]=formatNumber(num,formatterConf)}return rtn};_proto.formatValue=function formatValue(num){var formatterConf=this.baseConf,rtn;rtn=formatterConf.cacheStore[num];if(rtn===UNDEF){rtn=formatterConf.cacheStore[num]=formatNumber(num,formatterConf)}return rtn};_proto.yAxis=function yAxis(num,axisIndex){var formatterConf=this.Y[axisIndex]||(axisIndex?this.Y[1]:this.Y[0]),rtn;formatterConf=formatterConf&&formatterConf.yAxisLabelConf||this.baseConf;rtn=formatterConf.cacheStore[num];if(rtn===UNDEF){rtn=formatterConf.cacheStore[num]=formatNumber(num,formatterConf,true)}return rtn};_proto.xAxis=function xAxis(num){var rtn=this.paramX.cacheStore[num];if(rtn===UNDEF){rtn=this.paramX.cacheStore[num]=formatNumber(num,this.paramX,true)}return rtn};_proto.sYAxis=function sYAxis(num){var formatterConf=this.Y[1],rtn;formatterConf=formatterConf&&formatterConf.yAxisLabelConf||this.baseConf;rtn=formatterConf.cacheStore[num];if(rtn===UNDEF){rtn=formatterConf.cacheStore[num]=formatNumber(num,formatterConf)}return rtn};_proto.scale=function scale(num){var rtn=this.paramScale.cacheStore[num];if(rtn===UNDEF){rtn=this.paramScale.cacheStore[num]=formatNumber(num,this.paramScale)}return rtn};_proto.legendValue=function legendValue(num){var rtn=this.paramLegend.cacheStore[num];if(rtn===UNDEF){rtn=this.paramLegend.cacheStore[num]=formatNumber(num,this.paramLegend)}return rtn};_proto.legendPercentValue=function legendPercentValue(num){var rtn=this.percentStrCacheStore[num],paramLegend=this.paramLegend,precision;if(rtn===UNDEF){precision=isNaN(paramLegend.decimalprecision)?\"2\":paramLegend.decimalprecision;rtn=this.percentStrCacheStore[num]=formatCommas(formatDecimals(num,precision,paramLegend.forcedecimals),paramLegend.decimalseparator,paramLegend.thousandseparator,paramLegend.thousandseparatorposition)+\"%\"}return rtn};_proto.getDateValue=function getDateValue(_date){var dataObj,hour,min,sec,ms,date=_date;if(date&&!/\\//.test(this.timeConf.inputDateFormat)){date=date.replace(new RegExp(this.timeConf.inputDateFormat.replace(/[a-z]/gi,BLANK).slice(0,1),\"g\"),\"/\")}date=/^dd/.test(this.timeConf.inputDateFormat)&&date&&date.replace(/(\\d{1,2})\\/(\\d{1,2})\\/(\\d{2,4})/,\"$2/$1/$3\")||date;if(/\\s24:/.test(date)){date=date.replace(/\\s24:/,\" 00:\");dataObj=new Date(date);dataObj.setDate(dataObj.getDate()+1)}else{dataObj=new Date(date)}ms=dataObj.getTime();if(!ms&&date&&/\\:/.test(date)){date=date.split(\":\");hour=(0,_lib.pluckNumber)(date[0],0);min=(0,_lib.pluckNumber)(date[1],0);sec=(0,_lib.pluckNumber)(date[2],0);hour=hour>23?hour===24&&min===0&&sec===0?hour:23:hour;min=min>59?59:min;sec=sec>59?59:sec;dataObj=new Date;dataObj.setHours(hour);dataObj.setMinutes(min);dataObj.setSeconds(sec);ms=dataObj.getTime()}return{ms:ms,date:dataObj}};_proto.getFormattedDate=function getFormattedDate(date,format){var D=typeof date===\"object\"&&date||new Date(date),timeConf=this.timeConf,output=(0,_lib.pluck)(format,timeConf.outputDateFormat),year=D.getFullYear(),month=D.getMonth(),day=D.getDate(),nday=D.getDay(),min=D.getMinutes(),sec=D.getSeconds(),hours=D.getHours();min=min>9?BLANK+min:ZEROSTRING+min;sec=sec>9?BLANK+sec:ZEROSTRING+sec;hours=hours>9?BLANK+hours:ZEROSTRING+hours;output.match(/dnl/)&&(output=output.replace(/dnl/gi,timeConf.days[nday]));output.match(/dns/)&&(output=output.replace(/dns/gi,timeConf.days[nday]&&timeConf.days[nday].substr(0,3)));output.match(/dd/)&&(output=output.replace(/dd/gi,day));output.match(/mnl/)&&(output=output.replace(/mnl/gi,timeConf.months[month]));output.match(/mns/)&&(output=output.replace(/mns/gi,timeConf.months[month]&&timeConf.months[month].substr(0,3)));output.match(/mm/)&&(output=output.replace(/mm/gi,month+1));output.match(/yyyy/)&&(output=output.replace(/yyyy/gi,year));output.match(/yy/)&&(output=output.replace(/yy/gi,(year%1e3%100+\"\").replace(/^(\\d)$/,\"0$1\")));output.match(/hh12/)&&(output=output.replace(/hh12/gi,hours%12||12));output.match(/hh/)&&(output=output.replace(/hh/gi,hours));output.match(/mn/)&&(output=output.replace(/mn/gi,min));output.match(/ss/)&&(output=output.replace(/ss/gi,sec));output.match(/ampm/)&&(output=output.replace(/ampm/gi,hours<12?\"AM\":\"PM\"));output.match(/ds/)&&(output=output.replace(/ds/gi,timeConf.daySuffix[day]));return output};return NumberFormatter}();formatNumber=function formatNumber(_num,attributes,isAxisValue){var strNum,strScale,numList,scaleList,upperIndex,tempNum,tempStr,i,valueArr,decimalPlaceLen,objNum,num=_num;if(num===null){return}num=Number(num);strNum=num+BLANK;if(Number(attributes.formatnumberscale)===1){strScale=attributes.defaultnumberscale}else{strScale=BLANK}valueArr=strNum.split(DECIMALSTRING)[1];decimalPlaceLen=valueArr?valueArr.length:attributes.forcedecimals?TWOSTRING:BLANK;if(Number(attributes.formatnumberscale)===1){objNum=formatNumberScale(num,attributes.defaultnumberscale,attributes.numberscalevalue,attributes.numberscaleunit,attributes.scalerecursively,attributes.forcenumberscale);strNum=objNum.value;num=objNum.value;strScale=objNum.scale}if(attributes.scalerecursively&&attributes.formatnumberscale!==0&&attributes.formatnumberscale!==\"0\"){numList=objNum.value;scaleList=objNum.scale;upperIndex=Number(attributes.maxscalerecursion)===-1?numList.length:Math.min(numList.length,attributes.maxscalerecursion);if(Number(attributes.formatnumber)===1){strNum=_lib.BLANKSTRING;for(i=0;i<upperIndex;i++){tempNum=i===0?numList[i]:Math.abs(numList[i]);tempStr=tempNum+BLANK;if(i===upperIndex-1){tempStr=formatDecimals(tempNum,(0,_lib.pluck)(attributes.decimalprecision,decimalPlaceLen),attributes.forcedecimals)}strNum=strNum+formatCommas(tempStr,attributes.decimalseparator,attributes.thousandseparator,attributes.thousandseparatorposition)+scaleList[i]+(i<upperIndex-1?attributes.scaleseparator:_lib.BLANKSTRING)}}else{strNum=_lib.BLANKSTRING;for(i=0;i<upperIndex;i++){strNum=strNum+(i===0?numList[i]:Math.abs(numList[i])+BLANK)+scaleList[i]+(i<upperIndex-1?attributes.scaleseparator:\"\")}}strNum=(attributes.numberprefix||BLANK)+strNum+(attributes.numbersuffix||BLANK)}else{if(Number(attributes.formatnumber)===1){strNum=formatDecimals(num,(0,_lib.pluck)(attributes.decimalprecision,decimalPlaceLen),attributes.forcedecimals);strNum=formatCommas(strNum,attributes.decimalseparator,attributes.thousandseparator,attributes.thousandseparatorposition,isAxisValue)}strNum=(attributes.numberprefix||BLANK)+strNum+strScale+(attributes.numbersuffix||BLANK)}return strNum};formatNumberScale=function formatNumberScale(_intNum,defaultNumberScale,numScaleValues,numScaleUnits,scaleRecursively,_forceNumberScale){var objRtn={},strScale=defaultNumberScale,recLowerScaleValue,recTempVal,i=0,numScaleValue,THOUSAND=1e3,arrValues=[],arrScales=[],carry,intNum=_intNum,forceNumberScale=(0,_lib.pluckNumber)(_forceNumberScale)||0;if(scaleRecursively){recLowerScaleValue=(0,_lib.pluckNumber)(numScaleValues[0])||THOUSAND;for(i=0;i<numScaleValues.length;i++){numScaleValue=(0,_lib.pluckNumber)(numScaleValues[i])||THOUSAND;if(Math.abs(Number(intNum))>=numScaleValue&&i<numScaleValues.length-1){carry=intNum%numScaleValue;intNum=(intNum-carry)/numScaleValue;if(i===0&&carry!==0&&numScaleUnits[i]===BLANK&&forceNumberScale){arrValues.push(carry/recLowerScaleValue);arrScales.push(numScaleUnits[1]||BLANK)}else if(carry!==0){if(i===1&&defaultNumberScale===BLANK&&forceNumberScale){recTempVal=carry+(arrValues.length?arrValues.pop():0);arrScales.pop();arrValues.push(recTempVal)}else{arrValues.push(carry)}arrScales.push(numScaleUnits[i])}}else{if(i===0&&defaultNumberScale===BLANK&&forceNumberScale){intNum=Number(intNum)/recLowerScaleValue;arrValues.push(intNum);arrScales.push(numScaleUnits[1]||BLANK)}else{if(i===1&&defaultNumberScale===BLANK&&forceNumberScale){recTempVal=intNum+(arrValues.length?arrValues.pop():0);arrScales.pop();arrValues.push(recTempVal)}else{arrValues.push(intNum)}arrScales.push(numScaleUnits[i])}break}}arrValues.reverse();arrScales.reverse();objRtn.value=arrValues;objRtn.scale=arrScales}else{if(numScaleValues.length===numScaleUnits.length){for(i=0;i<numScaleValues.length;i++){numScaleValue=(0,_lib.pluckNumber)(numScaleValues[i])||THOUSAND;if(numScaleValue&&Math.abs(Number(intNum))>=numScaleValue){strScale=numScaleUnits[i]||BLANK;intNum=Number(intNum)/numScaleValue}else{if(i===0&&defaultNumberScale===BLANK&&forceNumberScale){strScale=numScaleUnits[0]||BLANK;intNum=Number(intNum)/numScaleValue}break}}}objRtn.value=intNum;objRtn.scale=strScale}return objRtn};formatDecimals=function formatDecimals(_intNum,_decimalPrecision,forceDecimals){var tenToPower,strRounded,parts,paddingNeeded,i,intNum=_intNum,decimalPrecision=_decimalPrecision;if(decimalPrecision<=0){return mathRound(intNum)+BLANK}if(isNaN(decimalPrecision)){intNum=intNum+BLANK;if(intNum.length>12&&intNum.indexOf(DECIMALSTRING)!==-1){decimalPrecision=12-intNum.split(DECIMALSTRING)[0].length;tenToPower=mathPow(10,decimalPrecision);strRounded=mathRound(intNum*tenToPower)/tenToPower+BLANK;intNum=strRounded}return intNum}tenToPower=mathPow(10,decimalPrecision);strRounded=mathRound(intNum*tenToPower)/tenToPower+BLANK;if(Number(forceDecimals)===1){if(strRounded.indexOf(DECIMALSTRING)===-1){strRounded+=\".0\"}parts=strRounded.split(DECIMALSTRING);paddingNeeded=decimalPrecision-parts[1].length;for(i=1;i<=paddingNeeded;i++){strRounded+=ZEROSTRING}}return strRounded};formatCommas=function formatCommas(strNum,decimalseparator,thousandseparator,thSepPos,isAxisValue){var intNum=Number(strNum),strDecimalPart=BLANK,boolIsNegative=false,strNumberFloor=BLANK,formattedNumber=BLANK,startPos=0,endPos=0,minExponentialValue=1e15,fractionDigits,strNumberLen,sepPosLen,sepDigit;if(isNaN(intNum)){return BLANK}if(intNum>minExponentialValue){if(isAxisValue){fractionDigits=1}else{fractionDigits=14}return intNum.toExponential(fractionDigits)}startPos=0;endPos=strNum.length;if(strNum.indexOf(DECIMALSTRING)!==-1){strDecimalPart=strNum.substring(strNum.indexOf(DECIMALSTRING)+1,strNum.length);endPos=strNum.indexOf(DECIMALSTRING)}if(intNum<0){boolIsNegative=true;startPos=1}strNumberFloor=strNum.substring(startPos,endPos);strNumberLen=strNumberFloor.length;sepPosLen=thSepPos.length-1;sepDigit=thSepPos[sepPosLen];if(strNumberLen<sepDigit){formattedNumber=strNumberFloor}else{while(strNumberLen>=sepDigit){formattedNumber=(strNumberLen-sepDigit?thousandseparator:BLANK)+strNumberFloor.substr(strNumberLen-sepDigit,sepDigit)+formattedNumber;strNumberLen-=sepDigit;sepDigit=(sepPosLen-=1)<=0?thSepPos[0]:thSepPos[sepPosLen];if(strNumberLen<sepDigit){formattedNumber=strNumberFloor.substring(strNumberLen,0)+formattedNumber}}}if(strDecimalPart!==BLANK){formattedNumber=formattedNumber+decimalseparator+strDecimalPart}if(boolIsNegative===true){formattedNumber=MINUSSTR+formattedNumber}return formattedNumber};convertNumberSeps=function convertNumberSeps(_num,conf){var num=_num;num=num+BLANK;if(conf._REGinthousandseparator){num=num.replace(conf._REGinthousandseparator,BLANK)}if(conf._REGindecimalseparator){num=num.replace(conf._REGindecimalseparator,DECIMALSTRING)}num=parseFloat(num);return isFinite(num)?num:NaN};var _default=NumberFormatter;exports.default=_default;"]},"metadata":{},"sourceType":"script"}