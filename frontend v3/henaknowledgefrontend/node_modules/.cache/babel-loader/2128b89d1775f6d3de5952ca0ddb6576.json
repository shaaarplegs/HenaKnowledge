{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.default = void 0;\n\nvar _inheritsLoose2 = _interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));\n\nvar _timeInterval = _interopRequireDefault(require(\"./time-interval.js\"));\n\nvar _timeIntervalclip = require(\"./time-intervalclip\");\n\nvar YearInterval = function (_TimeInterval) {\n  (0, _inheritsLoose2.default)(YearInterval, _TimeInterval);\n\n  function YearInterval() {\n    return _TimeInterval.apply(this, arguments) || this;\n  }\n\n  var _proto = YearInterval.prototype;\n\n  _proto.every = function every(step) {\n    var stepi = Math.floor(step);\n\n    if (!this.count || !Number.isFinite(stepi) || !(stepi > 0)) {\n      return null;\n    }\n\n    return new _timeInterval.default({\n      name: \"year\",\n      floor: function floor(d, clippedDates, timeUniverse) {\n        d.setFullYear(Math.floor(d.getFullYear() / stepi) * stepi);\n        d.setMonth(0, 1);\n        return new Date(Number((0, _timeIntervalclip.getFloor)(new Date(Number(d.setHours(0, 0, 0, 0)))), clippedDates, \"year\", timeUniverse));\n      },\n      offset: function offset(d, s, clippedDates, timeUniverse) {\n        var isPositiveOffset = s > 0,\n            dateObj = {\n          date: new Date(Number(d))\n        },\n            cloneDate = new Date(Number(dateObj.date));\n        return new Date(Number(isPositiveOffset ? (0, _timeIntervalclip.clampDownDateWithinClip)(dateObj.date, new Date(Number(cloneDate.setFullYear(cloneDate.getFullYear() + s * stepi))), clippedDates, \"year\", timeUniverse) : (0, _timeIntervalclip.clampUpDateWithinClip)(dateObj.date, new Date(Number(cloneDate.setFullYear(cloneDate.getFullYear() + s * stepi))), clippedDates, \"year\", timeUniverse)));\n      }\n    });\n  };\n\n  return YearInterval;\n}(_timeInterval.default);\n\nvar _default = YearInterval;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/utils/src/time-intervals/time-interval-year.js"],"names":["_interopRequireDefault","require","exports","__esModule","default","_inheritsLoose2","_timeInterval","_timeIntervalclip","YearInterval","_TimeInterval","apply","arguments","_proto","prototype","every","step","stepi","Math","floor","count","Number","isFinite","name","d","clippedDates","timeUniverse","setFullYear","getFullYear","setMonth","Date","getFloor","setHours","offset","s","isPositiveOffset","dateObj","date","cloneDate","clampDownDateWithinClip","clampUpDateWithinClip","_default"],"mappings":"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","sourcesContent":["\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.default=void 0;var _inheritsLoose2=_interopRequireDefault(require(\"@babel/runtime/helpers/inheritsLoose\"));var _timeInterval=_interopRequireDefault(require(\"./time-interval.js\"));var _timeIntervalclip=require(\"./time-intervalclip\");var YearInterval=function(_TimeInterval){(0,_inheritsLoose2.default)(YearInterval,_TimeInterval);function YearInterval(){return _TimeInterval.apply(this,arguments)||this}var _proto=YearInterval.prototype;_proto.every=function every(step){var stepi=Math.floor(step);if(!this.count||!Number.isFinite(stepi)||!(stepi>0)){return null}return new _timeInterval.default({name:\"year\",floor:function floor(d,clippedDates,timeUniverse){d.setFullYear(Math.floor(d.getFullYear()/stepi)*stepi);d.setMonth(0,1);return new Date(Number((0,_timeIntervalclip.getFloor)(new Date(Number(d.setHours(0,0,0,0)))),clippedDates,\"year\",timeUniverse))},offset:function offset(d,s,clippedDates,timeUniverse){var isPositiveOffset=s>0,dateObj={date:new Date(Number(d))},cloneDate=new Date(Number(dateObj.date));return new Date(Number(isPositiveOffset?(0,_timeIntervalclip.clampDownDateWithinClip)(dateObj.date,new Date(Number(cloneDate.setFullYear(cloneDate.getFullYear()+s*stepi))),clippedDates,\"year\",timeUniverse):(0,_timeIntervalclip.clampUpDateWithinClip)(dateObj.date,new Date(Number(cloneDate.setFullYear(cloneDate.getFullYear()+s*stepi))),clippedDates,\"year\",timeUniverse)))}})};return YearInterval}(_timeInterval.default);var _default=YearInterval;exports.default=_default;"]},"metadata":{},"sourceType":"script"}