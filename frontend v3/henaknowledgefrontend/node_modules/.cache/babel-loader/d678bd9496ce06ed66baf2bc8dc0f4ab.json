{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.createPolynomial = createPolynomial;\nexports.createLinear = createLinear;\nexports.isInArray = isInArray;\nexports.hasRegressionLine = hasRegressionLine;\nexports.isValidDataset = void 0;\nvar validDataset = [\"scatter\", \"bubble\", \"errorScatter\", \"selectScatter\"];\n\nvar isDataset = function isDataset(component) {\n  return component.getType() === \"dataset\";\n},\n    isValidDataset = function isValidDataset(component) {\n  return isDataset(component) && validDataset.indexOf(component.getName()) >= 0;\n};\n\nexports.isValidDataset = isValidDataset;\n\nfunction createLinear(chartData, dataset) {\n  var chartLine = Number(chartData.showregressionline) || 0;\n  return isNaN(dataset.showregressionline) && chartLine || Number(dataset.showregressionline);\n}\n\nfunction createPolynomial(chartData, dataset) {\n  var chartPolyLine = Number(chartData.showpolynomialregressionline) || 0;\n  return isNaN(dataset.showpolynomialregressionline) && chartPolyLine || Number(dataset.showpolynomialregressionline);\n}\n\nfunction isInArray(value, array) {\n  return array.indexOf(value.toLowerCase()) > -1;\n}\n\nfunction hasRegressionLine(chartData, dataset) {\n  return dataset.showregressionline || chartData.showregressionline || dataset.showpolynomialregressionline || chartData.showpolynomialregressionline;\n}","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/features/src/regression-extension/utility-functions.js"],"names":["exports","__esModule","createPolynomial","createLinear","isInArray","hasRegressionLine","isValidDataset","validDataset","isDataset","component","getType","indexOf","getName","chartData","dataset","chartLine","Number","showregressionline","isNaN","chartPolyLine","showpolynomialregressionline","value","array","toLowerCase"],"mappings":"AAAA;;AAAaA,OAAO,CAACC,UAAR,GAAmB,IAAnB;AAAwBD,OAAO,CAACE,gBAAR,GAAyBA,gBAAzB;AAA0CF,OAAO,CAACG,YAAR,GAAqBA,YAArB;AAAkCH,OAAO,CAACI,SAAR,GAAkBA,SAAlB;AAA4BJ,OAAO,CAACK,iBAAR,GAA0BA,iBAA1B;AAA4CL,OAAO,CAACM,cAAR,GAAuB,KAAK,CAA5B;AAA8B,IAAIC,YAAY,GAAC,CAAC,SAAD,EAAW,QAAX,EAAoB,cAApB,EAAmC,eAAnC,CAAjB;;AAAqE,IAAIC,SAAS,GAAC,SAASA,SAAT,CAAmBC,SAAnB,EAA6B;AAAC,SAAOA,SAAS,CAACC,OAAV,OAAsB,SAA7B;AAAuC,CAAnF;AAAA,IAAoFJ,cAAc,GAAC,SAASA,cAAT,CAAwBG,SAAxB,EAAkC;AAAC,SAAOD,SAAS,CAACC,SAAD,CAAT,IAAsBF,YAAY,CAACI,OAAb,CAAqBF,SAAS,CAACG,OAAV,EAArB,KAA2C,CAAxE;AAA0E,CAAhN;;AAAiNZ,OAAO,CAACM,cAAR,GAAuBA,cAAvB;;AAAsC,SAASH,YAAT,CAAsBU,SAAtB,EAAgCC,OAAhC,EAAwC;AAAC,MAAIC,SAAS,GAACC,MAAM,CAACH,SAAS,CAACI,kBAAX,CAAN,IAAsC,CAApD;AAAsD,SAAOC,KAAK,CAACJ,OAAO,CAACG,kBAAT,CAAL,IAAmCF,SAAnC,IAA8CC,MAAM,CAACF,OAAO,CAACG,kBAAT,CAA3D;AAAwF;;AAAA,SAASf,gBAAT,CAA0BW,SAA1B,EAAoCC,OAApC,EAA4C;AAAC,MAAIK,aAAa,GAACH,MAAM,CAACH,SAAS,CAACO,4BAAX,CAAN,IAAgD,CAAlE;AAAoE,SAAOF,KAAK,CAACJ,OAAO,CAACM,4BAAT,CAAL,IAA6CD,aAA7C,IAA4DH,MAAM,CAACF,OAAO,CAACM,4BAAT,CAAzE;AAAgH;;AAAA,SAAShB,SAAT,CAAmBiB,KAAnB,EAAyBC,KAAzB,EAA+B;AAAC,SAAOA,KAAK,CAACX,OAAN,CAAcU,KAAK,CAACE,WAAN,EAAd,IAAmC,CAAC,CAA3C;AAA6C;;AAAA,SAASlB,iBAAT,CAA2BQ,SAA3B,EAAqCC,OAArC,EAA6C;AAAC,SAAOA,OAAO,CAACG,kBAAR,IAA4BJ,SAAS,CAACI,kBAAtC,IAA0DH,OAAO,CAACM,4BAAlE,IAAgGP,SAAS,CAACO,4BAAjH;AAA8I","sourcesContent":["\"use strict\";exports.__esModule=true;exports.createPolynomial=createPolynomial;exports.createLinear=createLinear;exports.isInArray=isInArray;exports.hasRegressionLine=hasRegressionLine;exports.isValidDataset=void 0;var validDataset=[\"scatter\",\"bubble\",\"errorScatter\",\"selectScatter\"];var isDataset=function isDataset(component){return component.getType()===\"dataset\"},isValidDataset=function isValidDataset(component){return isDataset(component)&&validDataset.indexOf(component.getName())>=0};exports.isValidDataset=isValidDataset;function createLinear(chartData,dataset){var chartLine=Number(chartData.showregressionline)||0;return isNaN(dataset.showregressionline)&&chartLine||Number(dataset.showregressionline)}function createPolynomial(chartData,dataset){var chartPolyLine=Number(chartData.showpolynomialregressionline)||0;return isNaN(dataset.showpolynomialregressionline)&&chartPolyLine||Number(dataset.showpolynomialregressionline)}function isInArray(value,array){return array.indexOf(value.toLowerCase())>-1}function hasRegressionLine(chartData,dataset){return dataset.showregressionline||chartData.showregressionline||dataset.showpolynomialregressionline||chartData.showpolynomialregressionline}"]},"metadata":{},"sourceType":"script"}