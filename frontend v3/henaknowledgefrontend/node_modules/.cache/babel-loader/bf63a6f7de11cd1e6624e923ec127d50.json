{"ast":null,"code":"\"use strict\";\n\nexports.__esModule = true;\nexports.default = _default;\n\nvar _lib = require(\"../../lib\");\n\nfunction _default(R) {\n  var UNDEF,\n      availableAttrs = R._availableAttrs,\n      NONE = \"none\",\n      BLANK = \"\",\n      SPACE = \" \",\n      UNDERSCORE = \"_\",\n      COLON = \":\",\n      SCOLONSPACE = \"; \",\n      EQUALQUOT = '=\"',\n      QUOT = '\"',\n      QUOTSPACE = QUOT + SPACE,\n      LT = \"<\",\n      GT = \">\",\n      NODESTRPART5 = \"</\",\n      XLINK = ' xlink:href=\"',\n      IMGNODE = \"image\",\n      TXTNODE = \"text\",\n      GRADIENT = \"gradient\",\n      RECT = \"rect\",\n      ASPRATIO = ' preserveAspectRatio=\"none\"',\n      NODESTRPART2 = ' transform=\"matrix(',\n      NODESTRPART3 = ')\" style=\"',\n      VALIGNSTR = \"vertical-align\",\n      TEXTANCHOR = \"text-anchor\",\n      MIDDLE = \"middle\",\n      TOP = \"top\",\n      BOTTOM = \"bottom\",\n      FONTSIZE = \"font-size\",\n      FONT = \"font\",\n      LINEHEIGHT = \"line-height\",\n      FONTFAMILY = \"font-family\",\n      FONTWEIGHT = \"font-weight\",\n      CURSOR = \"cursor:\",\n      TSPANSTR1 = \"<tspan \",\n      TSPANSTR2 = 'dy=\"',\n      TSPANSTR3 = '\" x=\"',\n      TSPANSTR4 = 'dy=\"',\n      RX = \"rx\",\n      RY = \"ry\",\n      TSPANSTR6 = \"</tspan>\",\n      PXSPACE = \"px; \",\n      CLIPRECT = \"clip-rect\",\n      CLIPSTR1 = '<clipPath id=\"',\n      CLIPSTR2 = '\"><rect x=\"',\n      CLIPSTR3 = '\" y=\"',\n      CLIPSTR4 = '\" width=\"',\n      CLIPSTR5 = '\" height=\"',\n      CLIPSTR6 = '\"/></clipPath>',\n      CLIPSTR7 = ' clip-path=\"url(#',\n      CLIPSTR8 = QUOT + NODESTRPART2,\n      URLCLOSE = \"')\\\"\",\n      BRACKETCLOSE = \")\",\n      DTAG = ' d=\"',\n      FILLSTR1 = \"fill:\",\n      FILLSTR2 = ' fill=\"',\n      FILLSTR3 = \" fill=\\\"url('#\",\n      FILLSTR4 = ' fill-opacity=\"',\n      STROKE1 = ' stroke=\"',\n      STROKE2 = ' stroke-opacity=\"',\n      STROKEOPAC = \"stroke-opacity\",\n      LINEAR = \"linear\",\n      RADIAL = \"radial\",\n      RGRADIENTSTR1 = '<radialGradient fx = \"',\n      RGRADIENTSTR3 = \"</radialGradient>\",\n      RGRADIENTSTR2 = '\" fy = \"',\n      RGRADIENTSTR6 = '\" cy = \"',\n      RGRADIENTSTR5 = '\" cx = \"',\n      RGRADIENTSTR7 = '\" r = \"',\n      RGRADIENTSTR8 = '\" gradientUnits = \"',\n      ID = '\" id = \"',\n      RGRADIENTSTR4 = '\">',\n      LGRADIENTSTR6 = \"</linearGradient>\",\n      LGRADIENTSTR5 = '\" gradientTransform =\"matrix(',\n      LGRADIENTSTR1 = '<linearGradient x1 = \"',\n      LGRADIENTSTR2 = '\" y1 = \"',\n      LGRADIENTSTR3 = '\" x2 = \"',\n      LGRADIENTSTR4 = '\" y2 = \"',\n      STOPSTR1 = \"<stop\",\n      STOPSTR2 = ' offset=\"',\n      STOPSTR3 = '\" stop-color=\"',\n      STOPSTR4 = '\" stop-opacity=\"',\n      STOPSTR5 = '\" />',\n      COLORWHITE = \"#fff\",\n      PERCENT100 = \"100%\",\n      PERCENT0 = \"0%\",\n      matrixSanitizerReg = /^matrix\\(|\\)$/g,\n      commaSanitizerReg = /\\,/g,\n      textNewLineReg = /\\n|<br\\s*?\\/?>/gi,\n      retriveNumReg = /[^\\d\\.]/gi,\n      idSanitizerReg = /[\\%\\(\\)\\s,\\xb0#]/g,\n      grouptagtestReg = /group/gi,\n      ampregex = /&/g,\n      quot1regex = /\"/g,\n      quot2regex = /'/g,\n      ltregex = /</g,\n      gtregex = />/g,\n      ampSTR = \"&amp;\",\n      quot1STR = \"&quot;\",\n      quot2STR = \"&#39;\",\n      ltSTR = \"&lt;\",\n      gtSTR = \"&gt;\",\n      IdCounter = 0,\n      gradientUnitNames = {\n    userSpaceOnUse: \"userSpaceOnUse\",\n    objectBoundingBox: \"objectBoundingBox\"\n  },\n      math = Math,\n      toFloat = parseFloat,\n      mmax = math.max,\n      abs = math.abs,\n      pow = math.pow,\n      Str = String,\n      separator = /[, ]+/,\n      attributeParser = {\n    blur: function blur() {},\n    transform: function transform() {},\n    src: function src() {\n      var conf = arguments[1],\n          attrsObj = conf.attrs,\n          value = attrsObj.src;\n      conf.attrSTR += XLINK + value + QUOT;\n    },\n    path: function path() {\n      var conf = arguments[1],\n          attrsObj = conf.attrs,\n          value = attrsObj.path;\n      value = R._pathToAbsolute(value || BLANK);\n      conf.attrSTR += DTAG + (value.toString && value.toString() || BLANK).replace(commaSanitizerReg, SPACE) + QUOT;\n    },\n    gradient: function gradient(node, conf, defs) {\n      var attrsObj = node.attrs,\n          value = attrsObj.gradient,\n          type = LINEAR,\n          id = value,\n          angle,\n          vector,\n          max,\n          dots,\n          fx = .5,\n          fy = .5,\n          gStr = BLANK,\n          gCloseStr = BLANK,\n          stopStr = BLANK,\n          i,\n          ln,\n          cx,\n          cy,\n          r,\n          units;\n      id = id.replace(idSanitizerReg, UNDERSCORE);\n\n      if (!defs[id]) {\n        value = Str(value).replace(R._radial_gradient, function (all, _opts) {\n          var _fx,\n              _fy,\n              dir,\n              _r,\n              _cx,\n              _cy,\n              sqx,\n              opts = _opts,\n              shifted;\n\n          opts = opts && opts.split(\",\") || [];\n          type = RADIAL;\n          _fx = opts[0];\n          _fy = opts[1];\n          _r = opts[2];\n          _cx = opts[3];\n          _cy = opts[4];\n          units = opts[5];\n          shifted = _fx && _fy;\n\n          if (_r) {\n            r = /\\%/.test(_r) ? _r : toFloat(_r);\n          }\n\n          if (units === gradientUnitNames.userSpaceOnUse) {\n            if (shifted) {\n              fx = _fx;\n              fy = _fy;\n            }\n\n            if (_cx && _cy) {\n              cx = _cx;\n              cy = _cy;\n\n              if (!shifted) {\n                fx = cx;\n                fy = cy;\n              }\n            }\n\n            return BLANK;\n          }\n\n          if (shifted) {\n            fx = toFloat(_fx);\n            fy = toFloat(_fy);\n            dir = (fy > .5) * 2 - 1;\n            (sqx = pow(fx - .5, 2)) + pow(fy - .5, 2) > .25 && sqx < .25 && (fy = math.sqrt(.25 - sqx) * dir + .5) && fy !== .5 && (fy = fy.toFixed(5) - 1e-5 * dir);\n          }\n\n          if (_cx && _cy) {\n            cx = toFloat(_cx);\n            cy = toFloat(_cy);\n            dir = (cy > .5) * 2 - 1;\n            (sqx = pow(cx - .5, 2)) + pow(cy - .5, 2) > .25 && sqx < .25 && (cy = math.sqrt(.25 - sqx) * dir + .5) && cy !== .5 && (cy = cy.toFixed(5) - 1e-5 * dir);\n\n            if (!shifted) {\n              fx = cx;\n              fy = cy;\n            }\n          }\n\n          return BLANK;\n        });\n        value = value.split(/\\s*\\-\\s*/);\n\n        if (type === LINEAR) {\n          angle = value.shift();\n          angle = -toFloat(angle);\n\n          if (isNaN(angle)) {\n            return null;\n          }\n\n          vector = [0, 0, math.cos(R.rad(angle)), math.sin(R.rad(angle))];\n          max = 1 / (mmax(abs(vector[2]), abs(vector[3])) || 1);\n          vector[2] *= max;\n          vector[3] *= max;\n\n          if (vector[2] < 0) {\n            vector[0] = -vector[2];\n            vector[2] = 0;\n          }\n\n          if (vector[3] < 0) {\n            vector[1] = -vector[3];\n            vector[3] = 0;\n          }\n        }\n\n        dots = R._parseDots(value);\n\n        if (!dots) {\n          return null;\n        }\n\n        if (type === RADIAL) {\n          gStr = RGRADIENTSTR1 + fx + RGRADIENTSTR2 + fy + RGRADIENTSTR6 + cy + RGRADIENTSTR5 + cx + RGRADIENTSTR7 + r + RGRADIENTSTR8 + units + ID + id + RGRADIENTSTR4;\n          gCloseStr = RGRADIENTSTR3;\n        } else {\n          gStr = LGRADIENTSTR1 + vector[0] + LGRADIENTSTR2 + vector[1] + LGRADIENTSTR3 + vector[2] + LGRADIENTSTR4 + vector[3] + LGRADIENTSTR5 + node.matrix.invert() + BRACKETCLOSE + ID + id + RGRADIENTSTR4;\n          gCloseStr = LGRADIENTSTR6;\n        }\n\n        for (i = 0, ln = dots.length; i < ln; i++) {\n          stopStr += STOPSTR1 + STOPSTR2 + (dots[i].offset ? dots[i].offset : i ? PERCENT100 : PERCENT0) + STOPSTR3 + (dots[i].color || COLORWHITE) + STOPSTR4 + (dots[i].opacity === UNDEF ? 1 : dots[i].opacity) + STOPSTR5;\n        }\n\n        defs[id] = true;\n        defs.str += gStr + stopStr + gCloseStr;\n      }\n\n      conf.attrSTR += FILLSTR3 + id + URLCLOSE;\n    },\n    fill: function fill(node, conf) {\n      var attrsObj = conf.attrs,\n          value = attrsObj.fill,\n          color,\n          opacity;\n\n      if (!node.attrs.gradient) {\n        color = R.color(value);\n        opacity = color.opacity;\n\n        if (node.type === TXTNODE) {\n          conf.styleSTR += FILLSTR1 + color + SCOLONSPACE + STROKEOPAC + COLON + 0 + SCOLONSPACE;\n        } else {\n          conf.attrSTR += FILLSTR2 + color + QUOT;\n\n          if (!attrsObj[\"fill-opacity\"] && (opacity || opacity === 0)) {\n            conf.attrSTR += FILLSTR4 + opacity + QUOT;\n          }\n        }\n      }\n    },\n    stroke: function stroke(node, conf) {\n      var attrsObj = conf.attrs,\n          value = attrsObj.stroke,\n          color,\n          opacity;\n      color = R.color(value);\n      opacity = color.opacity;\n\n      if (node.type !== TXTNODE) {\n        conf.attrSTR += STROKE1 + color + QUOT;\n\n        if (!attrsObj[STROKEOPAC] && (opacity || opacity === 0)) {\n          conf.attrSTR += STROKE2 + opacity + QUOT;\n        }\n      }\n    },\n    \"clip-rect\": function clipRect(node, conf, defs) {\n      var attrsObj = conf.attrs,\n          value = Str(attrsObj[CLIPRECT]),\n          rect = value.split(separator),\n          id = value.replace(idSanitizerReg, UNDERSCORE) + UNDERSCORE + UNDERSCORE + IdCounter++;\n\n      if (rect.length === 4) {\n        if (!defs[id]) {\n          defs[id] = true;\n          defs.str += CLIPSTR1 + id + CLIPSTR2 + rect[0] + CLIPSTR3 + rect[1] + CLIPSTR4 + rect[2] + CLIPSTR5 + rect[3] + CLIPSTR8 + node.matrix.invert().toMatrixString().replace(matrixSanitizerReg, BLANK) + BRACKETCLOSE + CLIPSTR6;\n        }\n\n        conf.attrSTR += CLIPSTR7 + id + BRACKETCLOSE + QUOT;\n      }\n    },\n    cursor: function cursor() {\n      var conf = arguments[1],\n          attrsObj = conf.attrs,\n          value = attrsObj.cursor;\n\n      if (value) {\n        conf.styleSTR += CURSOR + value + SCOLONSPACE;\n      }\n    },\n    font: function font() {\n      var conf = arguments[1],\n          attrsObj = conf.attrs,\n          value = attrsObj.font;\n      conf.styleSTR += FONT + COLON + value.replace(/\\\"/gi, SPACE) + SCOLONSPACE;\n    },\n    \"font-size\": function fontSize() {\n      var conf = arguments[1],\n          attrsObj = conf.attrs,\n          value = (0, _lib.pluck)(attrsObj[FONTSIZE], \"10\");\n\n      if (value && value.replace) {\n        value = value.replace(retriveNumReg, BLANK);\n      }\n\n      conf.styleSTR += FONTSIZE + COLON + value + PXSPACE;\n    },\n    \"font-weight\": function fontWeight() {\n      var conf = arguments[1],\n          attrsObj = conf.attrs,\n          value = attrsObj[FONTWEIGHT];\n      conf.styleSTR += FONTWEIGHT + COLON + value + SCOLONSPACE;\n    },\n    \"font-family\": function fontFamily() {\n      var conf = arguments[1],\n          attrsObj = conf.attrs,\n          value = attrsObj[FONTFAMILY];\n      conf.styleSTR += FONTFAMILY + COLON + value + SCOLONSPACE;\n    },\n    \"line-height\": _lib.stubFN,\n    \"clip-path\": _lib.stubFN,\n    visibility: _lib.stubFN,\n    \"vertical-align\": _lib.stubFN,\n    \"text-anchor\": function textAnchor(node, conf) {\n      var attrsObj = conf.attrs,\n          value = attrsObj[TEXTANCHOR] || MIDDLE;\n\n      if (node.type === TXTNODE) {\n        conf.attrSTR += SPACE + TEXTANCHOR + EQUALQUOT + value + QUOT;\n      }\n    },\n    title: _lib.stubFN,\n    text: function text() {\n      var conf = arguments[1],\n          attrsObj = conf.attrs,\n          value = attrsObj.text,\n          fontSize = (0, _lib.pluck)(attrsObj[FONTSIZE], attrsObj[FONT], \"10\"),\n          lineHeight = (0, _lib.pluck)(attrsObj[LINEHEIGHT]),\n          baseHeight,\n          x,\n          valign,\n          texts,\n          i,\n          ii,\n          baseAdjust,\n          text;\n\n      if (fontSize && fontSize.replace) {\n        fontSize = fontSize.replace(retriveNumReg, BLANK);\n      }\n\n      fontSize = (0, _lib.pluckNumber)(fontSize);\n\n      if (lineHeight && lineHeight.replace) {\n        lineHeight = lineHeight.replace(retriveNumReg, BLANK);\n      }\n\n      lineHeight = (0, _lib.pluckNumber)(lineHeight, fontSize && fontSize * 1.2);\n      baseHeight = fontSize ? fontSize * .85 : lineHeight * .75;\n      x = attrsObj.x;\n      valign = (0, _lib.pluck)(attrsObj[VALIGNSTR], MIDDLE).toLowerCase();\n      texts = Str(value).split(textNewLineReg);\n      ii = texts.length;\n      i = 0;\n      baseAdjust = valign === TOP ? baseHeight : valign === BOTTOM ? baseHeight - lineHeight * ii : baseHeight - lineHeight * ii * .5;\n\n      for (; i < ii; i++) {\n        conf.textSTR += TSPANSTR1;\n        text = (texts[i] || BLANK).replace(ampregex, ampSTR).replace(quot1regex, quot1STR).replace(quot2regex, quot2STR).replace(ltregex, ltSTR).replace(gtregex, gtSTR);\n\n        if (i) {\n          conf.textSTR += TSPANSTR2 + lineHeight + TSPANSTR3 + x + QUOTSPACE;\n        } else {\n          conf.textSTR += TSPANSTR4 + baseAdjust + QUOT;\n        }\n\n        conf.textSTR += GT + text + TSPANSTR6;\n      }\n    }\n  },\n      parseNode = function parseNode(node, defs) {\n    var xmlSTR = BLANK,\n        conf = {\n      attrSTR: BLANK,\n      styleSTR: BLANK,\n      textSTR: BLANK,\n      attrs: node.attr()\n    },\n        isShadow = node.isShadow,\n        childXMLSTR = BLANK,\n        nextXMLSTR = BLANK,\n        attrName,\n        styleName,\n        nodeType,\n        attrs = conf.attrs;\n\n    if (node.node.style.display !== NONE && !isShadow) {\n      for (attrName in attrs) {\n        if (attrName !== GRADIENT && (availableAttrs[attrName] !== UNDEF || attributeParser[attrName]) && attrs[attrName] !== UNDEF) {\n          if (attributeParser[attrName]) {\n            attributeParser[attrName](node, conf, defs);\n          } else {\n            conf.attrSTR += SPACE + attrName + EQUALQUOT + attrs[attrName] + QUOT;\n          }\n        }\n      }\n\n      if (node.attrs.gradient) {\n        attributeParser.gradient(node, conf, defs);\n      }\n\n      if (node.type === RECT && attrs.r) {\n        conf.attrSTR += SPACE + RX + EQUALQUOT + attrs.r + QUOT + SPACE + RY + EQUALQUOT + attrs.r + QUOT;\n      }\n\n      for (styleName in node.styles) {\n        conf.styleSTR += styleName + COLON + node.styles[styleName] + SCOLONSPACE;\n      }\n\n      if (node.type === IMGNODE) {\n        conf.attrSTR += ASPRATIO;\n      }\n\n      if (node.type === TXTNODE && !attrs[TEXTANCHOR]) {\n        attributeParser[TEXTANCHOR](node, conf);\n      }\n\n      if (node.bottom) {\n        childXMLSTR = parseNode(node.bottom, defs);\n      }\n\n      if (node.next) {\n        nextXMLSTR = parseNode(node.next, defs);\n      }\n\n      nodeType = node.type;\n\n      if (nodeType.match(grouptagtestReg)) {\n        nodeType = \"g\";\n      }\n\n      xmlSTR += LT + nodeType + NODESTRPART2 + node.matrix.toMatrixString().replace(matrixSanitizerReg, BLANK) + NODESTRPART3 + conf.styleSTR + QUOT + conf.attrSTR + GT + conf.textSTR + childXMLSTR + NODESTRPART5 + nodeType + GT + nextXMLSTR;\n    } else {\n      if (node.next) {\n        xmlSTR += parseNode(node.next, defs);\n      }\n    }\n\n    return xmlSTR;\n  };\n\n  if (R.vml) {\n    R.fn.toSVG = function (keepImages) {\n      var paper = this,\n          svg = BLANK,\n          defs = {\n        str: BLANK\n      },\n          childXMLSTR = BLANK;\n      svg = '<svg style=\"overflow: hidden; position: relative;\" xmlns=\"http://www.w3.org/2000/svg\"' + ' xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"' + paper.width + '\" version=\"1.1\" height=\"' + paper.height + '\">';\n\n      if (paper.bottom) {\n        childXMLSTR = parseNode(paper.bottom, defs);\n      }\n\n      svg += \"<defs>\" + defs.str + \"</defs>\" + childXMLSTR + \"</svg>\";\n\n      if (!keepImages) {\n        svg = svg.replace(/<image[^\\>]*\\>[^\\>]*\\>/gi, function (str) {\n          if (str.match(/href=\\\"data\\:image/i)) {\n            return str;\n          }\n\n          return BLANK;\n        });\n      }\n\n      return svg;\n    };\n  }\n}","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/core/src/_internal/redraphael/redraphael.export.vml.js"],"names":["exports","__esModule","default","_default","_lib","require","R","UNDEF","availableAttrs","_availableAttrs","NONE","BLANK","SPACE","UNDERSCORE","COLON","SCOLONSPACE","EQUALQUOT","QUOT","QUOTSPACE","LT","GT","NODESTRPART5","XLINK","IMGNODE","TXTNODE","GRADIENT","RECT","ASPRATIO","NODESTRPART2","NODESTRPART3","VALIGNSTR","TEXTANCHOR","MIDDLE","TOP","BOTTOM","FONTSIZE","FONT","LINEHEIGHT","FONTFAMILY","FONTWEIGHT","CURSOR","TSPANSTR1","TSPANSTR2","TSPANSTR3","TSPANSTR4","RX","RY","TSPANSTR6","PXSPACE","CLIPRECT","CLIPSTR1","CLIPSTR2","CLIPSTR3","CLIPSTR4","CLIPSTR5","CLIPSTR6","CLIPSTR7","CLIPSTR8","URLCLOSE","BRACKETCLOSE","DTAG","FILLSTR1","FILLSTR2","FILLSTR3","FILLSTR4","STROKE1","STROKE2","STROKEOPAC","LINEAR","RADIAL","RGRADIENTSTR1","RGRADIENTSTR3","RGRADIENTSTR2","RGRADIENTSTR6","RGRADIENTSTR5","RGRADIENTSTR7","RGRADIENTSTR8","ID","RGRADIENTSTR4","LGRADIENTSTR6","LGRADIENTSTR5","LGRADIENTSTR1","LGRADIENTSTR2","LGRADIENTSTR3","LGRADIENTSTR4","STOPSTR1","STOPSTR2","STOPSTR3","STOPSTR4","STOPSTR5","COLORWHITE","PERCENT100","PERCENT0","matrixSanitizerReg","commaSanitizerReg","textNewLineReg","retriveNumReg","idSanitizerReg","grouptagtestReg","ampregex","quot1regex","quot2regex","ltregex","gtregex","ampSTR","quot1STR","quot2STR","ltSTR","gtSTR","IdCounter","gradientUnitNames","userSpaceOnUse","objectBoundingBox","math","Math","toFloat","parseFloat","mmax","max","abs","pow","Str","String","separator","attributeParser","blur","transform","src","conf","arguments","attrsObj","attrs","value","attrSTR","path","_pathToAbsolute","toString","replace","gradient","node","defs","type","id","angle","vector","dots","fx","fy","gStr","gCloseStr","stopStr","i","ln","cx","cy","r","units","_radial_gradient","all","_opts","_fx","_fy","dir","_r","_cx","_cy","sqx","opts","shifted","split","test","sqrt","toFixed","shift","isNaN","cos","rad","sin","_parseDots","matrix","invert","length","offset","color","opacity","str","fill","styleSTR","stroke","clipRect","rect","toMatrixString","cursor","font","fontSize","pluck","fontWeight","fontFamily","stubFN","visibility","textAnchor","title","text","lineHeight","baseHeight","x","valign","texts","ii","baseAdjust","pluckNumber","toLowerCase","textSTR","parseNode","xmlSTR","attr","isShadow","childXMLSTR","nextXMLSTR","attrName","styleName","nodeType","style","display","styles","bottom","next","match","vml","fn","toSVG","keepImages","paper","svg","width","height"],"mappings":"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","sourcesContent":["\"use strict\";exports.__esModule=true;exports.default=_default;var _lib=require(\"../../lib\");function _default(R){var UNDEF,availableAttrs=R._availableAttrs,NONE=\"none\",BLANK=\"\",SPACE=\" \",UNDERSCORE=\"_\",COLON=\":\",SCOLONSPACE=\"; \",EQUALQUOT='=\"',QUOT='\"',QUOTSPACE=QUOT+SPACE,LT=\"<\",GT=\">\",NODESTRPART5=\"</\",XLINK=' xlink:href=\"',IMGNODE=\"image\",TXTNODE=\"text\",GRADIENT=\"gradient\",RECT=\"rect\",ASPRATIO=' preserveAspectRatio=\"none\"',NODESTRPART2=' transform=\"matrix(',NODESTRPART3=')\" style=\"',VALIGNSTR=\"vertical-align\",TEXTANCHOR=\"text-anchor\",MIDDLE=\"middle\",TOP=\"top\",BOTTOM=\"bottom\",FONTSIZE=\"font-size\",FONT=\"font\",LINEHEIGHT=\"line-height\",FONTFAMILY=\"font-family\",FONTWEIGHT=\"font-weight\",CURSOR=\"cursor:\",TSPANSTR1=\"<tspan \",TSPANSTR2='dy=\"',TSPANSTR3='\" x=\"',TSPANSTR4='dy=\"',RX=\"rx\",RY=\"ry\",TSPANSTR6=\"</tspan>\",PXSPACE=\"px; \",CLIPRECT=\"clip-rect\",CLIPSTR1='<clipPath id=\"',CLIPSTR2='\"><rect x=\"',CLIPSTR3='\" y=\"',CLIPSTR4='\" width=\"',CLIPSTR5='\" height=\"',CLIPSTR6='\"/></clipPath>',CLIPSTR7=' clip-path=\"url(#',CLIPSTR8=QUOT+NODESTRPART2,URLCLOSE=\"')\\\"\",BRACKETCLOSE=\")\",DTAG=' d=\"',FILLSTR1=\"fill:\",FILLSTR2=' fill=\"',FILLSTR3=\" fill=\\\"url('#\",FILLSTR4=' fill-opacity=\"',STROKE1=' stroke=\"',STROKE2=' stroke-opacity=\"',STROKEOPAC=\"stroke-opacity\",LINEAR=\"linear\",RADIAL=\"radial\",RGRADIENTSTR1='<radialGradient fx = \"',RGRADIENTSTR3=\"</radialGradient>\",RGRADIENTSTR2='\" fy = \"',RGRADIENTSTR6='\" cy = \"',RGRADIENTSTR5='\" cx = \"',RGRADIENTSTR7='\" r = \"',RGRADIENTSTR8='\" gradientUnits = \"',ID='\" id = \"',RGRADIENTSTR4='\">',LGRADIENTSTR6=\"</linearGradient>\",LGRADIENTSTR5='\" gradientTransform =\"matrix(',LGRADIENTSTR1='<linearGradient x1 = \"',LGRADIENTSTR2='\" y1 = \"',LGRADIENTSTR3='\" x2 = \"',LGRADIENTSTR4='\" y2 = \"',STOPSTR1=\"<stop\",STOPSTR2=' offset=\"',STOPSTR3='\" stop-color=\"',STOPSTR4='\" stop-opacity=\"',STOPSTR5='\" />',COLORWHITE=\"#fff\",PERCENT100=\"100%\",PERCENT0=\"0%\",matrixSanitizerReg=/^matrix\\(|\\)$/g,commaSanitizerReg=/\\,/g,textNewLineReg=/\\n|<br\\s*?\\/?>/gi,retriveNumReg=/[^\\d\\.]/gi,idSanitizerReg=/[\\%\\(\\)\\s,\\xb0#]/g,grouptagtestReg=/group/gi,ampregex=/&/g,quot1regex=/\"/g,quot2regex=/'/g,ltregex=/</g,gtregex=/>/g,ampSTR=\"&amp;\",quot1STR=\"&quot;\",quot2STR=\"&#39;\",ltSTR=\"&lt;\",gtSTR=\"&gt;\",IdCounter=0,gradientUnitNames={userSpaceOnUse:\"userSpaceOnUse\",objectBoundingBox:\"objectBoundingBox\"},math=Math,toFloat=parseFloat,mmax=math.max,abs=math.abs,pow=math.pow,Str=String,separator=/[, ]+/,attributeParser={blur:function blur(){},transform:function transform(){},src:function src(){var conf=arguments[1],attrsObj=conf.attrs,value=attrsObj.src;conf.attrSTR+=XLINK+value+QUOT},path:function path(){var conf=arguments[1],attrsObj=conf.attrs,value=attrsObj.path;value=R._pathToAbsolute(value||BLANK);conf.attrSTR+=DTAG+(value.toString&&value.toString()||BLANK).replace(commaSanitizerReg,SPACE)+QUOT},gradient:function gradient(node,conf,defs){var attrsObj=node.attrs,value=attrsObj.gradient,type=LINEAR,id=value,angle,vector,max,dots,fx=.5,fy=.5,gStr=BLANK,gCloseStr=BLANK,stopStr=BLANK,i,ln,cx,cy,r,units;id=id.replace(idSanitizerReg,UNDERSCORE);if(!defs[id]){value=Str(value).replace(R._radial_gradient,(function(all,_opts){var _fx,_fy,dir,_r,_cx,_cy,sqx,opts=_opts,shifted;opts=opts&&opts.split(\",\")||[];type=RADIAL;_fx=opts[0];_fy=opts[1];_r=opts[2];_cx=opts[3];_cy=opts[4];units=opts[5];shifted=_fx&&_fy;if(_r){r=/\\%/.test(_r)?_r:toFloat(_r)}if(units===gradientUnitNames.userSpaceOnUse){if(shifted){fx=_fx;fy=_fy}if(_cx&&_cy){cx=_cx;cy=_cy;if(!shifted){fx=cx;fy=cy}}return BLANK}if(shifted){fx=toFloat(_fx);fy=toFloat(_fy);dir=(fy>.5)*2-1;(sqx=pow(fx-.5,2))+pow(fy-.5,2)>.25&&sqx<.25&&(fy=math.sqrt(.25-sqx)*dir+.5)&&fy!==.5&&(fy=fy.toFixed(5)-1e-5*dir)}if(_cx&&_cy){cx=toFloat(_cx);cy=toFloat(_cy);dir=(cy>.5)*2-1;(sqx=pow(cx-.5,2))+pow(cy-.5,2)>.25&&sqx<.25&&(cy=math.sqrt(.25-sqx)*dir+.5)&&cy!==.5&&(cy=cy.toFixed(5)-1e-5*dir);if(!shifted){fx=cx;fy=cy}}return BLANK}));value=value.split(/\\s*\\-\\s*/);if(type===LINEAR){angle=value.shift();angle=-toFloat(angle);if(isNaN(angle)){return null}vector=[0,0,math.cos(R.rad(angle)),math.sin(R.rad(angle))];max=1/(mmax(abs(vector[2]),abs(vector[3]))||1);vector[2]*=max;vector[3]*=max;if(vector[2]<0){vector[0]=-vector[2];vector[2]=0}if(vector[3]<0){vector[1]=-vector[3];vector[3]=0}}dots=R._parseDots(value);if(!dots){return null}if(type===RADIAL){gStr=RGRADIENTSTR1+fx+RGRADIENTSTR2+fy+RGRADIENTSTR6+cy+RGRADIENTSTR5+cx+RGRADIENTSTR7+r+RGRADIENTSTR8+units+ID+id+RGRADIENTSTR4;gCloseStr=RGRADIENTSTR3}else{gStr=LGRADIENTSTR1+vector[0]+LGRADIENTSTR2+vector[1]+LGRADIENTSTR3+vector[2]+LGRADIENTSTR4+vector[3]+LGRADIENTSTR5+node.matrix.invert()+BRACKETCLOSE+ID+id+RGRADIENTSTR4;gCloseStr=LGRADIENTSTR6}for(i=0,ln=dots.length;i<ln;i++){stopStr+=STOPSTR1+STOPSTR2+(dots[i].offset?dots[i].offset:i?PERCENT100:PERCENT0)+STOPSTR3+(dots[i].color||COLORWHITE)+STOPSTR4+(dots[i].opacity===UNDEF?1:dots[i].opacity)+STOPSTR5}defs[id]=true;defs.str+=gStr+stopStr+gCloseStr}conf.attrSTR+=FILLSTR3+id+URLCLOSE},fill:function fill(node,conf){var attrsObj=conf.attrs,value=attrsObj.fill,color,opacity;if(!node.attrs.gradient){color=R.color(value);opacity=color.opacity;if(node.type===TXTNODE){conf.styleSTR+=FILLSTR1+color+SCOLONSPACE+STROKEOPAC+COLON+0+SCOLONSPACE}else{conf.attrSTR+=FILLSTR2+color+QUOT;if(!attrsObj[\"fill-opacity\"]&&(opacity||opacity===0)){conf.attrSTR+=FILLSTR4+opacity+QUOT}}}},stroke:function stroke(node,conf){var attrsObj=conf.attrs,value=attrsObj.stroke,color,opacity;color=R.color(value);opacity=color.opacity;if(node.type!==TXTNODE){conf.attrSTR+=STROKE1+color+QUOT;if(!attrsObj[STROKEOPAC]&&(opacity||opacity===0)){conf.attrSTR+=STROKE2+opacity+QUOT}}},\"clip-rect\":function clipRect(node,conf,defs){var attrsObj=conf.attrs,value=Str(attrsObj[CLIPRECT]),rect=value.split(separator),id=value.replace(idSanitizerReg,UNDERSCORE)+UNDERSCORE+UNDERSCORE+IdCounter++;if(rect.length===4){if(!defs[id]){defs[id]=true;defs.str+=CLIPSTR1+id+CLIPSTR2+rect[0]+CLIPSTR3+rect[1]+CLIPSTR4+rect[2]+CLIPSTR5+rect[3]+CLIPSTR8+node.matrix.invert().toMatrixString().replace(matrixSanitizerReg,BLANK)+BRACKETCLOSE+CLIPSTR6}conf.attrSTR+=CLIPSTR7+id+BRACKETCLOSE+QUOT}},cursor:function cursor(){var conf=arguments[1],attrsObj=conf.attrs,value=attrsObj.cursor;if(value){conf.styleSTR+=CURSOR+value+SCOLONSPACE}},font:function font(){var conf=arguments[1],attrsObj=conf.attrs,value=attrsObj.font;conf.styleSTR+=FONT+COLON+value.replace(/\\\"/gi,SPACE)+SCOLONSPACE},\"font-size\":function fontSize(){var conf=arguments[1],attrsObj=conf.attrs,value=(0,_lib.pluck)(attrsObj[FONTSIZE],\"10\");if(value&&value.replace){value=value.replace(retriveNumReg,BLANK)}conf.styleSTR+=FONTSIZE+COLON+value+PXSPACE},\"font-weight\":function fontWeight(){var conf=arguments[1],attrsObj=conf.attrs,value=attrsObj[FONTWEIGHT];conf.styleSTR+=FONTWEIGHT+COLON+value+SCOLONSPACE},\"font-family\":function fontFamily(){var conf=arguments[1],attrsObj=conf.attrs,value=attrsObj[FONTFAMILY];conf.styleSTR+=FONTFAMILY+COLON+value+SCOLONSPACE},\"line-height\":_lib.stubFN,\"clip-path\":_lib.stubFN,visibility:_lib.stubFN,\"vertical-align\":_lib.stubFN,\"text-anchor\":function textAnchor(node,conf){var attrsObj=conf.attrs,value=attrsObj[TEXTANCHOR]||MIDDLE;if(node.type===TXTNODE){conf.attrSTR+=SPACE+TEXTANCHOR+EQUALQUOT+value+QUOT}},title:_lib.stubFN,text:function text(){var conf=arguments[1],attrsObj=conf.attrs,value=attrsObj.text,fontSize=(0,_lib.pluck)(attrsObj[FONTSIZE],attrsObj[FONT],\"10\"),lineHeight=(0,_lib.pluck)(attrsObj[LINEHEIGHT]),baseHeight,x,valign,texts,i,ii,baseAdjust,text;if(fontSize&&fontSize.replace){fontSize=fontSize.replace(retriveNumReg,BLANK)}fontSize=(0,_lib.pluckNumber)(fontSize);if(lineHeight&&lineHeight.replace){lineHeight=lineHeight.replace(retriveNumReg,BLANK)}lineHeight=(0,_lib.pluckNumber)(lineHeight,fontSize&&fontSize*1.2);baseHeight=fontSize?fontSize*.85:lineHeight*.75;x=attrsObj.x;valign=(0,_lib.pluck)(attrsObj[VALIGNSTR],MIDDLE).toLowerCase();texts=Str(value).split(textNewLineReg);ii=texts.length;i=0;baseAdjust=valign===TOP?baseHeight:valign===BOTTOM?baseHeight-lineHeight*ii:baseHeight-lineHeight*ii*.5;for(;i<ii;i++){conf.textSTR+=TSPANSTR1;text=(texts[i]||BLANK).replace(ampregex,ampSTR).replace(quot1regex,quot1STR).replace(quot2regex,quot2STR).replace(ltregex,ltSTR).replace(gtregex,gtSTR);if(i){conf.textSTR+=TSPANSTR2+lineHeight+TSPANSTR3+x+QUOTSPACE}else{conf.textSTR+=TSPANSTR4+baseAdjust+QUOT}conf.textSTR+=GT+text+TSPANSTR6}}},parseNode=function parseNode(node,defs){var xmlSTR=BLANK,conf={attrSTR:BLANK,styleSTR:BLANK,textSTR:BLANK,attrs:node.attr()},isShadow=node.isShadow,childXMLSTR=BLANK,nextXMLSTR=BLANK,attrName,styleName,nodeType,attrs=conf.attrs;if(node.node.style.display!==NONE&&!isShadow){for(attrName in attrs){if(attrName!==GRADIENT&&(availableAttrs[attrName]!==UNDEF||attributeParser[attrName])&&attrs[attrName]!==UNDEF){if(attributeParser[attrName]){attributeParser[attrName](node,conf,defs)}else{conf.attrSTR+=SPACE+attrName+EQUALQUOT+attrs[attrName]+QUOT}}}if(node.attrs.gradient){attributeParser.gradient(node,conf,defs)}if(node.type===RECT&&attrs.r){conf.attrSTR+=SPACE+RX+EQUALQUOT+attrs.r+QUOT+SPACE+RY+EQUALQUOT+attrs.r+QUOT}for(styleName in node.styles){conf.styleSTR+=styleName+COLON+node.styles[styleName]+SCOLONSPACE}if(node.type===IMGNODE){conf.attrSTR+=ASPRATIO}if(node.type===TXTNODE&&!attrs[TEXTANCHOR]){attributeParser[TEXTANCHOR](node,conf)}if(node.bottom){childXMLSTR=parseNode(node.bottom,defs)}if(node.next){nextXMLSTR=parseNode(node.next,defs)}nodeType=node.type;if(nodeType.match(grouptagtestReg)){nodeType=\"g\"}xmlSTR+=LT+nodeType+NODESTRPART2+node.matrix.toMatrixString().replace(matrixSanitizerReg,BLANK)+NODESTRPART3+conf.styleSTR+QUOT+conf.attrSTR+GT+conf.textSTR+childXMLSTR+NODESTRPART5+nodeType+GT+nextXMLSTR}else{if(node.next){xmlSTR+=parseNode(node.next,defs)}}return xmlSTR};if(R.vml){R.fn.toSVG=function(keepImages){var paper=this,svg=BLANK,defs={str:BLANK},childXMLSTR=BLANK;svg='<svg style=\"overflow: hidden; position: relative;\" xmlns=\"http://www.w3.org/2000/svg\"'+' xmlns:xlink=\"http://www.w3.org/1999/xlink\" width=\"'+paper.width+'\" version=\"1.1\" height=\"'+paper.height+'\">';if(paper.bottom){childXMLSTR=parseNode(paper.bottom,defs)}svg+=\"<defs>\"+defs.str+\"</defs>\"+childXMLSTR+\"</svg>\";if(!keepImages){svg=svg.replace(/<image[^\\>]*\\>[^\\>]*\\>/gi,(function(str){if(str.match(/href=\\\"data\\:image/i)){return str}return BLANK}))}return svg}}}"]},"metadata":{},"sourceType":"script"}