{"ast":null,"code":"\"use strict\";\n\nvar _interopRequireDefault = require(\"@babel/runtime/helpers/interopRequireDefault\");\n\nexports.__esModule = true;\nexports.utcYearObj = exports.default = void 0;\n\nvar _timeIntervalUtcYear = _interopRequireDefault(require(\"./time-interval-utcYear.js\"));\n\nvar _timeIntervalclip = require(\"../time-intervalclip\");\n\nvar _durations = require(\"../durations.js\");\n\nvar utcYearObj = {\n  name: \"year\",\n  floor: function floor(d, clippedDates, timeUniverse) {\n    d.setUTCMonth(0, 1);\n    return new Date(Number((0, _timeIntervalclip.getFloor)(new Date(Number(d.setUTCHours(0, 0, 0, 0))), clippedDates, timeUniverse)));\n  },\n  offset: function offset(d, s, clippedDates, timeUniverse) {\n    var isPositiveOffset = s > 0,\n        dateObj = {\n      date: new Date(Number(d))\n    },\n        cloneDate = new Date(Number(JSON.parse(JSON.stringify(dateObj)).date));\n    return new Date(Number(isPositiveOffset ? (0, _timeIntervalclip.clampDownDateWithinClip)(dateObj.date, new Date(Number(cloneDate.setUTCFullYear(cloneDate.getUTCFullYear() + s))), clippedDates, timeUniverse) : (0, _timeIntervalclip.clampUpDateWithinClip)(dateObj.date, new Date(Number(cloneDate.setUTCFullYear(cloneDate.getUTCFullYear() + s))), clippedDates, timeUniverse)));\n  },\n  count: function count(s, e, clippedDates) {\n    var clipArray = (0, _timeIntervalclip.getValidDatesWithin)(clippedDates, s, e),\n        clipDuration = 0,\n        clipDates = (0, _timeIntervalclip.getClampRangesAround)(clippedDates, e);\n    clipArray = (0, _timeIntervalclip.getClipArray)(clipDates, clipArray);\n    clipArray.forEach(function (date) {\n      clipDuration += Number(date.to) - Number(date.from);\n    });\n    return e.getUTCFullYear() - s.getUTCFullYear() - Math.floor(clipDuration / _durations.durationYear);\n  },\n  field: function field(d, clippedDates, timeUniverse) {\n    var dateObj = {\n      date: new Date(Number(d))\n    },\n        cloneDate = new Date(Number(dateObj.date)),\n        clipArray = [],\n        floorDate,\n        clipDuration = 0;\n    cloneDate.setUTCFullYear(0);\n    floorDate = (0, _timeIntervalclip.getFloor)(new Date(Number(cloneDate)), clippedDates, timeUniverse);\n    clipArray = (0, _timeIntervalclip.getValidDatesWithin)(clippedDates, new Date(Number(floorDate)), dateObj.date);\n    clipArray.forEach(function (date) {\n      clipDuration += Number(date.to) - Number(date.from);\n    });\n    return d.getUTCFullYear() - floorDate.getUTCFullYear() - Math.floor(clipDuration / _durations.durationYear);\n  }\n},\n    utcYear = new _timeIntervalUtcYear.default(utcYearObj);\nexports.utcYearObj = utcYearObj;\nvar _default = utcYear;\nexports.default = _default;","map":{"version":3,"sources":["C:/Users/moham/OneDrive/Desktop/04_06_2021/henaknowledge/frontend v3/henaknowledgefrontend/node_modules/@fusioncharts/utils/src/time-intervals/utc/year.js"],"names":["_interopRequireDefault","require","exports","__esModule","utcYearObj","default","_timeIntervalUtcYear","_timeIntervalclip","_durations","name","floor","d","clippedDates","timeUniverse","setUTCMonth","Date","Number","getFloor","setUTCHours","offset","s","isPositiveOffset","dateObj","date","cloneDate","JSON","parse","stringify","clampDownDateWithinClip","setUTCFullYear","getUTCFullYear","clampUpDateWithinClip","count","e","clipArray","getValidDatesWithin","clipDuration","clipDates","getClampRangesAround","getClipArray","forEach","to","from","Math","durationYear","field","floorDate","utcYear","_default"],"mappings":"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","sourcesContent":["\"use strict\";var _interopRequireDefault=require(\"@babel/runtime/helpers/interopRequireDefault\");exports.__esModule=true;exports.utcYearObj=exports.default=void 0;var _timeIntervalUtcYear=_interopRequireDefault(require(\"./time-interval-utcYear.js\"));var _timeIntervalclip=require(\"../time-intervalclip\");var _durations=require(\"../durations.js\");var utcYearObj={name:\"year\",floor:function floor(d,clippedDates,timeUniverse){d.setUTCMonth(0,1);return new Date(Number((0,_timeIntervalclip.getFloor)(new Date(Number(d.setUTCHours(0,0,0,0))),clippedDates,timeUniverse)))},offset:function offset(d,s,clippedDates,timeUniverse){var isPositiveOffset=s>0,dateObj={date:new Date(Number(d))},cloneDate=new Date(Number(JSON.parse(JSON.stringify(dateObj)).date));return new Date(Number(isPositiveOffset?(0,_timeIntervalclip.clampDownDateWithinClip)(dateObj.date,new Date(Number(cloneDate.setUTCFullYear(cloneDate.getUTCFullYear()+s))),clippedDates,timeUniverse):(0,_timeIntervalclip.clampUpDateWithinClip)(dateObj.date,new Date(Number(cloneDate.setUTCFullYear(cloneDate.getUTCFullYear()+s))),clippedDates,timeUniverse)))},count:function count(s,e,clippedDates){var clipArray=(0,_timeIntervalclip.getValidDatesWithin)(clippedDates,s,e),clipDuration=0,clipDates=(0,_timeIntervalclip.getClampRangesAround)(clippedDates,e);clipArray=(0,_timeIntervalclip.getClipArray)(clipDates,clipArray);clipArray.forEach((function(date){clipDuration+=Number(date.to)-Number(date.from)}));return e.getUTCFullYear()-s.getUTCFullYear()-Math.floor(clipDuration/_durations.durationYear)},field:function field(d,clippedDates,timeUniverse){var dateObj={date:new Date(Number(d))},cloneDate=new Date(Number(dateObj.date)),clipArray=[],floorDate,clipDuration=0;cloneDate.setUTCFullYear(0);floorDate=(0,_timeIntervalclip.getFloor)(new Date(Number(cloneDate)),clippedDates,timeUniverse);clipArray=(0,_timeIntervalclip.getValidDatesWithin)(clippedDates,new Date(Number(floorDate)),dateObj.date);clipArray.forEach((function(date){clipDuration+=Number(date.to)-Number(date.from)}));return d.getUTCFullYear()-floorDate.getUTCFullYear()-Math.floor(clipDuration/_durations.durationYear)}},utcYear=new _timeIntervalUtcYear.default(utcYearObj);exports.utcYearObj=utcYearObj;var _default=utcYear;exports.default=_default;"]},"metadata":{},"sourceType":"script"}